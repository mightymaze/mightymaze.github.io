{"db":[{"meta":{"exported_on":1487050132231,"version":"004"},"data":{"app_fields":[],"app_settings":[],"apps":[],"client_trusted_domains":[],"permissions":[{"id":1,"uuid":"f530c65e-0ea7-4a45-b6e4-ae05a272467c","name":"Export database","object_type":"db","action_type":"exportContent","object_id":null,"created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":2,"uuid":"38c131c5-889c-41c3-9298-fc6414289559","name":"Import database","object_type":"db","action_type":"importContent","object_id":null,"created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":3,"uuid":"44463ed9-ce54-4d17-9618-ef5b02a77daf","name":"Delete all content","object_type":"db","action_type":"deleteAllContent","object_id":null,"created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":4,"uuid":"db99778d-d4e0-45e0-be8d-87088d390ff1","name":"Send mail","object_type":"mail","action_type":"send","object_id":null,"created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":5,"uuid":"afd6c5fd-8cca-43d0-870c-b54152597ce3","name":"Browse notifications","object_type":"notification","action_type":"browse","object_id":null,"created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":6,"uuid":"e7d13c7d-3c9e-43bd-8f54-2b0744b60880","name":"Add notifications","object_type":"notification","action_type":"add","object_id":null,"created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":7,"uuid":"a18d8107-bfe9-4bfe-9683-e8c8d31597a5","name":"Delete notifications","object_type":"notification","action_type":"destroy","object_id":null,"created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":8,"uuid":"6c25cba4-ea11-4ea7-b0b2-067d19cc277b","name":"Browse posts","object_type":"post","action_type":"browse","object_id":null,"created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":9,"uuid":"df8e0abd-99fc-4f7a-bf17-cd2e061bd1d0","name":"Read posts","object_type":"post","action_type":"read","object_id":null,"created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":10,"uuid":"9342de1b-890d-4485-9966-a15abeaaed89","name":"Edit posts","object_type":"post","action_type":"edit","object_id":null,"created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":11,"uuid":"d87d281a-b435-4d03-918d-baf7049972de","name":"Add posts","object_type":"post","action_type":"add","object_id":null,"created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":12,"uuid":"a312c34e-460f-4cbb-ae76-5056d6dfc2c6","name":"Delete posts","object_type":"post","action_type":"destroy","object_id":null,"created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":13,"uuid":"7a0d6f87-19dd-4690-aab3-c184a4acc3db","name":"Browse settings","object_type":"setting","action_type":"browse","object_id":null,"created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":14,"uuid":"3a109dfa-478d-485d-bb73-5b460af9c9b3","name":"Read settings","object_type":"setting","action_type":"read","object_id":null,"created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":15,"uuid":"73ce164e-58bd-4049-b3b9-bd92c56299e6","name":"Edit settings","object_type":"setting","action_type":"edit","object_id":null,"created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":16,"uuid":"849fe84f-c100-4d22-a439-f4527f5c5ad8","name":"Generate slugs","object_type":"slug","action_type":"generate","object_id":null,"created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":17,"uuid":"a1acf182-6b5a-447e-aac3-8d165503a1e1","name":"Browse tags","object_type":"tag","action_type":"browse","object_id":null,"created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":18,"uuid":"f55b4b6b-5ec9-43e4-878f-6765f67f3fdf","name":"Read tags","object_type":"tag","action_type":"read","object_id":null,"created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":19,"uuid":"f710ee12-7e2d-494e-9af6-ba38ade88242","name":"Edit tags","object_type":"tag","action_type":"edit","object_id":null,"created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":20,"uuid":"ec89f03a-0dd5-4cb0-885c-c04a5cd3514e","name":"Add tags","object_type":"tag","action_type":"add","object_id":null,"created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":21,"uuid":"c008b3e6-facd-488e-880c-91b539b2ee1b","name":"Delete tags","object_type":"tag","action_type":"destroy","object_id":null,"created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":22,"uuid":"cb785c17-cc1f-441e-900e-475a40655aae","name":"Browse themes","object_type":"theme","action_type":"browse","object_id":null,"created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":23,"uuid":"9b0f26c9-966b-4a26-adad-d3869a76f301","name":"Edit themes","object_type":"theme","action_type":"edit","object_id":null,"created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":24,"uuid":"ca5efd23-c1c3-45f8-a1cf-2d7f7667e668","name":"Browse users","object_type":"user","action_type":"browse","object_id":null,"created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":25,"uuid":"37186313-eb18-45a3-9a62-026647b167a5","name":"Read users","object_type":"user","action_type":"read","object_id":null,"created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":26,"uuid":"b4813f80-d556-4e77-93ae-305606a16603","name":"Edit users","object_type":"user","action_type":"edit","object_id":null,"created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":27,"uuid":"b2a986bd-a34c-4957-a076-32039bb81356","name":"Add users","object_type":"user","action_type":"add","object_id":null,"created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":28,"uuid":"3f46efb4-df03-473a-8c76-0bb55bc73860","name":"Delete users","object_type":"user","action_type":"destroy","object_id":null,"created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":29,"uuid":"0e778f19-fedc-444f-b12b-5d81b4f1607d","name":"Assign a role","object_type":"role","action_type":"assign","object_id":null,"created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":30,"uuid":"55bb13be-0066-47f3-8723-fae10f720c44","name":"Browse roles","object_type":"role","action_type":"browse","object_id":null,"created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1}],"permissions_apps":[],"permissions_roles":[{"id":1,"role_id":1,"permission_id":1},{"id":2,"role_id":1,"permission_id":2},{"id":3,"role_id":1,"permission_id":3},{"id":4,"role_id":1,"permission_id":4},{"id":5,"role_id":1,"permission_id":5},{"id":6,"role_id":1,"permission_id":6},{"id":7,"role_id":1,"permission_id":7},{"id":8,"role_id":1,"permission_id":8},{"id":9,"role_id":1,"permission_id":9},{"id":10,"role_id":1,"permission_id":10},{"id":11,"role_id":1,"permission_id":11},{"id":12,"role_id":1,"permission_id":12},{"id":13,"role_id":1,"permission_id":13},{"id":14,"role_id":1,"permission_id":14},{"id":15,"role_id":1,"permission_id":15},{"id":16,"role_id":1,"permission_id":16},{"id":17,"role_id":1,"permission_id":17},{"id":18,"role_id":1,"permission_id":18},{"id":19,"role_id":1,"permission_id":19},{"id":20,"role_id":1,"permission_id":20},{"id":21,"role_id":1,"permission_id":21},{"id":22,"role_id":1,"permission_id":22},{"id":23,"role_id":1,"permission_id":23},{"id":24,"role_id":1,"permission_id":24},{"id":25,"role_id":1,"permission_id":25},{"id":26,"role_id":1,"permission_id":26},{"id":27,"role_id":1,"permission_id":27},{"id":28,"role_id":1,"permission_id":28},{"id":29,"role_id":1,"permission_id":29},{"id":30,"role_id":1,"permission_id":30},{"id":31,"role_id":2,"permission_id":8},{"id":32,"role_id":2,"permission_id":9},{"id":33,"role_id":2,"permission_id":10},{"id":34,"role_id":2,"permission_id":11},{"id":35,"role_id":2,"permission_id":12},{"id":36,"role_id":2,"permission_id":13},{"id":37,"role_id":2,"permission_id":14},{"id":38,"role_id":2,"permission_id":16},{"id":39,"role_id":2,"permission_id":17},{"id":40,"role_id":2,"permission_id":18},{"id":41,"role_id":2,"permission_id":19},{"id":42,"role_id":2,"permission_id":20},{"id":43,"role_id":2,"permission_id":21},{"id":44,"role_id":2,"permission_id":24},{"id":45,"role_id":2,"permission_id":25},{"id":46,"role_id":2,"permission_id":26},{"id":47,"role_id":2,"permission_id":27},{"id":48,"role_id":2,"permission_id":28},{"id":49,"role_id":2,"permission_id":29},{"id":50,"role_id":2,"permission_id":30},{"id":51,"role_id":3,"permission_id":8},{"id":52,"role_id":3,"permission_id":9},{"id":53,"role_id":3,"permission_id":11},{"id":54,"role_id":3,"permission_id":13},{"id":55,"role_id":3,"permission_id":14},{"id":56,"role_id":3,"permission_id":16},{"id":57,"role_id":3,"permission_id":17},{"id":58,"role_id":3,"permission_id":18},{"id":59,"role_id":3,"permission_id":20},{"id":60,"role_id":3,"permission_id":24},{"id":61,"role_id":3,"permission_id":25},{"id":62,"role_id":3,"permission_id":30}],"permissions_users":[],"posts":[{"id":1,"uuid":"dc8b8212-be3a-4681-adea-442972f0c049","title":"Welcome to Ghost","slug":"welcome-to-ghost","markdown":"You're live! Nice. We've put together a little post to introduce you to the Ghost editor and get you started. You can manage your content by signing in to the admin area at `<your blog URL>/ghost/`. When you arrive, you can select this post from a list on the left and see a preview of it on the right. Click the little pencil icon at the top of the preview to edit this post and read the next section!\n\n## Getting Started\n\nGhost uses something called Markdown for writing. Essentially, it's a shorthand way to manage your post formatting as you write!\n\nWriting in Markdown is really easy. In the left hand panel of Ghost, you simply write as you normally would. Where appropriate, you can use *shortcuts* to **style** your content. For example, a list:\n\n* Item number one\n* Item number two\n    * A nested item\n* A final item\n\nor with numbers!\n\n1. Remember to buy some milk\n2. Drink the milk\n3. Tweet that I remembered to buy the milk, and drank it\n\n### Links\n\nWant to link to a source? No problem. If you paste in a URL, like http://ghost.org - it'll automatically be linked up. But if you want to customise your anchor text, you can do that too! Here's a link to [the Ghost website](http://ghost.org). Neat.\n\n### What about Images?\n\nImages work too! Already know the URL of the image you want to include in your article? Simply paste it in like this to make it show up:\n\n![The Ghost Logo](https://ghost.org/images/ghost.png)\n\nNot sure which image you want to use yet? That's ok too. Leave yourself a descriptive placeholder and keep writing. Come back later and drag and drop the image in to upload:\n\n![A bowl of bananas]\n\n\n### Quoting\n\nSometimes a link isn't enough, you want to quote someone on what they've said. Perhaps you've started using a new blogging platform and feel the sudden urge to share their slogan? A quote might be just the way to do it!\n\n> Ghost - Just a blogging platform\n\n### Working with Code\n\nGot a streak of geek? We've got you covered there, too. You can write inline `<code>` blocks really easily with back ticks. Want to show off something more comprehensive? 4 spaces of indentation gets you there.\n\n    .awesome-thing {\n        display: block;\n        width: 100%;\n    }\n\n### Ready for a Break? \n\nThrow 3 or more dashes down on any new line and you've got yourself a fancy new divider. Aw yeah.\n\n---\n\n### Advanced Usage\n\nThere's one fantastic secret about Markdown. If you want, you can write plain old HTML and it'll still work! Very flexible.\n\n<input type=\"text\" placeholder=\"I'm an input field!\" />\n\nThat should be enough to get you started. Have fun - and let us know what you think :)\n\n\\- awoijdoawd **oa**widj","html":"<p>You're live! Nice. We've put together a little post to introduce you to the Ghost editor and get you started. You can manage your content by signing in to the admin area at <code>&lt;your blog URL&gt;/ghost/</code>. When you arrive, you can select this post from a list on the left and see a preview of it on the right. Click the little pencil icon at the top of the preview to edit this post and read the next section!</p>\n\n<h2 id=\"gettingstarted\">Getting Started</h2>\n\n<p>Ghost uses something called Markdown for writing. Essentially, it's a shorthand way to manage your post formatting as you write!</p>\n\n<p>Writing in Markdown is really easy. In the left hand panel of Ghost, you simply write as you normally would. Where appropriate, you can use <em>shortcuts</em> to <strong>style</strong> your content. For example, a list:</p>\n\n<ul>\n<li>Item number one</li>\n<li>Item number two\n<ul><li>A nested item</li></ul></li>\n<li>A final item</li>\n</ul>\n\n<p>or with numbers!</p>\n\n<ol>\n<li>Remember to buy some milk  </li>\n<li>Drink the milk  </li>\n<li>Tweet that I remembered to buy the milk, and drank it</li>\n</ol>\n\n<h3 id=\"links\">Links</h3>\n\n<p>Want to link to a source? No problem. If you paste in a URL, like <a href=\"http://ghost.org\">http://ghost.org</a> - it'll automatically be linked up. But if you want to customise your anchor text, you can do that too! Here's a link to <a href=\"http://ghost.org\">the Ghost website</a>. Neat.</p>\n\n<h3 id=\"whataboutimages\">What about Images?</h3>\n\n<p>Images work too! Already know the URL of the image you want to include in your article? Simply paste it in like this to make it show up:</p>\n\n<p><img src=\"https://ghost.org/images/ghost.png\" alt=\"The Ghost Logo\" /></p>\n\n<p>Not sure which image you want to use yet? That's ok too. Leave yourself a descriptive placeholder and keep writing. Come back later and drag and drop the image in to upload:</p>\n\n<h3 id=\"quoting\">Quoting</h3>\n\n<p>Sometimes a link isn't enough, you want to quote someone on what they've said. Perhaps you've started using a new blogging platform and feel the sudden urge to share their slogan? A quote might be just the way to do it!</p>\n\n<blockquote>\n  <p>Ghost - Just a blogging platform</p>\n</blockquote>\n\n<h3 id=\"workingwithcode\">Working with Code</h3>\n\n<p>Got a streak of geek? We've got you covered there, too. You can write inline <code>&lt;code&gt;</code> blocks really easily with back ticks. Want to show off something more comprehensive? 4 spaces of indentation gets you there.</p>\n\n<pre><code>.awesome-thing {\n    display: block;\n    width: 100%;\n}\n</code></pre>\n\n<h3 id=\"readyforabreak\">Ready for a Break?</h3>\n\n<p>Throw 3 or more dashes down on any new line and you've got yourself a fancy new divider. Aw yeah.</p>\n\n<hr />\n\n<h3 id=\"advancedusage\">Advanced Usage</h3>\n\n<p>There's one fantastic secret about Markdown. If you want, you can write plain old HTML and it'll still work! Very flexible.</p>\n\n<p><input type=\"text\" placeholder=\"I'm an input field!\" /></p>\n\n<p>That should be enough to get you started. Have fun - and let us know what you think :)</p>\n\n<p>- awoijdoawd <strong>oa</strong>widj</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-10-17T06:30:54.000Z","updated_by":1,"published_at":"2016-04-25T07:54:52.000Z","published_by":1},{"id":2,"uuid":"abf2109c-d894-4c7f-bee5-f959a79d198e","title":"Hello World","slug":"hello-world","markdown":"![](/content/images/2014/Mar/ts3.png)\nThis is my first post on the Ghost Platform.\n\nrgba(178, 107, 255, 0.6)\n","html":"<p><img src=\"/content/images/2014/Mar/ts3.png\" alt=\"\" />\nThis is my first post on the Ghost Platform.</p>\n\n<p>rgba(178, 107, 255, 0.6)</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-03-27T15:52:23.000Z","created_by":1,"updated_at":"2014-03-27T19:57:24.000Z","updated_by":1,"published_at":"2014-03-27T15:52:23.000Z","published_by":1},{"id":3,"uuid":"7372cca2-34cf-4d88-97fb-506790043652","title":"Installing nginx on a Mac","slug":"installing-nginx-on-a-mac","markdown":"Our web applications were using Apache. But for performance optimization we needed to take it in nginx server. So I decided to install nginx on my MacBook Pro before going live to see if our application works well in the new web server.\n\nI've tried to install MNPP which I've installed before and worked perfectly. But for some reason (I don't know why) it was not working this time. So I've decided to install nginx using homebrew. Here is the little process to install nginx on your Mac.\n\n####Installing nginx\n\nnginx (pronounced “engine-x”) is a Web server and a reverse proxy server for HTTP, SMTP, POP3 and IMAP protocols, with a strong focus on high concurrency, performance and low memory usage.\n\n- To ensure Apache doesn't load on startup (Optional, I had Apache from before)\n<pre class=\"brush: shell;\">$ sudo launchctl unload -w /System/Library/LaunchDaemons/org.apache.httpd.plist</pre>\n\n- If you need any third party extensions then install now. This step is optional.\n<pre class=\"brush: shell;\">$ curl -s -L -o /tmp/nginx-upload-progress.tar.gz https://github.com/masterzen/nginx-upload-progress-module/tarball/v0.9.0 && mkdir /tmp/nginx-upload-progress && tar zxpf /tmp/nginx-upload-progress.tar.gz --strip-components 1 -C /tmp/nginx-upload-progress && rm /tmp/nginx-upload-progress.tar.gz\n\n$ curl -s -L -o /tmp/nginx-fair.tar.gz http://github.com/gnosek/nginx-upstream-fair/tarball/master && mkdir /tmp/nginx-fair && tar zxpf /tmp/nginx-fair.tar.gz --strip-components 1 -C /tmp/nginx-fair && rm /tmp/nginx-fair.tar.gz </pre>\n\n- Now one giant line of sed regex that will edit the Homebrew formula for nginx to add the additional compile options that we need. Make sure it all gets entered as one line.\n\n<pre class=\"brush: shell;\">$ sed -i '-default' 's/\\([[:space:]]*\\['\\''--\\)\\(with-webdav\\)\\('\\'',[[:space:]]*\"\\)\\(Compile with support for WebDAV module\\)\\(\"\\]\\)/\\1\\2\\3\\4\\5,%\\1with-realip\\3Compile with support for RealIP module\\5,%\\1with-gzip_static\\3Compile with support for Gzip Static module\\5,%\\1with-uploadprogress\\3Compile with support for Upload Progress module\\5,%\\1with-fair\\3Compile with support for Fair module\\5,%\\1with-mp4\\3Compile with support for MP4 module\\5,%\\1with-flv\\3Compile with support for FLV module\\5,%\\1with-stub_status\\3Compile with support for Stub Status module\\5/; s/\\([[:space:]]* args << \"--\\)\\(with-http_dav_module\\)\\(\" if ARGV.include? '\\''--with-\\)\\(webdav\\)\\('\\''.*\\)/\\1\\2\\3\\4\\5%\\1with-http_realip_module\\3realip\\5%\\1with-http_gzip_static_module\\3gzip_static\\5%\\1add-module=\\/tmp\\/nginx-upload-progress\\3uploadprogress\\5%\\1add-module=\\/tmp\\/nginx-fair\\3fair\\5%\\1with-http_mp4_module\\3mp4\\5%\\1with-http_flv_module\\3flv\\5%\\1with-http_stub_status_module\\3stub_status\\5/; y/%/\\n/' $(brew --prefix)/Library/Formula/nginx.rb</pre>\n\n- Now we'll install Nginx with our new build options and extensions and start it.\n\n<pre class=\"brush: shell;\">$ brew install nginx --with-realip --with-gzip_static --with-mp4 --with-flv --with-stub_status --with-uploadprogress --with-fair\n\n$ [ $? -eq 0 ] && rm -rf /tmp/nginx-upload-progress /tmp/nginx-fair\n\n$ mkdir -vp $(brew --prefix nginx)/var/{microcache,log,run}</pre>\n\n- <b>If you don't need above extensions and don't have Apache installed before then just start from here.</b>\n<pre class=\"brush: shell;\">$ brew install nginx</pre>\n- Nginx is compiled, backup the default nginx config\n<pre class=\"brush: shell;\">$ mv /usr/local/etc/nginx/nginx.conf /usr/local/etc/nginx/nginx.conf.bak</pre>\n- Download our config as follows\n<pre class=\"brush: shell;\">$ curl http://realityloop.com/sites/realityloop.com/files/uploads/nginx.conf_.txt > /usr/local/etc/nginx/nginx.conf</pre>\n- Set your username in the new config file\n<pre class=\"brush: shell;\">$ sed -i -e 's/\\[username\\]/'`whoami`'/' /usr/local/etc/nginx/nginx.conf</pre>\n- Make nginx log files visible in Console app for accessing in future\n<pre class=\"brush: shell;\">$ sudo mkdir /var/log/nginx</pre>\n- Create the following directorty to stop “\"/var/lib/nginx/speed\" failed (2: No such file or directory)” error\n<pre class=\"brush: shell;\">$ sudo mkdir /var/lib/nginx</pre>\n\nThat's it. nginx is installed.\n\nThank you.","html":"<p>Our web applications were using Apache. But for performance optimization we needed to take it in nginx server. So I decided to install nginx on my MacBook Pro before going live to see if our application works well in the new web server.</p>\n\n<p>I've tried to install MNPP which I've installed before and worked perfectly. But for some reason (I don't know why) it was not working this time. So I've decided to install nginx using homebrew. Here is the little process to install nginx on your Mac.</p>\n\n<h4 id=\"installingnginx\">Installing nginx</h4>\n\n<p>nginx (pronounced “engine-x”) is a Web server and a reverse proxy server for HTTP, SMTP, POP3 and IMAP protocols, with a strong focus on high concurrency, performance and low memory usage.</p>\n\n<ul>\n<li>To ensure Apache doesn't load on startup (Optional, I had Apache from before)</li>\n</ul>\n\n<pre class=\"brush: shell;\">$ sudo launchctl unload -w /System/Library/LaunchDaemons/org.apache.httpd.plist</pre>\n\n<ul>\n<li>If you need any third party extensions then install now. This step is optional.</li>\n</ul>\n\n<pre class=\"brush: shell;\">$ curl -s -L -o /tmp/nginx-upload-progress.tar.gz <a href='https://github.com/masterzen/nginx-upload-progress-module/tarball/v0.9.0'>https://github.com/masterzen/nginx-upload-progress-module/tarball/v0.9.0</a> && mkdir /tmp/nginx-upload-progress && tar zxpf /tmp/nginx-upload-progress.tar.gz --strip-components 1 -C /tmp/nginx-upload-progress && rm /tmp/nginx-upload-progress.tar.gz\n\n$ curl -s -L -o /tmp/nginx-fair.tar.gz <a href='http://github.com/gnosek/nginx-upstream-fair/tarball/master'>http://github.com/gnosek/nginx-upstream-fair/tarball/master</a> && mkdir /tmp/nginx-fair && tar zxpf /tmp/nginx-fair.tar.gz --strip-components 1 -C /tmp/nginx-fair && rm /tmp/nginx-fair.tar.gz </pre>\n\n<ul>\n<li>Now one giant line of sed regex that will edit the Homebrew formula for nginx to add the additional compile options that we need. Make sure it all gets entered as one line.</li>\n</ul>\n\n<pre class=\"brush: shell;\">$ sed -i '-default' 's/\\([[:space:]]*\\['\\''--\\)\\(with-webdav\\)\\('\\'',[[:space:]]*\"\\)\\(Compile with support for WebDAV module\\)\\(\"\\]\\)/\\1\\2\\3\\4\\5,%\\1with-realip\\3Compile with support for RealIP module\\5,%\\1with-gzip_static\\3Compile with support for Gzip Static module\\5,%\\1with-uploadprogress\\3Compile with support for Upload Progress module\\5,%\\1with-fair\\3Compile with support for Fair module\\5,%\\1with-mp4\\3Compile with support for MP4 module\\5,%\\1with-flv\\3Compile with support for FLV module\\5,%\\1with-stub_status\\3Compile with support for Stub Status module\\5/; s/\\([[:space:]]* args << \"--\\)\\(with-http_dav_module\\)\\(\" if ARGV.include? '\\''--with-\\)\\(webdav\\)\\('\\''.*\\)/\\1\\2\\3\\4\\5%\\1with-http_realip_module\\3realip\\5%\\1with-http_gzip_static_module\\3gzip_static\\5%\\1add-module=\\/tmp\\/nginx-upload-progress\\3uploadprogress\\5%\\1add-module=\\/tmp\\/nginx-fair\\3fair\\5%\\1with-http_mp4_module\\3mp4\\5%\\1with-http_flv_module\\3flv\\5%\\1with-http_stub_status_module\\3stub_status\\5/; y/%/\\n/' $(brew --prefix)/Library/Formula/nginx.rb</pre>\n\n<ul>\n<li>Now we'll install Nginx with our new build options and extensions and start it.</li>\n</ul>\n\n<pre class=\"brush: shell;\">$ brew install nginx --with-realip --with-gzip_static --with-mp4 --with-flv --with-stub_status --with-uploadprogress --with-fair\n\n$ [ $? -eq 0 ] && rm -rf /tmp/nginx-upload-progress /tmp/nginx-fair\n\n$ mkdir -vp $(brew --prefix nginx)/var/{microcache,log,run}</pre>\n\n<ul>\n<li><b>If you don't need above extensions and don't have Apache installed before then just start from here.</b></li>\n</ul>\n\n<pre class=\"brush: shell;\">$ brew install nginx</pre>  \n\n<ul>\n<li>Nginx is compiled, backup the default nginx config</li>\n</ul>\n\n<pre class=\"brush: shell;\">$ mv /usr/local/etc/nginx/nginx.conf /usr/local/etc/nginx/nginx.conf.bak</pre>  \n\n<ul>\n<li>Download our config as follows</li>\n</ul>\n\n<pre class=\"brush: shell;\">$ curl <a href='http://realityloop.com/sites/realityloop.com/files/uploads/nginx.conf_.txt'>http://realityloop.com/sites/realityloop.com/files/uploads/nginx.conf_.txt</a> > /usr/local/etc/nginx/nginx.conf</pre>  \n\n<ul>\n<li>Set your username in the new config file</li>\n</ul>\n\n<pre class=\"brush: shell;\">$ sed -i -e 's/\\[username\\]/'`whoami`'/' /usr/local/etc/nginx/nginx.conf</pre>  \n\n<ul>\n<li>Make nginx log files visible in Console app for accessing in future</li>\n</ul>\n\n<pre class=\"brush: shell;\">$ sudo mkdir /var/log/nginx</pre>  \n\n<ul>\n<li>Create the following directorty to stop “\"/var/lib/nginx/speed\" failed (2: No such file or directory)” error</li>\n</ul>\n\n<pre class=\"brush: shell;\">$ sudo mkdir /var/lib/nginx</pre>\n\n<p>That's it. nginx is installed.</p>\n\n<p>Thank you.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-03-31T05:30:46.000Z","created_by":1,"updated_at":"2014-06-27T20:15:24.000Z","updated_by":1,"published_at":"2014-03-31T05:45:52.000Z","published_by":1},{"id":4,"uuid":"7ac9c968-5dca-4480-b692-7a761cbf9512","title":"Another HTML5 Boilerplate","slug":"another-html5-boilerplate","markdown":"I've decided and made another HTML5 boilerplate based on HTML5 Boilerplate.\n\n####It contains:\n\n* HTML5 Boilerplate 4.3.0\n* Twitter Bootstrap 3.2.0\n* Font Awesome 4.1.0\n* LESS.js 1.7.3 ( just placed in dir )\n* Normalize-OpenType.css 0.1.3\n\n####Special Features:\n\n* favicon for all devices\n* windows mobile 8 responsive fix\n* long text without whitespace link break fix\n* css3 font smoothing implemented\n* reset css of an element\n* selection protection css\n* smooth animation for mobile fix\n* hardware acceleration css class\n\nMore coming soon as it will be discovered.\n\n####Why another boilerplate?\n\nTime to time I've faced that I need to gather them from their repo and put them in a place for my own project. That's why I've put them in a single repo for my own use. If you like it you are most welcome to collaborate.\n\n####What if the boilerplate gets update\n\nDon't worry if any of them gets updated then I will update them here.\n\n<a href=\"http://mazhar266.github.io/Awesome-Bootstrap-Boilerplate/\" target=\"_blank\">here</a> is the boilerplate for you to download and use.\n\nThanks.","html":"<p>I've decided and made another HTML5 boilerplate based on HTML5 Boilerplate.</p>\n\n<h4 id=\"itcontains\">It contains:</h4>\n\n<ul>\n<li>HTML5 Boilerplate 4.3.0</li>\n<li>Twitter Bootstrap 3.2.0</li>\n<li>Font Awesome 4.1.0</li>\n<li>LESS.js 1.7.3 ( just placed in dir )</li>\n<li>Normalize-OpenType.css 0.1.3</li>\n</ul>\n\n<h4 id=\"specialfeatures\">Special Features:</h4>\n\n<ul>\n<li>favicon for all devices</li>\n<li>windows mobile 8 responsive fix</li>\n<li>long text without whitespace link break fix</li>\n<li>css3 font smoothing implemented</li>\n<li>reset css of an element</li>\n<li>selection protection css</li>\n<li>smooth animation for mobile fix</li>\n<li>hardware acceleration css class</li>\n</ul>\n\n<p>More coming soon as it will be discovered.</p>\n\n<h4 id=\"whyanotherboilerplate\">Why another boilerplate?</h4>\n\n<p>Time to time I've faced that I need to gather them from their repo and put them in a place for my own project. That's why I've put them in a single repo for my own use. If you like it you are most welcome to collaborate.</p>\n\n<h4 id=\"whatiftheboilerplategetsupdate\">What if the boilerplate gets update</h4>\n\n<p>Don't worry if any of them gets updated then I will update them here.</p>\n\n<p><a href=\"http://mazhar266.github.io/Awesome-Bootstrap-Boilerplate/\" target=\"_blank\">here</a> is the boilerplate for you to download and use.</p>\n\n<p>Thanks.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-03-31T08:36:37.000Z","created_by":1,"updated_at":"2014-08-20T05:33:15.000Z","updated_by":1,"published_at":"2014-04-06T06:24:54.000Z","published_by":1},{"id":5,"uuid":"55d21c63-7938-48e8-9426-9169fc38f84c","title":"Nginx for Mac OS X Mavericks in 2 minutes","slug":"nginx-for-mac-os-x-mavericks-in-2-minutes","markdown":"Actually the post is <a href=\"http://kevinworthington.com/nginx-for-mac-os-x-mavericks-in-2-minutes/\" target=\"_blank\">here</a>\n\nKEVIN WORTHINGTON posted the shell commands in a sh file for us to save our time. I'm just putting it in my blog so that I don't forget it in time.\n\nHere are those:\n\n* Snow Leopard <a href=\"https://dl.dropboxusercontent.com/u/7803124/nginx-osx/build-nginx-snow-leopard.sh\" target=\"_blank\">in a nice little script</a>\n* Lion <a href=\"https://dl.dropboxusercontent.com/u/7803124/nginx-osx/build-nginx-osx-lion.sh\" target=\"_blank\">in a nice little script</a>\n* Mountain Lion <a href=\"https://dl.dropboxusercontent.com/u/7803124/nginx-osx/build-nginx-mountain-lion.sh\" target=\"_blank\">in a nice little script</a>\n* Mavericks <a href=\"https://dl.dropboxusercontent.com/u/7803124/nginx-osx/build-nginx-mac-os-x-mavericks.sh\" target=\"_blank\">in a nice little script</a>\n\nDon't forget to correct the permissions of the shell script files before running them. And please run them as root ( sudo ).\n\nlike:\n\n<pre class=\"brush: shell;\">$ chmod a+x build-nginx-mac-os-x-mavericks.sh\n$ sudo ./build-nginx-mac-os-x-mavericks.sh</pre>\n\nThanks.","html":"<p>Actually the post is <a href=\"http://kevinworthington.com/nginx-for-mac-os-x-mavericks-in-2-minutes/\" target=\"_blank\">here</a></p>\n\n<p>KEVIN WORTHINGTON posted the shell commands in a sh file for us to save our time. I'm just putting it in my blog so that I don't forget it in time.</p>\n\n<p>Here are those:</p>\n\n<ul>\n<li>Snow Leopard <a href=\"https://dl.dropboxusercontent.com/u/7803124/nginx-osx/build-nginx-snow-leopard.sh\" target=\"_blank\">in a nice little script</a></li>\n<li>Lion <a href=\"https://dl.dropboxusercontent.com/u/7803124/nginx-osx/build-nginx-osx-lion.sh\" target=\"_blank\">in a nice little script</a></li>\n<li>Mountain Lion <a href=\"https://dl.dropboxusercontent.com/u/7803124/nginx-osx/build-nginx-mountain-lion.sh\" target=\"_blank\">in a nice little script</a></li>\n<li>Mavericks <a href=\"https://dl.dropboxusercontent.com/u/7803124/nginx-osx/build-nginx-mac-os-x-mavericks.sh\" target=\"_blank\">in a nice little script</a></li>\n</ul>\n\n<p>Don't forget to correct the permissions of the shell script files before running them. And please run them as root ( sudo ).</p>\n\n<p>like:</p>\n\n<pre class=\"brush: shell;\">$ chmod a+x build-nginx-mac-os-x-mavericks.sh  \n$ sudo ./build-nginx-mac-os-x-mavericks.sh</pre>\n\n<p>Thanks.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-03-31T08:56:43.000Z","created_by":1,"updated_at":"2014-06-27T20:12:51.000Z","updated_by":1,"published_at":"2014-04-02T04:03:20.000Z","published_by":1},{"id":6,"uuid":"52bcc189-e559-4280-9b12-1c6fb96a1f7b","title":"Genesis or Thesis","slug":"genesis-or-thesis","markdown":"As you all should know about Genesis and Thesis as they are very popular theme Framework of Wordpress which is a huge part of modern web.\n\nAt first let us discuss what is a theme framework and why are they essential. A theme framework is a predefined and well structured way to build a theme.\n\nActually while making a wordpress theme there are couple of things to consider. Suppose there are many versions of wordpress. The theme may be needed to be updated according to the needs of the customers and thus update should not corrupt the data of the previous installation.\n\nThis kinds of things are considered highly while making a theme framework.\n\nLet's come to the point of Genesis and Thesis now. Genesis and Thesis are two well known and popular wordpress theme frameworks. You can have a detailed look at <a href=\"http://my.studiopress.com/themes/genesis/\" target=\"_blank\">Genesis</a> and <a href=\"http://diythemes.com/\" target=\"_blank\">Thesis</a>.\n\n<a href=\"http://www.artofblog.com/thesis-and-genesis-compared/\" target=\"_blank\">Here</a> is another nice post on this topic.","html":"<p>As you all should know about Genesis and Thesis as they are very popular theme Framework of Wordpress which is a huge part of modern web.</p>\n\n<p>At first let us discuss what is a theme framework and why are they essential. A theme framework is a predefined and well structured way to build a theme.</p>\n\n<p>Actually while making a wordpress theme there are couple of things to consider. Suppose there are many versions of wordpress. The theme may be needed to be updated according to the needs of the customers and thus update should not corrupt the data of the previous installation.</p>\n\n<p>This kinds of things are considered highly while making a theme framework.</p>\n\n<p>Let's come to the point of Genesis and Thesis now. Genesis and Thesis are two well known and popular wordpress theme frameworks. You can have a detailed look at <a href=\"http://my.studiopress.com/themes/genesis/\" target=\"_blank\">Genesis</a> and <a href=\"http://diythemes.com/\" target=\"_blank\">Thesis</a>.</p>\n\n<p><a href=\"http://www.artofblog.com/thesis-and-genesis-compared/\" target=\"_blank\">Here</a> is another nice post on this topic.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-03-31T09:00:38.000Z","created_by":1,"updated_at":"2014-04-19T17:27:06.000Z","updated_by":1,"published_at":null,"published_by":null},{"id":7,"uuid":"37bdb043-0344-4187-a72f-81d872bf51c2","title":"How to Install and Uninstall nginx","slug":"how-to-install-and-uninstall-nginx","markdown":"Install\n<pre class=\"brush: shell;\">\ncd /usr/local/src\nwget http://nginxcp.com/nginxadmin2.3-stable.tar\ntar xf nginxadmin2.3-stable.tar\ncd publicnginx\n./nginxinstaller install\n</pre>\n\nUninstall\n<pre class=\"brush: shell;\">\ncd /usr/local/src\nwget http://nginxcp.com/nginxadmin2.3-stable.tar\ntar xf nginxadmin2.3-stable.tar\ncd publicnginx\n./nginxinstaller uninstall\n</pre>","html":"<p>Install  </p>\n\n<pre class=\"brush: shell;\">  \ncd /usr/local/src  \nwget <a href='http://nginxcp.com/nginxadmin2.3-stable.tar'>http://nginxcp.com/nginxadmin2.3-stable.tar</a>  \ntar xf nginxadmin2.3-stable.tar  \ncd publicnginx  \n./nginxinstaller install\n</pre>\n\n<p>Uninstall  </p>\n\n<pre class=\"brush: shell;\">  \ncd /usr/local/src  \nwget <a href='http://nginxcp.com/nginxadmin2.3-stable.tar'>http://nginxcp.com/nginxadmin2.3-stable.tar</a>  \ntar xf nginxadmin2.3-stable.tar  \ncd publicnginx  \n./nginxinstaller uninstall\n</pre>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-04-01T06:49:19.000Z","created_by":1,"updated_at":"2014-06-27T20:11:47.000Z","updated_by":1,"published_at":"2014-04-09T05:43:14.000Z","published_by":1},{"id":8,"uuid":"17abb3c5-aac6-4717-8341-854e1c44738c","title":"OpenSSL vulnerability","slug":"openssl-vulnerability","markdown":"Recently there is a security bug found in OpenSSL which is present for 2 years and we were totally unaware of it.\n\nRecently security researchers announced that security flaw with the OpenSSL, a popular data encryption standard.\n\nWhen I heard of the security issue I was totally tensed about it. Because of we have more than one production server for running / live webapps. Almost more than plenty of thousands of dollars of transaction are done everyday. So the security is a big matter here.\n\nAs the security researchers discovered it and let the OpenSSL know first, and they published publicly after it's fixed, so the latest update of OpenSSL is this bug free.\n\nI went to the support of our dedicated servers' providers to know which version we use. Then after that I've discovered than we are using the latest OpenSSL so we are totally free from that security bug.\n\nHere's a details of the issue <a href=\"http://www.businessinsider.com/heartbleed-bug-explainer-2014-4\" target=\"_blank\">here</a>\n\nHere is a comic about this bug <a href=\"http://xkcd.com/1354\" target=\"_blank\">here</a>","html":"<p>Recently there is a security bug found in OpenSSL which is present for 2 years and we were totally unaware of it.</p>\n\n<p>Recently security researchers announced that security flaw with the OpenSSL, a popular data encryption standard.</p>\n\n<p>When I heard of the security issue I was totally tensed about it. Because of we have more than one production server for running / live webapps. Almost more than plenty of thousands of dollars of transaction are done everyday. So the security is a big matter here.</p>\n\n<p>As the security researchers discovered it and let the OpenSSL know first, and they published publicly after it's fixed, so the latest update of OpenSSL is this bug free.</p>\n\n<p>I went to the support of our dedicated servers' providers to know which version we use. Then after that I've discovered than we are using the latest OpenSSL so we are totally free from that security bug.</p>\n\n<p>Here's a details of the issue <a href=\"http://www.businessinsider.com/heartbleed-bug-explainer-2014-4\" target=\"_blank\">here</a></p>\n\n<p>Here is a comic about this bug <a href=\"http://xkcd.com/1354\" target=\"_blank\">here</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-04-10T03:12:04.000Z","created_by":1,"updated_at":"2014-04-11T13:43:10.000Z","updated_by":1,"published_at":"2014-04-10T03:14:24.000Z","published_by":1},{"id":9,"uuid":"a9ac8794-5f57-4190-b97b-f8642b140f07","title":"Backup system in Wiredtree","slug":"backup-system-in-wiredtree","markdown":"![wiredtree](/content/images/2014/Apr/tree.gif)\n\nAs you already know about Wiredtree and their great support system. Just for those who hasn't yet heard about them \"They are awesome hosting provider\". Have a look here <a href=\"http://www.wiredtree.com/\" target=\"_blank\">here</a>\n\nWe've hosted a very great web application in their Dedicated server. And whenever any issue occured they were very very serious about the support tickets. They always gave support in 1 hour.\n\nRecently I've faced a issue about their backup system. There was a backup system which we can schedule. We did this with their help. But for some reason we just lost our database. We looked in their system and they told us that the backup system actually backs up the system files.\n\nActually backing up system file meant nothing to us web developers. We have github to preserve our source and we wanted them to backup our database. But there was a mistake. They backup the system files.\n\nLuckily we were able to recover the database from our own backup.\n\nI'm telling this here just to ensure that if anyone of you is using their backup system please make sure from them that they are backing up the right files.\n\nThanks.","html":"<p><img src=\"/content/images/2014/Apr/tree.gif\" alt=\"wiredtree\" /></p>\n\n<p>As you already know about Wiredtree and their great support system. Just for those who hasn't yet heard about them \"They are awesome hosting provider\". Have a look here <a href=\"http://www.wiredtree.com/\" target=\"_blank\">here</a></p>\n\n<p>We've hosted a very great web application in their Dedicated server. And whenever any issue occured they were very very serious about the support tickets. They always gave support in 1 hour.</p>\n\n<p>Recently I've faced a issue about their backup system. There was a backup system which we can schedule. We did this with their help. But for some reason we just lost our database. We looked in their system and they told us that the backup system actually backs up the system files.</p>\n\n<p>Actually backing up system file meant nothing to us web developers. We have github to preserve our source and we wanted them to backup our database. But there was a mistake. They backup the system files.</p>\n\n<p>Luckily we were able to recover the database from our own backup.</p>\n\n<p>I'm telling this here just to ensure that if anyone of you is using their backup system please make sure from them that they are backing up the right files.</p>\n\n<p>Thanks.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-04-19T17:05:14.000Z","created_by":1,"updated_at":"2014-04-19T17:08:34.000Z","updated_by":1,"published_at":"2014-04-19T17:08:34.000Z","published_by":1},{"id":10,"uuid":"05e7deab-d0db-4d27-8458-0d6210d4b6ec","title":"Working with Cocoapods","slug":"working-with-cocoapods","markdown":"First of all, what is Cocoapods!!\n\nCocoaPods is the dependency manager for Objective-C projects. It has thousands of libraries and can help you scale your projects elegantly.\n\nAlmost every develper uses this to manage dependency in their projects. Couple of days ago I've started a sample chat App which was open source. From the project I learnt Cocoapods. Then I loved it as I already love verious dependency managers like Bower, Composer, NPM etc.\n\nYou can find Cocoapods <a href=\"http://cocoapods.org/\" target=\"_blank\">here</a>\n\nYou need Ruby Gems installed on your sysem to install Cocoapods as it's a Ruby Gems module itself. To install it just use this easy command:\n\n<pre class=\"brush: shell;\">\n$ sudo gem install cocoapods\n</pre>\n\nIf you wanna update Cocoapods then just install the gem again. It will update itself as other Ruby Gems modules.\n\nCocoapods uses its Podfile to know the dependencies. Podfile is a file named \"Podfile\" which contains the list of all dependencies.\n\nA Podfile can be very simple like:\n\n<pre class=\"brush: shell;\">pod 'AFNetworking', '~> 1.0'</pre>\n\nOr very complex like:\n\n<pre class=\"brush: shell;\">platform :ios, '6.0'\ninhibit_all_warnings!\n\nxcodeproj 'MyProject'\n\npod 'ObjectiveSugar', '~> 0.5'\n\ntarget :test do\n    pod 'OCMock', '~> 2.0.1'\nend\n\npost_install do |installer|\n    installer.project.targets.each do |target|\n        puts target.name\n    end\nend\n</pre>\n\n<a href=\"http://guides.cocoapods.org/using/the-podfile.html\" target=\"_blank\">Here</a> is the total documentation about the Podfile.\n\nWhen we wanna install all dependencies then:\n\n<pre class=\"brush: shell;\">$ pod install</pre>\n\nThat's all, you are good to go. You can see other open source projects how they are maintaining dependencies using Cocoapods.\n\n\n####How to uninstall Cocoapods\n\nNow here comes the unexpected part. How to uninstall cocoapods after you've successfully installed it on your Mac. Here's how.\n\nRemember, cocoapods is only a Ruby gem. So to uninstall it we first need to do is:\n\n<pre class=\"brush: shell;\">\n$ gem list --local | grep cocoapods\n</pre>\n\nIt will show something like this:\n\n<pre>\ncocoapods (0.27.1, 0.20.2)\ncocoapods-core (0.27.1, 0.20.2)\ncocoapods-downloader (0.2.0, 0.1.2)\n</pre>\n\nNow we just need to uninstall these 3 Ruby gems.\n\n<pre class=\"brush: shell;\">\n$ gem uninstall cocoapods\n$ gem uninstall cocoapods-core\n$ gem uninstall cocoapods-downloader\n</pre>\n\nThat's it. Cocoapods is uninstalled. If you have multiple version installed on your mac then you probably need to do it:\n\n<pre class=\"brush: shell;\">\n$ gem uninstall cocoapods -v 0.20.2\n</pre>\n\nSo the uninstall process is done.\n\nI love dependency managers, and I love Cocoapods very much.","html":"<p>First of all, what is Cocoapods!!</p>\n\n<p>CocoaPods is the dependency manager for Objective-C projects. It has thousands of libraries and can help you scale your projects elegantly.</p>\n\n<p>Almost every develper uses this to manage dependency in their projects. Couple of days ago I've started a sample chat App which was open source. From the project I learnt Cocoapods. Then I loved it as I already love verious dependency managers like Bower, Composer, NPM etc.</p>\n\n<p>You can find Cocoapods <a href=\"http://cocoapods.org/\" target=\"_blank\">here</a></p>\n\n<p>You need Ruby Gems installed on your sysem to install Cocoapods as it's a Ruby Gems module itself. To install it just use this easy command:</p>\n\n<pre class=\"brush: shell;\">  \n$ sudo gem install cocoapods\n</pre>\n\n<p>If you wanna update Cocoapods then just install the gem again. It will update itself as other Ruby Gems modules.</p>\n\n<p>Cocoapods uses its Podfile to know the dependencies. Podfile is a file named \"Podfile\" which contains the list of all dependencies.</p>\n\n<p>A Podfile can be very simple like:</p>\n\n<pre class=\"brush: shell;\">pod 'AFNetworking', '~> 1.0'</pre>\n\nOr very complex like:\n\n<pre class=\"brush: shell;\">platform :ios, '6.0'  \ninhibit\\_all\\_warnings!\n\nxcodeproj 'MyProject'\n\npod 'ObjectiveSugar', '~> 0.5'\n\ntarget :test do  \n    pod 'OCMock', '~> 2.0.1'\nend\n\npost_install do |installer|  \n    installer.project.targets.each do |target|\n        puts target.name\n    end\nend  \n</pre>\n\n<p><a href=\"http://guides.cocoapods.org/using/the-podfile.html\" target=\"_blank\">Here</a> is the total documentation about the Podfile.</p>\n\n<p>When we wanna install all dependencies then:</p>\n\n<pre class=\"brush: shell;\">$ pod install</pre>\n\nThat's all, you are good to go. You can see other open source projects how they are maintaining dependencies using Cocoapods.\n\n\n####How to uninstall Cocoapods\n\nNow here comes the unexpected part. How to uninstall cocoapods after you've successfully installed it on your Mac. Here's how.\n\nRemember, cocoapods is only a Ruby gem. So to uninstall it we first need to do is:\n\n<pre class=\"brush: shell;\">  \n$ gem list --local | grep cocoapods\n</pre>\n\n<p>It will show something like this:</p>\n\n<pre>\ncocoapods (0.27.1, 0.20.2)\ncocoapods-core (0.27.1, 0.20.2)\ncocoapods-downloader (0.2.0, 0.1.2)\n</pre>\n\n<p>Now we just need to uninstall these 3 Ruby gems.</p>\n\n<pre class=\"brush: shell;\">  \n$ gem uninstall cocoapods\n$ gem uninstall cocoapods-core\n$ gem uninstall cocoapods-downloader\n</pre>\n\n<p>That's it. Cocoapods is uninstalled. If you have multiple version installed on your mac then you probably need to do it:</p>\n\n<pre class=\"brush: shell;\">  \n$ gem uninstall cocoapods -v 0.20.2\n</pre>\n\n<p>So the uninstall process is done.</p>\n\n<p>I love dependency managers, and I love Cocoapods very much.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-04-19T17:10:52.000Z","created_by":1,"updated_at":"2014-06-27T20:10:43.000Z","updated_by":1,"published_at":"2014-05-04T03:21:15.000Z","published_by":1},{"id":11,"uuid":"b9bc809a-ba02-4968-8ba3-5960fa6b4a2f","title":"CodeKit, boost your production","slug":"codekit-boost-your-production","markdown":"![alt](/content/images/2014/Apr/codekit.jpg)\nI've seen an awesome software for Mac. And it's CodeKit. Some of you may know about this from before as it's version 2 of this software. But as I'm too impressed I'm gonna describe a little of it. And it's not too costly, only $29 for this awesome app.\n\n####What it actually does?\n\nIt actually does some great things which are very helpful to the developers. It helps you build websites faster and better. Let me explain a bit more.\n\n#####Compiles everything\n\nIt compiles everything including SASS, LESS, Stylus, CoffeScript, TypeScript, Jade, Haml, Slim, Markdown and Javascript.\n\n#####Auto-refresh browser\n\nIt provides a local server which reloads itself whenever any file is changed. And the server reloads whoever is connected to it including every Desktops, iOS devices, Android devices etc. No need to reload the page.\n\n#####Bower built-in\n\nWe can install thousands of components with a single click (actually no action is required, CodeKit will load all the packages it finds in the bower file). Besides that CodeKit provides making personal libraries.\n\nActually CodeKit is a perfect tool for the  frontend developers. With it implemented properly not only you can develop amazing HTMLs but also minimize the production time. But of course the effect of every tool depends on its users.\n\nWanna use the awesome application?\nHave a look at <a href=\"https://incident57.com/codekit/\" target=\"_blank\">here</a>\n","html":"<p><img src=\"/content/images/2014/Apr/codekit.jpg\" alt=\"alt\" />\nI've seen an awesome software for Mac. And it's CodeKit. Some of you may know about this from before as it's version 2 of this software. But as I'm too impressed I'm gonna describe a little of it. And it's not too costly, only $29 for this awesome app.</p>\n\n<h4 id=\"whatitactuallydoes\">What it actually does?</h4>\n\n<p>It actually does some great things which are very helpful to the developers. It helps you build websites faster and better. Let me explain a bit more.</p>\n\n<h5 id=\"compileseverything\">Compiles everything</h5>\n\n<p>It compiles everything including SASS, LESS, Stylus, CoffeScript, TypeScript, Jade, Haml, Slim, Markdown and Javascript.</p>\n\n<h5 id=\"autorefreshbrowser\">Auto-refresh browser</h5>\n\n<p>It provides a local server which reloads itself whenever any file is changed. And the server reloads whoever is connected to it including every Desktops, iOS devices, Android devices etc. No need to reload the page.</p>\n\n<h5 id=\"bowerbuiltin\">Bower built-in</h5>\n\n<p>We can install thousands of components with a single click (actually no action is required, CodeKit will load all the packages it finds in the bower file). Besides that CodeKit provides making personal libraries.</p>\n\n<p>Actually CodeKit is a perfect tool for the  frontend developers. With it implemented properly not only you can develop amazing HTMLs but also minimize the production time. But of course the effect of every tool depends on its users.</p>\n\n<p>Wanna use the awesome application? <br />\nHave a look at <a href=\"https://incident57.com/codekit/\" target=\"_blank\">here</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-04-19T17:12:03.000Z","created_by":1,"updated_at":"2014-05-11T05:39:52.000Z","updated_by":1,"published_at":"2014-05-11T00:00:55.000Z","published_by":1},{"id":12,"uuid":"909646ba-029c-4991-b04a-57e646bed48d","title":"Working with Bourbon Neat","slug":"working-with-bourbon-neat","markdown":"","html":"","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-04-20T04:51:34.000Z","created_by":1,"updated_at":"2014-04-20T04:51:34.000Z","updated_by":1,"published_at":null,"published_by":null},{"id":13,"uuid":"6227d4c7-5e03-431e-b8b4-e88fb7ae2b1b","title":"Yeoman","slug":"yeoman","markdown":"","html":"","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-04-20T04:56:27.000Z","created_by":1,"updated_at":"2014-04-20T04:56:27.000Z","updated_by":1,"published_at":null,"published_by":null},{"id":14,"uuid":"dfa23dbf-d786-451a-9a24-7cbf7b67089e","title":"ImageMagick to save million dollars","slug":"imagemagick-to-save-million-dollars","markdown":"![alt](/content/images/2015/Jan/blog.png)\n\nOnce in a project client asked us to re-size and watermark an image after uploading. The system was huge and written in many languages. We decided to write this part in PHP so that we can use GD library.\n\nSo, we wrote the section using PHP using the power of GD library. Section was working well, testers found no issue at all. Client was happy, we all were happy.\n\nOne day a customer of my client came saying that the module doesn't work for him. We analyzed and found that the user was uploading pictures taken from his digital camera without modification. So the script was going Memory Max Out.\n\nWe could increase the memory max limit, but that's not the perfect solution. For this issue users were leaving the client's application. So client was losing money and went crazy. After researching the problem, we decided to push all the image work to a third-party program, then we found an amazing thing in the planet named \"ImageMagick\".\n\n###What is ImageMagick!\nImageMagick is a software suite to deal with images. It can read and write images in many formats (over 100) including DPX, EXR, GIF, JPEG, JPEG-2000, PDF, PNG, Postscript, SVG, and TIFF.\n\nSo when we need any image to be modified or to be worked on we pass it to the ImageMagick via shell access from our script like:\n\n<pre class=\"brush:php;\">\n// code here\n$output = shell_exec (\"convert -resize 350x350 $targetFile $mainFile\");\nif ($output)\n{\n\t// something returned, most probably error\n    // handle it here\n}\n// code here\n</pre>\n\nSo, ImageMagick saved our million dollars.","html":"<p><img src=\"/content/images/2015/Jan/blog.png\" alt=\"alt\" /></p>\n\n<p>Once in a project client asked us to re-size and watermark an image after uploading. The system was huge and written in many languages. We decided to write this part in PHP so that we can use GD library.</p>\n\n<p>So, we wrote the section using PHP using the power of GD library. Section was working well, testers found no issue at all. Client was happy, we all were happy.</p>\n\n<p>One day a customer of my client came saying that the module doesn't work for him. We analyzed and found that the user was uploading pictures taken from his digital camera without modification. So the script was going Memory Max Out.</p>\n\n<p>We could increase the memory max limit, but that's not the perfect solution. For this issue users were leaving the client's application. So client was losing money and went crazy. After researching the problem, we decided to push all the image work to a third-party program, then we found an amazing thing in the planet named \"ImageMagick\".</p>\n\n<h3 id=\"whatisimagemagick\">What is ImageMagick!</h3>\n\n<p>ImageMagick is a software suite to deal with images. It can read and write images in many formats (over 100) including DPX, EXR, GIF, JPEG, JPEG-2000, PDF, PNG, Postscript, SVG, and TIFF.</p>\n\n<p>So when we need any image to be modified or to be worked on we pass it to the ImageMagick via shell access from our script like:</p>\n\n<pre class=\"brush:php;\">  \n// code here\n$output = shell_exec (\"convert -resize 350x350 $targetFile $mainFile\");\nif ($output)  \n{\n    // something returned, most probably error\n    // handle it here\n}\n// code here\n</pre>\n\n<p>So, ImageMagick saved our million dollars.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-04-20T11:24:49.000Z","created_by":1,"updated_at":"2015-01-08T08:50:11.000Z","updated_by":1,"published_at":"2015-01-08T04:21:21.000Z","published_by":1},{"id":15,"uuid":"cd121a6f-00da-4c12-9968-9ac5265ae2bd","title":"Orientational Issue with images","slug":"orientational-issue-with-images","markdown":"","html":"","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-04-20T11:25:07.000Z","created_by":1,"updated_at":"2014-04-20T11:25:07.000Z","updated_by":1,"published_at":null,"published_by":null},{"id":16,"uuid":"4f7c61e3-a41b-4825-b55e-5bb73adc2350","title":"Composer","slug":"composer","markdown":"","html":"","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-04-22T04:32:20.000Z","created_by":1,"updated_at":"2014-04-22T04:32:20.000Z","updated_by":1,"published_at":null,"published_by":null},{"id":17,"uuid":"ebeb1d96-1fd0-48bb-af21-87b541787347","title":"Wordpress with Composer","slug":"wordpress-with-composer","markdown":"","html":"","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-04-22T04:32:28.000Z","created_by":1,"updated_at":"2014-04-22T04:32:28.000Z","updated_by":1,"published_at":null,"published_by":null},{"id":18,"uuid":"71b04a4d-1570-41e0-a795-0797e1a95a78","title":"PEAR with Composer","slug":"pear-with-composer","markdown":"","html":"","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-04-22T04:32:36.000Z","created_by":1,"updated_at":"2014-04-22T04:32:36.000Z","updated_by":1,"published_at":null,"published_by":null},{"id":19,"uuid":"0c367255-723f-4f49-902d-86f37f25c876","title":"Apache Cordova","slug":"apache-cordova","markdown":"","html":"","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-04-22T04:33:00.000Z","created_by":1,"updated_at":"2014-04-22T04:33:00.000Z","updated_by":1,"published_at":null,"published_by":null},{"id":20,"uuid":"acc97f10-e520-4bac-b60c-d95f6a879d3c","title":"Using jQuery with Coffescript","slug":"using-jquery-with-coffescript","markdown":"http://aaronrussell.co.uk/articles/using-coffeescript-with-jquery/\n\nhttp://coffeequery.blogspot.com/2012/01/lesson-1-jquery-animations-are.html","html":"<p><a href='http://aaronrussell.co.uk/articles/using-coffeescript-with-jquery/'>http://aaronrussell.co.uk/articles/using-coffeescript-with-jquery/</a></p>\n\n<p><a href='http://coffeequery.blogspot.com/2012/01/lesson-1-jquery-animations-are.html'>http://coffeequery.blogspot.com/2012/01/lesson-1-jquery-animations-are.html</a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-04-22T15:34:16.000Z","created_by":1,"updated_at":"2014-04-22T16:21:58.000Z","updated_by":1,"published_at":null,"published_by":null},{"id":21,"uuid":"cf013c97-ed00-4fa0-a25f-7d9c4f361f53","title":"Let's do the jQuery via raw JS","slug":"lets-do-the-jquery-via-raw-js","markdown":"","html":"","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-04-22T15:35:02.000Z","created_by":1,"updated_at":"2014-04-22T15:35:02.000Z","updated_by":1,"published_at":null,"published_by":null},{"id":22,"uuid":"0e62cd9f-45e7-4360-848b-d1e4105c9a7a","title":"Again another PHP cheatsheet","slug":"again-another-php-cheatsheet","markdown":"[Link here](https://www.icloud.com/iw/#pages/BAKkL1FCYhJM7V5p9XOBN89ufa4zVBCVfD6F/PHP_cheat_sheet)","html":"<p><a href=\"https://www.icloud.com/iw/#pages/BAKkL1FCYhJM7V5p9XOBN89ufa4zVBCVfD6F/PHP_cheat_sheet\">Link here</a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-04-24T04:26:20.000Z","created_by":1,"updated_at":"2014-04-24T04:26:20.000Z","updated_by":1,"published_at":null,"published_by":null},{"id":23,"uuid":"a0501279-5326-4b73-8c09-84f84a75ac9d","title":"Why I didn't code in CoffeeScript","slug":"why-i-didnt-code-in-coffeescript","markdown":"","html":"","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-04-24T04:26:49.000Z","created_by":1,"updated_at":"2014-04-24T04:26:49.000Z","updated_by":1,"published_at":null,"published_by":null},{"id":24,"uuid":"c9637afc-359e-4925-91ea-34292dfb92e4","title":"SCSS vs LESS","slug":"scss-vs-less","markdown":"","html":"","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-04-27T17:05:49.000Z","created_by":1,"updated_at":"2014-04-27T17:05:49.000Z","updated_by":1,"published_at":null,"published_by":null},{"id":25,"uuid":"f3dea40c-6f74-415f-8bad-2ab03c228e40","title":"An introduction to SMACSS","slug":"an-introduction-to-smacss","markdown":"","html":"","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-04-27T17:07:00.000Z","created_by":1,"updated_at":"2014-04-27T17:07:00.000Z","updated_by":1,"published_at":null,"published_by":null},{"id":26,"uuid":"935c9ce1-8a88-46fb-a1fb-14f330934816","title":"CSS Mixin libraries","slug":"css-mixin-libraries","markdown":"What are CSS mixin libraries!","html":"<p>What are CSS mixin libraries!</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-04-27T17:07:31.000Z","created_by":1,"updated_at":"2015-01-01T09:04:17.000Z","updated_by":1,"published_at":null,"published_by":null},{"id":27,"uuid":"8beccdf3-282d-4646-80f8-c33338f54e7d","title":"A short brief about the make file","slug":"a-short-brief-about-the-make-file","markdown":"","html":"","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-05-11T05:55:16.000Z","created_by":1,"updated_at":"2014-05-11T05:55:16.000Z","updated_by":1,"published_at":null,"published_by":null},{"id":28,"uuid":"000b5c59-c821-4d7f-8be0-9cfa3d1cd9f7","title":"Getting smart with Grunt","slug":"use-grunt-smartly","markdown":"Grunt is a JavaScript task runner. It provides automation of repetitive tasks like minification, compilation, unit testing, linting, other lots of works. There are a lots of ways we can work with Grunt.\n\nThe Grunt system is huge and it's growing everyday. There are hundreds of plugins to make the job done. There is hardly any plugins which is unavailable for Grunt.\n\nTo start working with Grunt, the first thing we need to know is, Grunt works with NPM. So we need to have Node.js and NPM installed on our system.","html":"<p>Grunt is a JavaScript task runner. It provides automation of repetitive tasks like minification, compilation, unit testing, linting, other lots of works. There are a lots of ways we can work with Grunt.</p>\n\n<p>The Grunt system is huge and it's growing everyday. There are hundreds of plugins to make the job done. There is hardly any plugins which is unavailable for Grunt.</p>\n\n<p>To start working with Grunt, the first thing we need to know is, Grunt works with NPM. So we need to have Node.js and NPM installed on our system.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-05-11T05:55:44.000Z","created_by":1,"updated_at":"2014-07-07T04:33:20.000Z","updated_by":1,"published_at":null,"published_by":null},{"id":29,"uuid":"22378747-ff66-4b94-961f-e61928500910","title":"Blend modes in CSS","slug":"blending-mode-in-css3","markdown":"Before I'm gonna say anything I wanna tell you that CSS Background Blend Modes are now available in Chrome Canary and WebKit Nightly. So you need to use one of the supported browsers to see it in action.\n\nFirst thing first, let's learn what is blend mode and how to use it in CSS.\n\nIf you are familiar with Adobe Photoshop from before then you are familiar with the blend mode which we are gonna use. If not then I suggest you to see it from a Photoshop expert.\n\nLet's see how to implement it. Suppose we have  a CSS style like this:\n\n<pre class=\"brush: css;\">\nbody { \n  background: url('back.png') no-repeat, blue; \n}\n</pre>\n\nNow we can use CSS blend mode to this element like this:\n<pre class=\"brush: css;\">\nbody {\n  background: url('back.png') no-repeat, blue;\n  // Chrome Canary\n  background-blend-mode: screen;\n  // WebKit Nightly\n  -webkit-background-blend-mode: screen;\n}\n</pre>\n\nThe available blend modes are **normal**, **multiply**, **screen**, **overlay**, **darken**, **lighten**, **color-dodge**,  **color-burn**, **hard-light**, **soft-light**, **difference**, **exclusion**, **hue**, **saturation**, **color**, **luminosity**.\n\nThis feature isn't enabled in Chrome Canary by default. So <a target=\"_blank\" href=\"http://html.adobe.com/webplatform/enable/\">Learn how to enable flags in Canary to view Background Blend Modes</a>.\n\nIf you are using WebKit Nightly then it's enabled by default.\n\nI've created a demo for you <a target=\"_blank\" href=\"https://dl.dropboxusercontent.com/u/7803124/examples/blend-mode/index.html\">here</a>","html":"<p>Before I'm gonna say anything I wanna tell you that CSS Background Blend Modes are now available in Chrome Canary and WebKit Nightly. So you need to use one of the supported browsers to see it in action.</p>\n\n<p>First thing first, let's learn what is blend mode and how to use it in CSS.</p>\n\n<p>If you are familiar with Adobe Photoshop from before then you are familiar with the blend mode which we are gonna use. If not then I suggest you to see it from a Photoshop expert.</p>\n\n<p>Let's see how to implement it. Suppose we have  a CSS style like this:</p>\n\n<pre class=\"brush: css;\">  \nbody {  \n  background: url('back.png') no-repeat, blue; \n}\n</pre>\n\n<p>Now we can use CSS blend mode to this element like this:  </p>\n\n<pre class=\"brush: css;\">  \nbody {  \n  background: url('back.png') no-repeat, blue;\n  // Chrome Canary\n  background-blend-mode: screen;\n  // WebKit Nightly\n  -webkit-background-blend-mode: screen;\n}\n</pre>\n\n<p>The available blend modes are <strong>normal</strong>, <strong>multiply</strong>, <strong>screen</strong>, <strong>overlay</strong>, <strong>darken</strong>, <strong>lighten</strong>, <strong>color-dodge</strong>,  <strong>color-burn</strong>, <strong>hard-light</strong>, <strong>soft-light</strong>, <strong>difference</strong>, <strong>exclusion</strong>, <strong>hue</strong>, <strong>saturation</strong>, <strong>color</strong>, <strong>luminosity</strong>.</p>\n\n<p>This feature isn't enabled in Chrome Canary by default. So <a target=\"_blank\" href=\"http://html.adobe.com/webplatform/enable/\">Learn how to enable flags in Canary to view Background Blend Modes</a>.</p>\n\n<p>If you are using WebKit Nightly then it's enabled by default.</p>\n\n<p>I've created a demo for you <a target=\"_blank\" href=\"https://dl.dropboxusercontent.com/u/7803124/examples/blend-mode/index.html\">here</a></p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-05-19T11:03:43.000Z","created_by":1,"updated_at":"2014-06-27T20:06:50.000Z","updated_by":1,"published_at":"2014-05-19T11:48:38.000Z","published_by":1},{"id":30,"uuid":"ab10feb6-49c7-4f50-a19c-120622c89083","title":"Rails and Sinatra like Node.js Frameworks","slug":"rails-and-sinatra-like-nodejs-frameworks","markdown":"Rails and Sinatra, both are frameworks written in Ruby language. They solve issues in different ways. They are might be in Ruby language but, followed by all the frameworks written in different languages including PHP, Node.JS, JAVA.\n\nRails is focused on writing model driven web applications. Sinatra is a framework to deal with HTTP from the server side. Sinatra is perfect for any kinds of API projects where Rails is suitable for normal applications. If you need to handle HTTP requests/responses, Sinatra is the perfect tool. If you want full integration and as much blueprint as possible, Rails is the right choice for you.\n\nSinatra is great for the micro-style, Rails is not. As long as we stay micro, Sinatra will beat Rails. If we go beyond micro, Rails will beat Sinatra.\n\nSo, we can divide the Node.JS frameworks according to this too. Let's have a look.\n\n####Sinatra Like\nThese frameworks offer rich configuration and are less opinionated than Rails-like or full-stack.\n\n- Express\n- flatiron\n- Locomotive\n- total.js\n- Koa.js\n\n####Rails Like\nPresent your project properly. Create your own art from included templates\n\n- CompoundJS\n- geddy\n- Sails.js\n- RhapsodyJS\n\nThere are other frameworks and more frameworks are introduced day by day. Before choosing a framework analyze your project perperly.","html":"<p>Rails and Sinatra, both are frameworks written in Ruby language. They solve issues in different ways. They are might be in Ruby language but, followed by all the frameworks written in different languages including PHP, Node.JS, JAVA.</p>\n\n<p>Rails is focused on writing model driven web applications. Sinatra is a framework to deal with HTTP from the server side. Sinatra is perfect for any kinds of API projects where Rails is suitable for normal applications. If you need to handle HTTP requests/responses, Sinatra is the perfect tool. If you want full integration and as much blueprint as possible, Rails is the right choice for you.</p>\n\n<p>Sinatra is great for the micro-style, Rails is not. As long as we stay micro, Sinatra will beat Rails. If we go beyond micro, Rails will beat Sinatra.</p>\n\n<p>So, we can divide the Node.JS frameworks according to this too. Let's have a look.</p>\n\n<h4 id=\"sinatralike\">Sinatra Like</h4>\n\n<p>These frameworks offer rich configuration and are less opinionated than Rails-like or full-stack.</p>\n\n<ul>\n<li>Express</li>\n<li>flatiron</li>\n<li>Locomotive</li>\n<li>total.js</li>\n<li>Koa.js</li>\n</ul>\n\n<h4 id=\"railslike\">Rails Like</h4>\n\n<p>Present your project properly. Create your own art from included templates</p>\n\n<ul>\n<li>CompoundJS</li>\n<li>geddy</li>\n<li>Sails.js</li>\n<li>RhapsodyJS</li>\n</ul>\n\n<p>There are other frameworks and more frameworks are introduced day by day. Before choosing a framework analyze your project perperly.</p>","image":null,"featured":1,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-05-22T09:18:20.000Z","created_by":1,"updated_at":"2014-09-01T10:07:44.000Z","updated_by":1,"published_at":"2014-08-29T10:01:17.000Z","published_by":1},{"id":31,"uuid":"f2cd0fe9-22a9-4aae-a0cc-48f77d3346e9","title":"scaffolding","slug":"scaffolding","markdown":"","html":"","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-05-22T11:13:59.000Z","created_by":1,"updated_at":"2014-05-22T11:13:59.000Z","updated_by":1,"published_at":null,"published_by":null},{"id":32,"uuid":"6ba206f6-3868-44f2-8850-5509084e01df","title":"10 possibilities you can take in 2014 as a developer","slug":"10-possibilities-you-can-take-in-2014-as-a-developer","markdown":"![Nixon, the amazing developer](/content/images/2014/May/1515338_472676402841010_1511890151_n.jpg)\n\nEvery new technology comes with a hope, possibility and of course a target environment with a predefined solution. There are lots of things in which you can invest your time. But as there are almost hundreds of them (even more) it's wise to work smartly rather work hard blindly.\n\nIf you think you will not move then you're out of date, some other smart guy will take you down for sure. So, move as fast as you can while it's still your golden time (you are younger than 30). And one more thing, don't be stubborn and don't get your emotion mixed with technology as it's not necessary. Don't lose an extra drop if it's not beneficial.\n\nSo what are the possibilities for you (keep it in mind that this post goes for the industry level developers).\n\n\n###Learn Git\n\nIf you don't know how to work with Git then you should learn it at the very beginning. Because now a days without a proper knowledge of Git you will be f\\*\\*\\*ed twice a day. And that's not cool.\n\n###Learn a native mobile platform\n\nYou are probably thinking of using a HTML, CSS framework to develop mobile apps. But it's almost impossible to maintain a mobile platform product using a common framework. To develop a quality app you need to learn the target platform's native development system. It's your wish what you will learn, choose any from iOS, Android or Windows Mobile. Of course there are others, lets just skip them for now.\n\n###Learn JavaScript\n\nThis language is a monster. It survived 3 generations and now it's in its best form till now. So there's nothing to ignore it, it's too important. And now-a-days JavaScript runs almost everywhere. Yahoo, isn't that awesome!\n\n###Know basic agile development\n\nThe first thing which is tought after graduation in companies to the freshers is how to work using a agile development system. No matter how strong you are, how brilliant developer you are, you are nothing if you work alone. If you wanna take your skill beyond human scale then work in agile development system.\n\n###Estimate time properly\n\nMost of the developers can not be a rockstar developer because of they can not estimate the end time of their work. Now almost everybody is perfect while estimating the duration. If you can't do it passionately you are done. Better get used to with it.\n\n###Learn a server side language\n\nIf you are cleaver enough then you will learn Node.js and go 2 step ahead at a time. Work in desktop, mobile or web environment it's very necessary to learn a server side language. Without knowing a server side language one can't gather basics of web, the developer way.\n\n###Learn basic HTML,CSS\n\nIt's the age of web. Learn to use the web in a developer way. Learn the basics, nuts and bolts of the modern web. Learn the basic HTML, CSS no matter you are a hardcore developer or a designer. Keep this in mind that a master designer also knows HTML, CSS.\n\n###Learn to search\n\nLearn to search your resources over the Internet as quickly as possible. Stop asking others. It's just simple, you have the Internet, you know what you wanna learn. Then what the hell are you waiting for? Let's use the Internet.\n\n###Manage your tasks, issues\n\nYou can't go ahead and shine your way if you can't manage tasks and track issues. Learn to use a issue tracking system and keep your personal task manager. Use an task management application according to your need.\n\n###Manage a project\n\nIt's very important. Have anyone ever wondered why do all the companies want an experienced employee! That's because of their working swiftness, managing capabilities and culture adopting mindset. Learn to manage a project (not an academic project, academic projects are bullsh\\*ts and teachers are no match for you).\n\nThese are just the first 10 possibilities and opportunities. There are more. For an awesome modern developer, there is nothing but only talent and hardwork.","html":"<p><img src=\"/content/images/2014/May/1515338_472676402841010_1511890151_n.jpg\" alt=\"Nixon, the amazing developer\" /></p>\n\n<p>Every new technology comes with a hope, possibility and of course a target environment with a predefined solution. There are lots of things in which you can invest your time. But as there are almost hundreds of them (even more) it's wise to work smartly rather work hard blindly.</p>\n\n<p>If you think you will not move then you're out of date, some other smart guy will take you down for sure. So, move as fast as you can while it's still your golden time (you are younger than 30). And one more thing, don't be stubborn and don't get your emotion mixed with technology as it's not necessary. Don't lose an extra drop if it's not beneficial.</p>\n\n<p>So what are the possibilities for you (keep it in mind that this post goes for the industry level developers).</p>\n\n<h3 id=\"learngit\">Learn Git</h3>\n\n<p>If you don't know how to work with Git then you should learn it at the very beginning. Because now a days without a proper knowledge of Git you will be f***ed twice a day. And that's not cool.</p>\n\n<h3 id=\"learnanativemobileplatform\">Learn a native mobile platform</h3>\n\n<p>You are probably thinking of using a HTML, CSS framework to develop mobile apps. But it's almost impossible to maintain a mobile platform product using a common framework. To develop a quality app you need to learn the target platform's native development system. It's your wish what you will learn, choose any from iOS, Android or Windows Mobile. Of course there are others, lets just skip them for now.</p>\n\n<h3 id=\"learnjavascript\">Learn JavaScript</h3>\n\n<p>This language is a monster. It survived 3 generations and now it's in its best form till now. So there's nothing to ignore it, it's too important. And now-a-days JavaScript runs almost everywhere. Yahoo, isn't that awesome!</p>\n\n<h3 id=\"knowbasicagiledevelopment\">Know basic agile development</h3>\n\n<p>The first thing which is tought after graduation in companies to the freshers is how to work using a agile development system. No matter how strong you are, how brilliant developer you are, you are nothing if you work alone. If you wanna take your skill beyond human scale then work in agile development system.</p>\n\n<h3 id=\"estimatetimeproperly\">Estimate time properly</h3>\n\n<p>Most of the developers can not be a rockstar developer because of they can not estimate the end time of their work. Now almost everybody is perfect while estimating the duration. If you can't do it passionately you are done. Better get used to with it.</p>\n\n<h3 id=\"learnaserversidelanguage\">Learn a server side language</h3>\n\n<p>If you are cleaver enough then you will learn Node.js and go 2 step ahead at a time. Work in desktop, mobile or web environment it's very necessary to learn a server side language. Without knowing a server side language one can't gather basics of web, the developer way.</p>\n\n<h3 id=\"learnbasichtmlcss\">Learn basic HTML,CSS</h3>\n\n<p>It's the age of web. Learn to use the web in a developer way. Learn the basics, nuts and bolts of the modern web. Learn the basic HTML, CSS no matter you are a hardcore developer or a designer. Keep this in mind that a master designer also knows HTML, CSS.</p>\n\n<h3 id=\"learntosearch\">Learn to search</h3>\n\n<p>Learn to search your resources over the Internet as quickly as possible. Stop asking others. It's just simple, you have the Internet, you know what you wanna learn. Then what the hell are you waiting for? Let's use the Internet.</p>\n\n<h3 id=\"manageyourtasksissues\">Manage your tasks, issues</h3>\n\n<p>You can't go ahead and shine your way if you can't manage tasks and track issues. Learn to use a issue tracking system and keep your personal task manager. Use an task management application according to your need.</p>\n\n<h3 id=\"manageaproject\">Manage a project</h3>\n\n<p>It's very important. Have anyone ever wondered why do all the companies want an experienced employee! That's because of their working swiftness, managing capabilities and culture adopting mindset. Learn to manage a project (not an academic project, academic projects are bullsh*ts and teachers are no match for you).</p>\n\n<p>These are just the first 10 possibilities and opportunities. There are more. For an awesome modern developer, there is nothing but only talent and hardwork.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-05-26T15:42:21.000Z","created_by":1,"updated_at":"2014-05-26T17:00:37.000Z","updated_by":1,"published_at":"2014-05-26T16:48:39.000Z","published_by":1},{"id":33,"uuid":"337ccc01-e81e-44a0-8b70-85e6737a36e0","title":"Upgrade NodeJS version on Mac","slug":"upgrade-node-js-version-in-mac","markdown":"\n![Node.js](/content/images/2014/Jun/nodejs_1280x1024.jpg)\n\nYou may wonder how to upgrade the Node.js to the latest version. There's an easy solution, just download and install again. But that's not a smart way to get the things done. We can use NVM to upgrade the version of Node.js. NVM is Node Version Manager. Here's how to use NVM to install Node.js versions. In this example we will install Node.js version 0.11.13.\n\nFirst install NVM if you didn't.\n\n<pre class=\"brush: shell;\">\n$ npm install -g nvm\n$ export PATH=./node_modules/.bin:$PATH\n</pre>\n\nNow we have installed nvm in our Mac. Let's install 0.11.13 version of Node.js.\n\n<pre class=\"brush: shell;\">\n$ nvm install.0.11.13\n</pre>\n\nThere's another problem with this method. The 0.11.13 version isn't stable. So, you are probably thinking that replacing the stable version might be risky. There's another solution to this problem. We can install multiple versions of Node.js and activate which one is needed. We can do this using <a href=\" https://github.com/visionmedia/n\" target=\"_blank\">n</a> module. N is another Node.js version manager. It's used to quickly install Node.js versions.\n\n<pre class=\"brush: shell;\">\n$ npm install -g n\n$ n 0.11.13\n</pre>\n\nThat's it. Now you can switch between Node.js versions. Just run:\n\n<pre class=\"brush: shell;\">\n$ n\n</pre>\n\nAnd select desired Node.js version.\n\nThat's it. That's how to upgrade Node.js version on a Mac.","html":"<p><img src=\"/content/images/2014/Jun/nodejs_1280x1024.jpg\" alt=\"Node.js\" /></p>\n\n<p>You may wonder how to upgrade the Node.js to the latest version. There's an easy solution, just download and install again. But that's not a smart way to get the things done. We can use NVM to upgrade the version of Node.js. NVM is Node Version Manager. Here's how to use NVM to install Node.js versions. In this example we will install Node.js version 0.11.13.</p>\n\n<p>First install NVM if you didn't.</p>\n\n<pre class=\"brush: shell;\">  \n$ npm install -g nvm\n$ export PATH=./node_modules/.bin:$PATH\n</pre>\n\n<p>Now we have installed nvm in our Mac. Let's install 0.11.13 version of Node.js.</p>\n\n<pre class=\"brush: shell;\">  \n$ nvm install.0.11.13\n</pre>\n\n<p>There's another problem with this method. The 0.11.13 version isn't stable. So, you are probably thinking that replacing the stable version might be risky. There's another solution to this problem. We can install multiple versions of Node.js and activate which one is needed. We can do this using <a href=\" https://github.com/visionmedia/n\" target=\"_blank\">n</a> module. N is another Node.js version manager. It's used to quickly install Node.js versions.</p>\n\n<pre class=\"brush: shell;\">  \n$ npm install -g n\n$ n 0.11.13\n</pre>\n\n<p>That's it. Now you can switch between Node.js versions. Just run:</p>\n\n<pre class=\"brush: shell;\">  \n$ n\n</pre>\n\n<p>And select desired Node.js version.</p>\n\n<p>That's it. That's how to upgrade Node.js version on a Mac.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-06-03T14:04:24.000Z","created_by":1,"updated_at":"2014-07-24T01:31:51.000Z","updated_by":1,"published_at":"2014-06-03T14:14:59.000Z","published_by":1},{"id":35,"uuid":"fc9f0a82-3558-4133-b09d-d325363afdc3","title":"MongoDB complex query in Node.JS","slug":"mongodb-complex-query-in-node-js","markdown":"As you guys already know that MongoDB isn't suitable for complex queries. There are couple of ways to do it like Map-Reduce. But they will turn the whole application slow. So we can't do that as we use MongoDB and Node.JS for couple of facilities and speed is one of them. So the best solution is to do it programmatically. Let's see how to do it.\n\nSuppose we've two MongoDB collections like:\n\n**Stores**\n<pre class=\"brush: sql;\">\n{\n    \"id\": \"id\",\n    \"name\": \"store name\",\n    ...\n}\n</pre>\n\n**Extras**\n<pre class=\"brush: sql;\">\n{\n    \"id\": \"id\",\n    \"store\": \"store id here\",\n    \"address\": \"store address here\",\n    ...\n}\n</pre>\n\nSo, now we wanna join the two tables to gather the total information about the store. Now let's do our homework, let's try to do this.\n\n###Trial 1\n\n<pre class=\"brush: javascript;\">\n// we want our result here\n// var store = ...\nstores.findOne(id, function gotStore(firstRes) {\n\textras.findOne(firstRes.id, function gotExtra(secondRes) {\n\t\t// So we've all data here\n\t});\n});\n</pre>\n\nNow the problem is how to sync the process so that we can get the data and don't get the NULL. So this system isn't working as we are getting NULL at the end. Let's see what we can do with it.\n\n###Trial 2\n\nAs we are using Node.js 0.10 we can't use generators. Let's go deep in the callback hell.\n\n<pre class=\"brush: javascript;\">\nfunction getStore(id, callback) {\n    stores.findOne(id, function gotStore(firstRes) {\n\t    extras.findOne(firstRes.id, function gotExtra(secondRes) {\n\t    \t// So we've all data here\n\t    \tvar result = firstRes.concat(secondRes)\n\t    \tcallback(result);\n\t    });\n    });\n}\n</pre>\n\nSo now we are getting the values asynchronously we can do our job like this:\n\n<pre class=\"brush: javascript;\">\ngetStore(100, function printStore(store) {\n    console.log (store.name);\n});\n</pre>\n\nThere is almost 4 callback functions. That's Okay for this sample as this sample is short. Real projects are too big and there will be a mess of callback functions. This is called Callback hell.\n\nThere are couple of ways to deal with Callback hell. Read my article about [solving Callback Hell in Node.js](http://mazharahmed.me/solve-callback-hell-in-node-js/)\n\nThanks. Good luck with your own work.","html":"<p>As you guys already know that MongoDB isn't suitable for complex queries. There are couple of ways to do it like Map-Reduce. But they will turn the whole application slow. So we can't do that as we use MongoDB and Node.JS for couple of facilities and speed is one of them. So the best solution is to do it programmatically. Let's see how to do it.</p>\n\n<p>Suppose we've two MongoDB collections like:</p>\n\n<p><strong>Stores</strong></p>\n\n<pre class=\"brush: sql;\">  \n{\n    \"id\": \"id\",\n    \"name\": \"store name\",\n    ...\n}\n</pre>\n\n<p><strong>Extras</strong></p>\n\n<pre class=\"brush: sql;\">  \n{\n    \"id\": \"id\",\n    \"store\": \"store id here\",\n    \"address\": \"store address here\",\n    ...\n}\n</pre>\n\n<p>So, now we wanna join the two tables to gather the total information about the store. Now let's do our homework, let's try to do this.</p>\n\n<h3 id=\"trial1\">Trial 1</h3>\n\n<pre class=\"brush: javascript;\">  \n// we want our result here\n// var store = ...\nstores.findOne(id, function gotStore(firstRes) {  \n    extras.findOne(firstRes.id, function gotExtra(secondRes) {\n        // So we've all data here\n    });\n});\n</pre>\n\n<p>Now the problem is how to sync the process so that we can get the data and don't get the NULL. So this system isn't working as we are getting NULL at the end. Let's see what we can do with it.</p>\n\n<h3 id=\"trial2\">Trial 2</h3>\n\n<p>As we are using Node.js 0.10 we can't use generators. Let's go deep in the callback hell.</p>\n\n<pre class=\"brush: javascript;\">  \nfunction getStore(id, callback) {  \n    stores.findOne(id, function gotStore(firstRes) {\n        extras.findOne(firstRes.id, function gotExtra(secondRes) {\n            // So we've all data here\n            var result = firstRes.concat(secondRes)\n            callback(result);\n        });\n    });\n}\n</pre>\n\n<p>So now we are getting the values asynchronously we can do our job like this:</p>\n\n<pre class=\"brush: javascript;\">  \ngetStore(100, function printStore(store) {  \n    console.log (store.name);\n});\n</pre>\n\n<p>There is almost 4 callback functions. That's Okay for this sample as this sample is short. Real projects are too big and there will be a mess of callback functions. This is called Callback hell.</p>\n\n<p>There are couple of ways to deal with Callback hell. Read my article about <a href=\"http://mazharahmed.me/solve-callback-hell-in-node-js/\">solving Callback Hell in Node.js</a></p>\n\n<p>Thanks. Good luck with your own work.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-07-01T17:14:33.000Z","created_by":1,"updated_at":"2014-09-01T10:07:52.000Z","updated_by":1,"published_at":"2014-07-01T17:37:30.000Z","published_by":1},{"id":36,"uuid":"ec313e26-664d-4acc-b156-28f7c00bab60","title":"Understanding JavaScript Closures","slug":"understanding-javascript-closures","markdown":"","html":"","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-07-07T04:21:35.000Z","created_by":1,"updated_at":"2014-07-07T04:21:35.000Z","updated_by":1,"published_at":null,"published_by":null},{"id":37,"uuid":"e19f5133-678e-4401-af96-865f2962986b","title":"Solve Callback Hell in Node.js","slug":"solve-callback-hell-in-node-js","markdown":"Hello there, how's going! I posted an article one week before. I showed how to deal with [complex queries in MongoDB and Node.js](http://mazharahmed.me/mongodb-complex-query-in-node-js/). At the last of the article we saw that there are so many nested anonymous functions are making our code hardly understandable. We knew that it's called Callback Hell.\n\nToday I'm gonna show you how to solve callback hell issue in Node.js. Any Node.js programmer is familiar with callback hell.\n\nFirst let's see why callback functions are necessary. Have a look at the code snippet bellow.\n\n<pre class=\"brush: javascript;\">\nvar result = asyncFunction();\n// we will not get the value in result variable\ntypeof result === 'undefined';  // it's true\n</pre>\n\nThe execution flow in node will not wait for the async function to be executed fully. To fix this issue we use call back functions like below.\n\n<pre class=\"brush: javascript;\">\nasyncFunction(function(result) {\n\tconsole.log(result);\t// not undefined\n});\n</pre>\n\nBut if our project is a real life project then there will be nested callback functions with a huge depth.\n\n<pre class=\"brush: javascript;\">\nsomeFunction1(function() {\n  someFunction2(function() {\n    someFunction3(function() {\n      someFunction4(function() {\n    });\n  });\n});\n</pre>\n\nBut writing codes like this is making our code very difficult to understand and maintain. This is callback hell. Now let's figure out how to remove callback hell from our code to make it more understandable.\n\nThere are couple of ways to remove callback hell. We can implement new feature of JavaScript, the Generators to get the job done. Or we can use a well known Node.js module to do that. The best solution is to use Generators as it is language feature. But today I'm gonna show you how to do it using the Node.js module <a href=\"https://www.npmjs.org/package/async\" target=\"_blank\">Async</a>.\n\nAsync is a Node.js module. We can install it like:\n\n<pre class=\"brush: shell;\">\n$ npm install async\n</pre>\n\nAfter successfully installed we can use it like below.\n\n<pre class=\"brush: javascript;\">\nvar async = require('async');\n\nasync.map(['file1','file2','file3'],\nfs.stat, function(err, results) {\n    // results is now an array of stats\n    // for each file\n});\n\nasync.filter(['file1','file2','file3'],\nfs.exists, function(results) {\n    // results now equals an array of\n    // the existing files\n});\n\nasync.parallel([\n    function() {// code},\n    function() {// code}\n], callback);\n\nasync.series([\n    function() {// code},\n    function() {// code}\n]);\n</pre>\n\nSo technically our callback hell is solved. The another issue is anonymous functions. We can provide a name to all the anonymous functions to make it more understandable. Providing a name to the anonymous functions is the proof of we care them. And this is a coding standard for Node.js.\n\n<pre class=\"brush: javascript;\">\nasyncFunction(function myCallBack(// args) {\n\t// TODO\n});\n</pre>\n\nThat's it. That's how to solve callback hell from our Node.js codes totally. I will write about Node.js coding standards in my next article. See ya!","html":"<p>Hello there, how's going! I posted an article one week before. I showed how to deal with <a href=\"http://mazharahmed.me/mongodb-complex-query-in-node-js/\">complex queries in MongoDB and Node.js</a>. At the last of the article we saw that there are so many nested anonymous functions are making our code hardly understandable. We knew that it's called Callback Hell.</p>\n\n<p>Today I'm gonna show you how to solve callback hell issue in Node.js. Any Node.js programmer is familiar with callback hell.</p>\n\n<p>First let's see why callback functions are necessary. Have a look at the code snippet bellow.</p>\n\n<pre class=\"brush: javascript;\">  \nvar result = asyncFunction();  \n// we will not get the value in result variable\ntypeof result === 'undefined';  // it's true  \n</pre>\n\n<p>The execution flow in node will not wait for the async function to be executed fully. To fix this issue we use call back functions like below.</p>\n\n<pre class=\"brush: javascript;\">  \nasyncFunction(function(result) {  \n    console.log(result);    // not undefined\n});\n</pre>\n\n<p>But if our project is a real life project then there will be nested callback functions with a huge depth.</p>\n\n<pre class=\"brush: javascript;\">  \nsomeFunction1(function() {  \n  someFunction2(function() {\n    someFunction3(function() {\n      someFunction4(function() {\n    });\n  });\n});\n</pre>\n\n<p>But writing codes like this is making our code very difficult to understand and maintain. This is callback hell. Now let's figure out how to remove callback hell from our code to make it more understandable.</p>\n\n<p>There are couple of ways to remove callback hell. We can implement new feature of JavaScript, the Generators to get the job done. Or we can use a well known Node.js module to do that. The best solution is to use Generators as it is language feature. But today I'm gonna show you how to do it using the Node.js module <a href=\"https://www.npmjs.org/package/async\" target=\"_blank\">Async</a>.</p>\n\n<p>Async is a Node.js module. We can install it like:</p>\n\n<pre class=\"brush: shell;\">  \n$ npm install async\n</pre>\n\n<p>After successfully installed we can use it like below.</p>\n\n<pre class=\"brush: javascript;\">  \nvar async = require('async');\n\nasync.map(['file1','file2','file3'],  \nfs.stat, function(err, results) {  \n    // results is now an array of stats\n    // for each file\n});\n\nasync.filter(['file1','file2','file3'],  \nfs.exists, function(results) {  \n    // results now equals an array of\n    // the existing files\n});\n\nasync.parallel([  \n    function() {// code},\n    function() {// code}\n], callback);\n\nasync.series([  \n    function() {// code},\n    function() {// code}\n]);\n</pre>\n\n<p>So technically our callback hell is solved. The another issue is anonymous functions. We can provide a name to all the anonymous functions to make it more understandable. Providing a name to the anonymous functions is the proof of we care them. And this is a coding standard for Node.js.</p>\n\n<pre class=\"brush: javascript;\">  \nasyncFunction(function myCallBack(// args) {  \n    // TODO\n});\n</pre>\n\n<p>That's it. That's how to solve callback hell from our Node.js codes totally. I will write about Node.js coding standards in my next article. See ya!</p>","image":null,"featured":1,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-07-15T18:01:18.000Z","created_by":1,"updated_at":"2014-07-18T08:01:05.000Z","updated_by":1,"published_at":"2014-07-15T18:49:02.000Z","published_by":1},{"id":38,"uuid":"524961cc-139e-4b9e-a0b0-228487c392ab","title":"forEach using generators in Node.js","slug":"foreach-using-generators-in-nodejs","markdown":"There are many reasons why we wanna run forEach using a generator. Let's imagine of a situation. We are using the Koa framework for our application. We connected to the MongoDB using the Mongoose module.\n\nSo anything like this:\n<pre class=\"brush: javascript;\">\nmodel.find({...}, function(...) {\n\t// my code goes here\n});\n</pre>\n\nis like this for now:\n<pre class=\"brush: javascript;\">\nvar res = yield model.find({...}).exec();\n</pre>\n\nSo, remember the [complex query executation in mongodb](http://mazharahmed.me/mongodb-complex-query-in-node-js/). So let's see the final outcome from that article. The code looks like:\n\n<pre class=\"brush: javascript;\">\nstores.findOne(id, function(fRes) {\n  extras.findOne(fRes.id, function(sRes) {\n    // So we've all data here\n    // merge the results and return\n  });\n});\n</pre>\n\nLet's convert it to use Mongoose and Koa:\n\n<pre class=\"brush: javascript;\">\nvar store = yield stores.findOne(...).exec();\nvar extra = yield extras.findOne(...).exec();\n</pre>\n\nWhat if the collections have many to many relations between them. We need to traverse the first result and get the value(s) from the second collection for every entries.\n\nLet's do it using the Mongoose.\n\n<pre class=\"brush: javascript;\">\nvar store = yield stores.find(...).exec();\nstore.forEach(function(obj) {\n\tvar extra = yield extras.find(...).exec();\n});\n</pre>\n\nUnfortunately this code will not work. Because there is a anonymous function in forEach. And we can not use yield from a function. So, how can we solve it! This issue can be fixed in sevaral ways. But the easiest way to fix it is to use a module named '**co**'.\n\n'Co' is a generator based flow-control module for Node.js and the browser. It uses thunks or promises. We can write non-blocking code in a nice-ish way.\n\nHow to do that? Let's see.\n\n<pre class=\"brush: javascript;\">\nvar co = require('co');\nvar store = yield stores.find(...).exec();\nstore.forEach(co(function *(obj) {\n\tvar extra = yield extras.find(...).exec();\n}));\n</pre>\n\nThat's it, now the code will run as it should. Isn't that amazing! A small and simple module just saved our day. The modules like 'co', 'thunkify' are very useful. This was just a short example how it can become handy.\n\nThere are thousands of modules in npm library. We must get the most possible facilities from them. Before you write a module or library, search if it's already solved by someone else.","html":"<p>There are many reasons why we wanna run forEach using a generator. Let's imagine of a situation. We are using the Koa framework for our application. We connected to the MongoDB using the Mongoose module.</p>\n\n<p>So anything like this:  </p>\n\n<pre class=\"brush: javascript;\">  \nmodel.find({...}, function(...) {  \n    // my code goes here\n});\n</pre>\n\n<p>is like this for now:  </p>\n\n<pre class=\"brush: javascript;\">  \nvar res = yield model.find({...}).exec();  \n</pre>\n\n<p>So, remember the <a href=\"http://mazharahmed.me/mongodb-complex-query-in-node-js/\">complex query executation in mongodb</a>. So let's see the final outcome from that article. The code looks like:</p>\n\n<pre class=\"brush: javascript;\">  \nstores.findOne(id, function(fRes) {  \n  extras.findOne(fRes.id, function(sRes) {\n    // So we've all data here\n    // merge the results and return\n  });\n});\n</pre>\n\n<p>Let's convert it to use Mongoose and Koa:</p>\n\n<pre class=\"brush: javascript;\">  \nvar store = yield stores.findOne(...).exec();  \nvar extra = yield extras.findOne(...).exec();  \n</pre>\n\n<p>What if the collections have many to many relations between them. We need to traverse the first result and get the value(s) from the second collection for every entries.</p>\n\n<p>Let's do it using the Mongoose.</p>\n\n<pre class=\"brush: javascript;\">  \nvar store = yield stores.find(...).exec();  \nstore.forEach(function(obj) {  \n    var extra = yield extras.find(...).exec();\n});\n</pre>\n\n<p>Unfortunately this code will not work. Because there is a anonymous function in forEach. And we can not use yield from a function. So, how can we solve it! This issue can be fixed in sevaral ways. But the easiest way to fix it is to use a module named '<strong>co</strong>'.</p>\n\n<p>'Co' is a generator based flow-control module for Node.js and the browser. It uses thunks or promises. We can write non-blocking code in a nice-ish way.</p>\n\n<p>How to do that? Let's see.</p>\n\n<pre class=\"brush: javascript;\">  \nvar co = require('co');  \nvar store = yield stores.find(...).exec();  \nstore.forEach(co(function *(obj) {  \n    var extra = yield extras.find(...).exec();\n}));\n</pre>\n\n<p>That's it, now the code will run as it should. Isn't that amazing! A small and simple module just saved our day. The modules like 'co', 'thunkify' are very useful. This was just a short example how it can become handy.</p>\n\n<p>There are thousands of modules in npm library. We must get the most possible facilities from them. Before you write a module or library, search if it's already solved by someone else.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-07-17T02:01:44.000Z","created_by":1,"updated_at":"2014-08-06T12:27:39.000Z","updated_by":1,"published_at":"2014-08-06T12:27:39.000Z","published_by":1},{"id":39,"uuid":"dab23783-9c0f-4f82-b129-efc80860e986","title":"Deploy apps in Apache and Node.js together","slug":"deploy-apps-in-apache-and-node-js-together","markdown":"There are couple of reasons you might wanna try Apache and Node.js together. Suppose you have an application running in Apache. You have a WordPress blog on that server too. Now you got the opportunity to rewrite the application in Node.js. You will not find anything compared to WordPress in Node.js still now.\n\nSo the best possible solution is running Apache and Node.js together. Let's figure out how to do that.\n\nFirst thing is first, get a VPS which offers two or more IP addresses.\n\nNow that you have a VPS with at least two IP addresses you are ready to go for the configuration. From your WHM cPanel go to **Apache Configuration** from **Service Configuration** then open **Reserved IPs Editor**.\n\nMark / Tick the IP that you **DON'T WANT** the Apache to listen to. Momorize or write the IP address as you will be needing it very soon. Save the configuration by hitting the save button.\n\nNow you need to use that IP to make Node.js server. Install Node.js on your VPS using the SSH. There are thousands of articles over the Internet. Use that IP and open a HTTP service at port 80. Have a look at the sample code below.\n\n<pre class=\"brush: javascript;\">\nvar http = require('http');\n\nvar server = http.createServer(function(req, res) {\n  res.writeHead(200);\n  res.end('Node.js works!');\n});\n\nserver.listen(80, 'your-ip-here');\n</pre>\n\nNow you can see that the service is up and running. This blog is also running beside Apache, and we don't need the Apache \t**mode_rewrite** module to proxy the port or whatever.","html":"<p>There are couple of reasons you might wanna try Apache and Node.js together. Suppose you have an application running in Apache. You have a WordPress blog on that server too. Now you got the opportunity to rewrite the application in Node.js. You will not find anything compared to WordPress in Node.js still now.</p>\n\n<p>So the best possible solution is running Apache and Node.js together. Let's figure out how to do that.</p>\n\n<p>First thing is first, get a VPS which offers two or more IP addresses.</p>\n\n<p>Now that you have a VPS with at least two IP addresses you are ready to go for the configuration. From your WHM cPanel go to <strong>Apache Configuration</strong> from <strong>Service Configuration</strong> then open <strong>Reserved IPs Editor</strong>.</p>\n\n<p>Mark / Tick the IP that you <strong>DON'T WANT</strong> the Apache to listen to. Momorize or write the IP address as you will be needing it very soon. Save the configuration by hitting the save button.</p>\n\n<p>Now you need to use that IP to make Node.js server. Install Node.js on your VPS using the SSH. There are thousands of articles over the Internet. Use that IP and open a HTTP service at port 80. Have a look at the sample code below.</p>\n\n<pre class=\"brush: javascript;\">  \nvar http = require('http');\n\nvar server = http.createServer(function(req, res) {  \n  res.writeHead(200);\n  res.end('Node.js works!');\n});\n\nserver.listen(80, 'your-ip-here');  \n</pre>\n\n<p>Now you can see that the service is up and running. This blog is also running beside Apache, and we don't need the Apache     <strong>mode_rewrite</strong> module to proxy the port or whatever.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-07-24T01:15:37.000Z","created_by":1,"updated_at":"2014-09-01T10:07:56.000Z","updated_by":1,"published_at":"2014-07-24T11:14:35.000Z","published_by":1},{"id":40,"uuid":"bfb1b5ab-ce64-41f1-9f8e-63025e8e6e57","title":"How to export MongoDB Database","slug":"how-to-export-mongodb-database","markdown":"```\n$ cat > locations.csv\nName,Address,City,State,ZIP\nJane Doe,123 Main St,Whereverville,CA,90210\nJohn Doe,555 Broadway Ave,New York,NY,10010\n ctrl-d\n$ mongoimport -d mydb -c things --type csv --file locations.csv --headerline\nconnected to: 127.0.0.1\nimported 3 objects\n$ mongo\nMongoDB shell version: 1.7.3\nconnecting to: test\n> use mydb\nswitched to db mydb\n> db.things.find()\n{ \"_id\" : ObjectId(\"4d32a36ed63d057130c08fca\"), \"Name\" : \"Jane Doe\", \"Address\" : \"123 Main St\", \"City\" : \"Whereverville\", \"State\" : \"CA\", \"ZIP\" : 90210 }\n{ \"_id\" : ObjectId(\"4d32a36ed63d057130c08fcb\"), \"Name\" : \"John Doe\", \"Address\" : \"555 Broadway Ave\", \"City\" : \"New York\", \"State\" : \"NY\", \"ZIP\" : 10010 }\n```","html":"<pre><code>$ cat &gt; locations.csv\nName,Address,City,State,ZIP  \nJane Doe,123 Main St,Whereverville,CA,90210  \nJohn Doe,555 Broadway Ave,New York,NY,10010  \n ctrl-d\n$ mongoimport -d mydb -c things --type csv --file locations.csv --headerline\nconnected to: 127.0.0.1  \nimported 3 objects  \n$ mongo\nMongoDB shell version: 1.7.3  \nconnecting to: test  \n&gt; use mydb\nswitched to db mydb  \n&gt; db.things.find()\n{ \"_id\" : ObjectId(\"4d32a36ed63d057130c08fca\"), \"Name\" : \"Jane Doe\", \"Address\" : \"123 Main St\", \"City\" : \"Whereverville\", \"State\" : \"CA\", \"ZIP\" : 90210 }\n{ \"_id\" : ObjectId(\"4d32a36ed63d057130c08fcb\"), \"Name\" : \"John Doe\", \"Address\" : \"555 Broadway Ave\", \"City\" : \"New York\", \"State\" : \"NY\", \"ZIP\" : 10010 }\n</code></pre>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-08-03T03:41:40.000Z","created_by":1,"updated_at":"2015-03-29T11:04:51.000Z","updated_by":1,"published_at":null,"published_by":null},{"id":41,"uuid":"0608e2e2-68c6-4c6f-a388-fc0b3c002e3b","title":"Limbo Framework","slug":"limbojs","markdown":"A lightning fast Node.js framework for next generation web apps.\n\n###Sorry, it's not released for public yet.","html":"<p>A lightning fast Node.js framework for next generation web apps.</p>\n\n<h3 id=\"sorryitsnotreleasedforpublicyet\">Sorry, it's not released for public yet.</h3>","image":null,"featured":0,"page":1,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-08-06T02:36:38.000Z","created_by":1,"updated_at":"2014-08-22T08:40:19.000Z","updated_by":1,"published_at":"2014-08-06T02:36:38.000Z","published_by":1},{"id":42,"uuid":"0978d6ea-7a51-4433-9887-29afca1d3060","title":"How to use JavaScript Promises","slug":"how-to-use-javascript-promises","markdown":"Javascript Promises are cool new feature of Javascript. A promise is a result of an asynchronous operation. It can be one of the three states.\n\n- Pending: The initial state of a promise. That means it's processing.\n- Fulfilled: The operation is successful.\n- Rejected: The operation is failed.\n\nLet's consider a code snippet below:\n\n<pre class=\"brush:js;\">\nfs.readFile(filename, enc, function (err, res){\n  // do our things here\n});\n</pre>\n\nIf we are using generator based flow control this function should be thunkified (thunkify module or similar wrapper) first. But we can implement a Promise and make it generator friendly, which is more convenient in many ways. Let's have a look at the code snippet below:\n\n<pre class=\"brush:js;\">\nfunction readFile(filename, enc) {\n  return new Promise(function(fulfill, reject) {\n    fs.readFile(filename, enc, function(err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        fulfill(res);\n      }\n    });\n  });\n}\n</pre>\n\nNow this readFile is generator based flow control friendly. Whenever we need to read file we can simply do it in modern way:\n\n<pre class=\"brush:js;\">\nvar data = yield readFile(filename, enc);\n</pre>\n\nThat's it, using promises are simple and pretty fun. We will see how to chain events with Javascript Promises in the next article.","html":"<p>Javascript Promises are cool new feature of Javascript. A promise is a result of an asynchronous operation. It can be one of the three states.</p>\n\n<ul>\n<li>Pending: The initial state of a promise. That means it's processing.</li>\n<li>Fulfilled: The operation is successful.</li>\n<li>Rejected: The operation is failed.</li>\n</ul>\n\n<p>Let's consider a code snippet below:</p>\n\n<pre class=\"brush:js;\">  \nfs.readFile(filename, enc, function (err, res){  \n  // do our things here\n});\n</pre>\n\n<p>If we are using generator based flow control this function should be thunkified (thunkify module or similar wrapper) first. But we can implement a Promise and make it generator friendly, which is more convenient in many ways. Let's have a look at the code snippet below:</p>\n\n<pre class=\"brush:js;\">  \nfunction readFile(filename, enc) {  \n  return new Promise(function(fulfill, reject) {\n    fs.readFile(filename, enc, function(err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        fulfill(res);\n      }\n    });\n  });\n}\n</pre>\n\n<p>Now this readFile is generator based flow control friendly. Whenever we need to read file we can simply do it in modern way:</p>\n\n<pre class=\"brush:js;\">  \nvar data = yield readFile(filename, enc);  \n</pre>\n\n<p>That's it, using promises are simple and pretty fun. We will see how to chain events with Javascript Promises in the next article.</p>","image":null,"featured":1,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-08-13T03:50:37.000Z","created_by":1,"updated_at":"2014-12-02T03:27:42.000Z","updated_by":1,"published_at":"2014-12-02T03:26:54.000Z","published_by":1},{"id":43,"uuid":"3de8bf29-28f8-4b0b-a2a4-c85df7ab8449","title":"How I wrote 66K lines of JavaScript in 10 days","slug":"how-i-wrote-66k-lines-of-javascript-in-10-days","markdown":"![alt](/content/images/2015/Mar/4995737599_0f6f878846_z.jpg)\n\nActually I wrote more than 66K lines of codes, But I've removed the view files code because they are not mine. Writing 66K lines of code doesn't mean anything special. Anyone can write tons of lines of codes. What matters is writing production level of codes. Codes that construct a product which people will pay to use.\n\nI'm not going to lecture here about what product is and what art is. I'm here to tell you how I wrote those lines of codes in a short amount of time. Obviously the first step you need is to be an empire in programming. There's no other way or exception, and of-course being this level of code artist takes many days of hard work. It's not the hard work which will make you a code empire, it's the intelligence which matters at the end.\n\nThe second thing you need to do is update your coding style so that your code is capable of working in a team. You need to work with a team to achieve this capability. Without practical knowledge no matter how hard you think your code is Okay, your code is gurbase. You have to indent, comment, document, normalize your code to be at this level.\n\nThen you need to have your own snippet library. You will take the snippets to your codes. This will not come easily. You need to work with a highly qualified team for at least four years to build your own snippet. You can copy other's snippet, but that will not come in handy when it's time to use it. Always remember your code is your code, others are not yours.\n\nYou need to use many external tools which will boost your productivity. Like you need to use a **Pomodoro** clock, you need to use logs while code. You can use a raw dashboard to keep logs. My Mac's dashboard works fine for me.\n\nAs you will be writing production level of codes your code has to be bug free or tested. I will say that there will be no bug, but your code has to be less buggy. To do this, you need to use unit testing. If you are over confident, then you can also use a continuous integration system. Whatever you do, your code needs to have a confident to work accurately. At this level semicolon (;) missing, spell mistake, case sensitivity mistake are not accepted.\n\nYou need to use an **IDE**. Most people will prefer Sublime Text. But it's not actually an IDE in my sense. If you use Sublime Text you will find that finding critical errors are very time-consuming work. IDE will help you in this area. At this level you are a code empire, so an empire needs his crown and it's an IDE. I use Zend Studio for PHP, WebStorm for JavaScript. There are other exceptions too while working in a very large project which I will write at my next-post.\n\nIf you made yourself this far you are the true code empire, more accurately you are a code artist, a rock-star coder. Remember, never compromise the brotherhood. Your team members are working with you, they have to understand your code at a glance. You cannot thing twice while looking at your old codes. You code is not very simple, but solves everything. Your code contains enough comments, indents and documents. They are well structured and followed by popular coding standards. You have tons of code snippets and all of them are prioritized according to your needs. You've assigned hot keys to quickly access your snippet library. You now work using the famous Pomodoro technique.\n\nNow what's left is practise, take your skill to the edge. Be a cutting-edge artist. Be a **rock-star coder**.","html":"<p><img src=\"/content/images/2015/Mar/4995737599_0f6f878846_z.jpg\" alt=\"alt\" /></p>\n\n<p>Actually I wrote more than 66K lines of codes, But I've removed the view files code because they are not mine. Writing 66K lines of code doesn't mean anything special. Anyone can write tons of lines of codes. What matters is writing production level of codes. Codes that construct a product which people will pay to use.</p>\n\n<p>I'm not going to lecture here about what product is and what art is. I'm here to tell you how I wrote those lines of codes in a short amount of time. Obviously the first step you need is to be an empire in programming. There's no other way or exception, and of-course being this level of code artist takes many days of hard work. It's not the hard work which will make you a code empire, it's the intelligence which matters at the end.</p>\n\n<p>The second thing you need to do is update your coding style so that your code is capable of working in a team. You need to work with a team to achieve this capability. Without practical knowledge no matter how hard you think your code is Okay, your code is gurbase. You have to indent, comment, document, normalize your code to be at this level.</p>\n\n<p>Then you need to have your own snippet library. You will take the snippets to your codes. This will not come easily. You need to work with a highly qualified team for at least four years to build your own snippet. You can copy other's snippet, but that will not come in handy when it's time to use it. Always remember your code is your code, others are not yours.</p>\n\n<p>You need to use many external tools which will boost your productivity. Like you need to use a <strong>Pomodoro</strong> clock, you need to use logs while code. You can use a raw dashboard to keep logs. My Mac's dashboard works fine for me.</p>\n\n<p>As you will be writing production level of codes your code has to be bug free or tested. I will say that there will be no bug, but your code has to be less buggy. To do this, you need to use unit testing. If you are over confident, then you can also use a continuous integration system. Whatever you do, your code needs to have a confident to work accurately. At this level semicolon (;) missing, spell mistake, case sensitivity mistake are not accepted.</p>\n\n<p>You need to use an <strong>IDE</strong>. Most people will prefer Sublime Text. But it's not actually an IDE in my sense. If you use Sublime Text you will find that finding critical errors are very time-consuming work. IDE will help you in this area. At this level you are a code empire, so an empire needs his crown and it's an IDE. I use Zend Studio for PHP, WebStorm for JavaScript. There are other exceptions too while working in a very large project which I will write at my next-post.</p>\n\n<p>If you made yourself this far you are the true code empire, more accurately you are a code artist, a rock-star coder. Remember, never compromise the brotherhood. Your team members are working with you, they have to understand your code at a glance. You cannot thing twice while looking at your old codes. You code is not very simple, but solves everything. Your code contains enough comments, indents and documents. They are well structured and followed by popular coding standards. You have tons of code snippets and all of them are prioritized according to your needs. You've assigned hot keys to quickly access your snippet library. You now work using the famous Pomodoro technique.</p>\n\n<p>Now what's left is practise, take your skill to the edge. Be a cutting-edge artist. Be a <strong>rock-star coder</strong>.</p>","image":null,"featured":1,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-08-13T03:52:39.000Z","created_by":1,"updated_at":"2015-03-28T03:39:22.000Z","updated_by":1,"published_at":"2015-03-28T03:38:18.000Z","published_by":1},{"id":44,"uuid":"41ad7d96-0ec3-43ac-864e-e3089cc56c0a","title":"How to run a Basic HTTP server","slug":"how-to-run-a-basic-http-server","markdown":"There are always situations for which we need to create a Basic HTTP server on our current directory. If we have Apache like web server installed on our system then we can use that by copying our content to a directory in the root of our web directory. We can upload our script to a server and access remotely too.\n\nBut all these things seems a bit pain to me. I wanted a simple web server which will run on my current diretory. And ofcourse I want to control the service from the shell. And I wanted a platform independant solution. So I came up with these (from shell):\n\n\n###Python 2.x\n\n`$ python -m SimpleHTTPServer`\n\n\n###Python 3.x\n\n`$ python -m http.server`\n\n\n###PHP\n\n`$ php -S localhost:8000`\n\n\n###Node Module\n\nThis is the best solution I think.\n\n`$ npm install -g instant-server\n$ instant <port>`\n\nThat's it. Test out the web server at localhost on port 8000. Example: from browser hit the url \"[localhost:8000](http://localhost:8000)\"","html":"<p>There are always situations for which we need to create a Basic HTTP server on our current directory. If we have Apache like web server installed on our system then we can use that by copying our content to a directory in the root of our web directory. We can upload our script to a server and access remotely too.</p>\n\n<p>But all these things seems a bit pain to me. I wanted a simple web server which will run on my current diretory. And ofcourse I want to control the service from the shell. And I wanted a platform independant solution. So I came up with these (from shell):</p>\n\n<h3 id=\"python2x\">Python 2.x</h3>\n\n<p><code>$ python -m SimpleHTTPServer</code></p>\n\n<h3 id=\"python3x\">Python 3.x</h3>\n\n<p><code>$ python -m http.server</code></p>\n\n<h3 id=\"php\">PHP</h3>\n\n<p><code>$ php -S localhost:8000</code></p>\n\n<h3 id=\"nodemodule\">Node Module</h3>\n\n<p>This is the best solution I think.</p>\n\n<p><code>$ npm install -g instant-server\n$ instant &lt;port&gt;</code></p>\n\n<p>That's it. Test out the web server at localhost on port 8000. Example: from browser hit the url \"<a href=\"http://localhost:8000\">localhost:8000</a>\"</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-08-15T07:26:54.000Z","created_by":1,"updated_at":"2014-09-11T11:19:38.000Z","updated_by":1,"published_at":"2014-08-22T08:42:38.000Z","published_by":1},{"id":45,"uuid":"ab431aa5-1059-47b4-ab2c-e09a6c01b75c","title":"Using Virtual Environments in Python","slug":"using-virtual-environments-in-python","markdown":"If we work with different Python projects professionally then, there are several times when we need to work with multiple version of modules, libraries and even Python itself. Node.js has an advantage on this section as node modules can be installed locally and globally. But Python modules are installed globally.\n\nWe can solve this problem using a virtual environment for every project locally and maintaining the dependencies there. **virtualenv** is a tool that creates isolated Python environments. That means we can work with Djungo 1.3 for a project and 1.0 for another one without any conflict.\n\nThere are couple of ways we can install virtualenv. Let's see some of them.\n\nIf we are using \"PIP\" then we can install by:\n\n<pre class=\"brush: shell;\">$ pip install virtualenv</pre>\n\nIf we are using \"Easy Install\" then we can install like:\n\n<pre class=\"brush: shell;\">$ sudo pip install virtualenv</pre>\n\nIf we are using Ubuntu then we can use the native apt-get to install it like:\n\n<pre class=\"brush: shell;\">$ sudo apt-get install python-virtualenv</pre>\n\nNow that we've successfully installed the virtual environment for Python we can start using it. A new tool is installed which can be accessed from the shell. The tool is called \"virtualenv\".\n\nTo create a virtual environment we can simply run:\n\n<pre class=\"brush: shell;\">\n$ virtualenv venv\nNew python executable in venv/bin/python\nInstalling distribute............done.\n</pre>\n\nWe can use a Python interpreter of our choice while making a virtual environment.\n\n<pre class=\"brush: shell;\">$ virtualenv -p /usr/bin/python2.7 venv</pre>\n\nTo use the newly created virtual environment, it needs to be activated\n\n<pre class=\"brush: shell;\">$ source venv/bin/activate</pre>\n\nor\n\n<pre class=\"brush: shell;\">$ . venv/bin/activate</pre>\n\nNow we can do whatever we want and all the actions will be done in the virtual environment we have created (not the system default Python).\n\nWhenever we need to disable the virtual environment and come back to the system default Python environment we can run:\n\n<pre class=\"brush: shell;\">$ deactivate</pre>\n\nThat's it. We can have as many virtual environments as we want, thus we can maintain different projects with different versions of dependencies.","html":"<p>If we work with different Python projects professionally then, there are several times when we need to work with multiple version of modules, libraries and even Python itself. Node.js has an advantage on this section as node modules can be installed locally and globally. But Python modules are installed globally.</p>\n\n<p>We can solve this problem using a virtual environment for every project locally and maintaining the dependencies there. <strong>virtualenv</strong> is a tool that creates isolated Python environments. That means we can work with Djungo 1.3 for a project and 1.0 for another one without any conflict.</p>\n\n<p>There are couple of ways we can install virtualenv. Let's see some of them.</p>\n\n<p>If we are using \"PIP\" then we can install by:</p>\n\n<pre class=\"brush: shell;\">$ pip install virtualenv</pre>\n\nIf we are using \"Easy Install\" then we can install like:\n\n<pre class=\"brush: shell;\">$ sudo pip install virtualenv</pre>\n\nIf we are using Ubuntu then we can use the native apt-get to install it like:\n\n<pre class=\"brush: shell;\">$ sudo apt-get install python-virtualenv</pre>\n\nNow that we've successfully installed the virtual environment for Python we can start using it. A new tool is installed which can be accessed from the shell. The tool is called \"virtualenv\".\n\nTo create a virtual environment we can simply run:\n\n<pre class=\"brush: shell;\">  \n$ virtualenv venv\nNew python executable in venv/bin/python  \nInstalling distribute............done.  \n</pre>\n\n<p>We can use a Python interpreter of our choice while making a virtual environment.</p>\n\n<pre class=\"brush: shell;\">$ virtualenv -p /usr/bin/python2.7 venv</pre>\n\n<p>To use the newly created virtual environment, it needs to be activated</p>\n\n<pre class=\"brush: shell;\">$ source venv/bin/activate</pre>\n\n<p>or</p>\n\n<pre class=\"brush: shell;\">$ . venv/bin/activate</pre>\n\n<p>Now we can do whatever we want and all the actions will be done in the virtual environment we have created (not the system default Python).</p>\n\n<p>Whenever we need to disable the virtual environment and come back to the system default Python environment we can run:</p>\n\n<pre class=\"brush: shell;\">$ deactivate</pre>\n\n<p>That's it. We can have as many virtual environments as we want, thus we can maintain different projects with different versions of dependencies.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-09-11T09:21:24.000Z","created_by":1,"updated_at":"2014-09-11T11:18:50.000Z","updated_by":1,"published_at":"2014-09-11T11:18:50.000Z","published_by":1},{"id":46,"uuid":"ae6b95fe-4dd6-4151-8ec9-09d935d85bf0","title":"How to fix no pg_hba.conf entry on PostgreSQL","slug":"how-to-fix-no-pg_hba-conf-entry-on-postgresql","markdown":"Couple of days ago I was deploying a Python app on our VPS and an awkward problem occurred. My app uses PostgreSQL. Whenever I was about to run my app, it crashed right away. I looked at the log and found out that there was an error connecting to my database, so I tried to connect to the database from the shell and found out the error as shown below:\n\n<pre class=\"brush: shell;\">\n$ psql --d db-name --U user-name\npsql: FATAL:  no pg_hba.conf entry for host \"[local]\", user \"user-name\", database \"db-name\", SSL off\n</pre>\n\nThe problem was host-based authentication issue. In the config file I missed allowing the user to the database for the host. So the first thing I needed to do is finding the config files. To do that I logged in using the psql shell app and run:\n\n<pre class=\"brush: shell;\">\n$ psql --d postgres --u postgres\n=#SHOW config_file;\n             config_file             \n-------------------------------------\n /var/lib/pgsql/data/postgresql.conf\n(1 row)\n\n=#SHOW hba_file;\n            hba_file             \n---------------------------------\n /var/lib/pgsql/data/pg_hba.conf\n(1 row)\n\n=# \\q\n$ _\n</pre>\n\nNow that I discovered the locations of config files I checked the postgresql.conf file first if it's loading the pg_hba.conf file properly. I found no problem, then I opened the pg_hba.conf file and found no entry was added. So I added the following lines as below:\n\n<pre>\n# TYPE  DATABASE  USER  CIDR-ADDRESS  METHOD\n# IPv4 local connections:\nhost  all  all  127.0.0.1/32  md5\nhost  all  all  ::1/32  md5\nhost  confluence  confluence  xxx.xxx.xxx.xxx  md5\n# IPv6 local connections:\nhost  all  all  ::1/128  md5\n</pre>\n\nAfter the modification is done and saved the PostgreSQL is needed to be restarted.\n\n<pre class=\"brush: shell;\">\n$ service postgresql restart\n</pre>\n\nThat's it, after these few steps are done I found no problem running my Python application.","html":"<p>Couple of days ago I was deploying a Python app on our VPS and an awkward problem occurred. My app uses PostgreSQL. Whenever I was about to run my app, it crashed right away. I looked at the log and found out that there was an error connecting to my database, so I tried to connect to the database from the shell and found out the error as shown below:</p>\n\n<pre class=\"brush: shell;\">  \n$ psql --d db-name --U user-name\npsql: FATAL:  no pg_hba.conf entry for host \"[local]\", user \"user-name\", database \"db-name\", SSL off  \n</pre>\n\n<p>The problem was host-based authentication issue. In the config file I missed allowing the user to the database for the host. So the first thing I needed to do is finding the config files. To do that I logged in using the psql shell app and run:</p>\n\n<pre class=\"brush: shell;\">  \n$ psql --d postgres --u postgres\n=#SHOW config_file;\n             config_file             \n-------------------------------------\n /var/lib/pgsql/data/postgresql.conf\n(1 row)\n\n=#SHOW hba_file;\n            hba_file             \n---------------------------------\n /var/lib/pgsql/data/pg_hba.conf\n(1 row)\n\n=# \\q\n$ _\n</pre>\n\n<p>Now that I discovered the locations of config files I checked the postgresql.conf file first if it's loading the pg<em>hba.conf file properly. I found no problem, then I opened the pg</em>hba.conf file and found no entry was added. So I added the following lines as below:</p>\n\n<pre>\n# TYPE  DATABASE  USER  CIDR-ADDRESS  METHOD\n# IPv4 local connections:\nhost  all  all  127.0.0.1/32  md5\nhost  all  all  ::1/32  md5\nhost  confluence  confluence  xxx.xxx.xxx.xxx  md5\n# IPv6 local connections:\nhost  all  all  ::1/128  md5\n</pre>\n\n<p>After the modification is done and saved the PostgreSQL is needed to be restarted.</p>\n\n<pre class=\"brush: shell;\">  \n$ service postgresql restart\n</pre>\n\n<p>That's it, after these few steps are done I found no problem running my Python application.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-09-15T02:28:51.000Z","created_by":1,"updated_at":"2014-09-18T05:55:22.000Z","updated_by":1,"published_at":"2014-09-18T05:55:22.000Z","published_by":1},{"id":47,"uuid":"759bc4fd-1fa6-4035-9d9e-4a9e0840e636","title":"Install Phalcon on a Mac","slug":"install-phalcon-on-a-mac","markdown":"If you are thinking of what the Phalcon actually is, Phalcon is a web framework implemented as a C extension offering high performance and lower resource consumption.\n\n![alt](/content/images/2014/Sep/phalcon.jpg)\n\nIn a simple word, it's a PHP web framework. It should be installed as a PHP module (.so, .dll). Before installing, the module can be compiled from the source. You may wonder why should we do that for! To run Phalcon we need its platform specific compiled file. If we don't get one, then we have no way but to compile it from the source ourselves.\n\nOkay, now let's go to the point. I have a MacBook Pro and I'm using OSX Mavericks. PHP 5.4, Homebrew and Xcode are installed from before. So to install the Phalcon I've run:\n\n<pre class=\"brush: shell;\">\n$ brew search phalcon\n$ brew install php54-phalcon\n</pre>\n\nThe Phalcon for PHP 5.4 finished the installation process. At the end of the installation I got a message like this:\n\n<pre>\nTo finish installing phalcon for PHP 5.4:\n  * /usr/local/etc/php/5.4/conf.d/ext-phalcon.ini was created,\n    do not forget to remove it upon extension removal.\n  * Validate installation via one of the following methods:\n  *\n  * Using PHP from a webserver:\n  * - Restart your webserver.\n  * - Write a PHP page that calls \"phpinfo();\"\n  * - Load it in a browser and look for the info on the phalcon module.\n  * - If you see it, you have been successful!\n  *\n  * Using PHP from the command line:\n  * - Run \"php -i\" (command-line \"phpinfo()\")\n  * - Look for the info on the phalcon module.\n  * - If you see it, you have been successful!\n</pre>\n\nI've opened the `/usr/local/etc/php/5.4/conf.d/ext-phalcon.ini` file and found:\n\n<pre>\n[phalcon]\nextension=\"/usr/local/Cellar/php54-phalcon/1.3.1/phalcon.so\"\n</pre>\n\nSo what I need now is to copy the lines from this file to the end (or somewhere) of my php.ini file. To find where my php.ini is I run:\n\n<pre class=\"brush: shell;\">\nphp --ini\nConfiguration File (php.ini) Path: /etc\nLoaded Configuration File:         /etc/php.ini\nScan for additional .ini files in: /Library/Server/Web/Config/php\nAdditional .ini files parsed:      (none)\n</pre>\n\nI opened the `/etc/php.ini` file and put the two lines at the end of the file and saved it, Thus the module is installed. Now I need to check it if it's working properly. I've created an index.php containing `phpinfo()` and run an internal php server like this:\n\n<pre class=\"brush: shell;\">\n$ nano index.php\n\nGNU nano 2.0.6      File: index.php\n&lt;?php\nphpinfo();\n\n$ php -S localhost:3000\n</pre>\n\nPointing the browser at `localhost:3000` I've found that the Phalcon module is installed and working perfectly.\n\n<pre>\nphalcon\n\nPhalcon Framework\tenabled\nPhalcon Version\t1.3.1\n\nDirective\tLocal Value\tMaster Value\nphalcon.db.escape_identifiers\tOn\tOn\nphalcon.orm.column_renaming\tOn\tOn\nphalcon.orm.enable_literals\tOn\tOn\nphalcon.orm.events\tOn\tOn\nphalcon.orm.exception_on_failed_save\tOff\tOff\nphalcon.orm.not_null_validations\tOn\tOn\nphalcon.orm.virtual_foreign_keys\tOn\tOn\nphalcon.register_psr3_classes\tOff\tOff\n</pre>\n\nThat's it. Now we can run any Phalcon applications from our local server.","html":"<p>If you are thinking of what the Phalcon actually is, Phalcon is a web framework implemented as a C extension offering high performance and lower resource consumption.</p>\n\n<p><img src=\"/content/images/2014/Sep/phalcon.jpg\" alt=\"alt\" /></p>\n\n<p>In a simple word, it's a PHP web framework. It should be installed as a PHP module (.so, .dll). Before installing, the module can be compiled from the source. You may wonder why should we do that for! To run Phalcon we need its platform specific compiled file. If we don't get one, then we have no way but to compile it from the source ourselves.</p>\n\n<p>Okay, now let's go to the point. I have a MacBook Pro and I'm using OSX Mavericks. PHP 5.4, Homebrew and Xcode are installed from before. So to install the Phalcon I've run:</p>\n\n<pre class=\"brush: shell;\">  \n$ brew search phalcon\n$ brew install php54-phalcon\n</pre>\n\n<p>The Phalcon for PHP 5.4 finished the installation process. At the end of the installation I got a message like this:</p>\n\n<pre>\nTo finish installing phalcon for PHP 5.4:\n  * /usr/local/etc/php/5.4/conf.d/ext-phalcon.ini was created,\n    do not forget to remove it upon extension removal.\n  * Validate installation via one of the following methods:\n  *\n  * Using PHP from a webserver:\n  * - Restart your webserver.\n  * - Write a PHP page that calls \"phpinfo();\"\n  * - Load it in a browser and look for the info on the phalcon module.\n  * - If you see it, you have been successful!\n  *\n  * Using PHP from the command line:\n  * - Run \"php -i\" (command-line \"phpinfo()\")\n  * - Look for the info on the phalcon module.\n  * - If you see it, you have been successful!\n</pre>\n\n<p>I've opened the <code>/usr/local/etc/php/5.4/conf.d/ext-phalcon.ini</code> file and found:</p>\n\n<pre>\n[phalcon]\nextension=\"/usr/local/Cellar/php54-phalcon/1.3.1/phalcon.so\"\n</pre>\n\n<p>So what I need now is to copy the lines from this file to the end (or somewhere) of my php.ini file. To find where my php.ini is I run:</p>\n\n<pre class=\"brush: shell;\">  \nphp --ini  \nConfiguration File (php.ini) Path: /etc  \nLoaded Configuration File:         /etc/php.ini  \nScan for additional .ini files in: /Library/Server/Web/Config/php  \nAdditional .ini files parsed:      (none)  \n</pre>\n\n<p>I opened the <code>/etc/php.ini</code> file and put the two lines at the end of the file and saved it, Thus the module is installed. Now I need to check it if it's working properly. I've created an index.php containing <code>phpinfo()</code> and run an internal php server like this:</p>\n\n<pre class=\"brush: shell;\">  \n$ nano index.php\n\nGNU nano 2.0.6      File: index.php  \n&lt;?php\nphpinfo();\n\n$ php -S localhost:3000\n</pre>\n\n<p>Pointing the browser at <code>localhost:3000</code> I've found that the Phalcon module is installed and working perfectly.</p>\n\n<pre>\nphalcon\n\nPhalcon Framework    enabled\nPhalcon Version    1.3.1\n\nDirective    Local Value Master Value\nphalcon.db.escape_identifiers    On  On\nphalcon.orm.column_renaming    On  On\nphalcon.orm.enable_literals    On  On\nphalcon.orm.events    On  On\nphalcon.orm.exception_on_failed_save    Off Off\nphalcon.orm.not_null_validations    On  On\nphalcon.orm.virtual_foreign_keys    On  On\nphalcon.register_psr3_classes    Off Off\n</pre>\n\n<p>That's it. Now we can run any Phalcon applications from our local server.</p>","image":null,"featured":1,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-09-27T08:39:06.000Z","created_by":1,"updated_at":"2014-10-05T06:31:56.000Z","updated_by":1,"published_at":"2014-09-27T08:59:54.000Z","published_by":1},{"id":48,"uuid":"30038c23-532c-434e-8246-0d5157a849fd","title":"Reset MySQL root Password in OSX","slug":"reset-the-mysql-root-password-in-osx","markdown":"A few days ago I forgot the root password of the MySQL, which is running on my Mac. I wasn't working with MySQL for at least a month. So what I needed was to reset the password so that I can use the service as I needed it. Here's how I did it.\n\nThe first step is to stop MySQL service. I stoped it like this:\n\n<pre class=\"brush: shell;\">sudo /usr/local/mysql/support-files/mysql.server stop</pre>\n\nThen I need to start it in safe mode:\n\n<pre class=\"brush: shell;\">sudo /usr/local/mysql/bin/mysqld_safe --skip-grant-tables</pre>\n \nThis should be an ongoing command until the process is finished so let's open another shell/terminal window, log in with no password:\n \n<pre class=\"brush: shell;\">\nmysql -u root\nUPDATE mysql.user SET Password=PASSWORD('my-new-password') WHERE User='root';\nFLUSH PRIVILEGES;\n\\q\n</pre>\n\nif you are using MySQL 5.7 then you have to do this instead of the commands stated above. Because in MySQL 5.7, the password field in mysql.user table is removed, now the field name is 'authentication_string'.\n\n<pre class=\"brush: shell;\">\nmysql -u root\nUPDATE mysql.user SET authentication_string=PASSWORD('my-new-password') WHERE User='root';\nFLUSH PRIVILEGES;\n\\q\n</pre>\n\nNow again I need to start the MySQL server.\n\n<pre class=\"brush: shell;\">\nsudo /usr/local/mysql/support-files/mysql.server start\n</pre>\n\nAfter all of these processes was done, I was able to login as root with the new password I just assigned.\n","html":"<p>A few days ago I forgot the root password of the MySQL, which is running on my Mac. I wasn't working with MySQL for at least a month. So what I needed was to reset the password so that I can use the service as I needed it. Here's how I did it.</p>\n\n<p>The first step is to stop MySQL service. I stoped it like this:</p>\n\n<pre class=\"brush: shell;\">sudo /usr/local/mysql/support-files/mysql.server stop</pre>\n\nThen I need to start it in safe mode:\n\n<pre class=\"brush: shell;\">sudo /usr/local/mysql/bin/mysqld_safe --skip-grant-tables</pre>\n\nThis should be an ongoing command until the process is finished so let's open another shell/terminal window, log in with no password:\n\n<pre class=\"brush: shell;\">  \nmysql -u root  \nUPDATE mysql.user SET Password=PASSWORD('my-new-password') WHERE User='root';  \nFLUSH PRIVILEGES;  \n\\q\n</pre>\n\n<p>if you are using MySQL 5.7 then you have to do this instead of the commands stated above. Because in MySQL 5.7, the password field in mysql.user table is removed, now the field name is 'authentication_string'.</p>\n\n<pre class=\"brush: shell;\">  \nmysql -u root  \nUPDATE mysql.user SET authentication_string=PASSWORD('my-new-password') WHERE User='root';  \nFLUSH PRIVILEGES;  \n\\q\n</pre>\n\n<p>Now again I need to start the MySQL server.</p>\n\n<pre class=\"brush: shell;\">  \nsudo /usr/local/mysql/support-files/mysql.server start  \n</pre>\n\n<p>After all of these processes was done, I was able to login as root with the new password I just assigned.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-09-28T07:08:45.000Z","created_by":1,"updated_at":"2015-11-01T04:08:47.000Z","updated_by":1,"published_at":"2014-10-05T06:31:17.000Z","published_by":1},{"id":49,"uuid":"69548473-0c3d-4a45-a2f0-10cccf58fbf8","title":"Get 100% height working in CSS","slug":"get-100-height-working-in-css","markdown":"Couple of days earlier one of my colleagues came to me saying that he cannot make the 100% working for an element.\n\nHis html and css looks like:\n<pre>\n< !DOCTYPE html>\n< html lang=\"en\">\n< head>\n\t< meta charset=\"UTF-8\">\n\t< title>Sample< /title>\n\n\t< style>\n\t\thtml, body{\n\t\t\tpadding: 0;\n\t\t\tmargin: 0;\n\t\t}\n\t\t.heightShower  {\n\t\t\twidth:30%;\n\t\t\theight: 100%;\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #e0f;\n\t\t}\n\t< /style>\n< /head>\n< body>\n\t< div class=\"heightShower\">\n\t\tThis is the element\n\t< /div>\n< /body>\n< /html>\n</pre>\n\nBut he's not getting 100% height. The problem was 100% height depends on the element's parent element's height, in this case the element is 100% height, but the body and html doesn't have full height of the viewport as there is nothing else in the body. So the fix is simple, put 100% height for the html and body too. The fix is:\n\n<pre class=\"brush:css;\">\n/* 100% height fix */\nhtml, body{\n\theight: 100%;\n}\n</pre>\n\nSo the code now looks like:\n\n<pre>\n< !DOCTYPE html>\n< html lang=\"en\">\n< head>\n\t< meta charset=\"UTF-8\">\n\t< title>Sample< /title>\n\n\t< style>\n\t\t/* 100% height fix */\n\t\thtml, body{\n\t\t\theight: 100%;\n\t\t\tpadding: 0;\n\t\t\tmargin: 0;\n\t\t}\n\t\t.heightShower  {\n\t\t\twidth:30%;\n\t\t\theight: 100%;\n\t\t\tcolor: #fff;\n\t\t\tbackground-color: #e0f;\n\t\t}\n\t< /style>\n< /head>\n< body>\n\t< div class=\"heightShower\">\n\t\tThis is the element\n\t< /div>\n< /body>\n< /html>\n</pre>\n\nNow it works like a charm.","html":"<p>Couple of days earlier one of my colleagues came to me saying that he cannot make the 100% working for an element.</p>\n\n<p>His html and css looks like:  </p>\n\n<pre>\n< !DOCTYPE html>\n< html lang=\"en\">\n< head>\n    < meta charset=\"UTF-8\">\n    < title>Sample< /title>\n\n    < style>\n        html, body{\n            padding: 0;\n            margin: 0;\n        }\n        .heightShower  {\n            width:30%;\n            height: 100%;\n            color: #fff;\n            background-color: #e0f;\n        }\n    < /style>\n< /head>\n< body>\n    < div class=\"heightShower\">\n        This is the element\n    < /div>\n< /body>\n< /html>\n</pre>\n\n<p>But he's not getting 100% height. The problem was 100% height depends on the element's parent element's height, in this case the element is 100% height, but the body and html doesn't have full height of the viewport as there is nothing else in the body. So the fix is simple, put 100% height for the html and body too. The fix is:</p>\n\n<pre class=\"brush:css;\">  \n/* 100% height fix */\nhtml, body{  \n    height: 100%;\n}\n</pre>\n\n<p>So the code now looks like:</p>\n\n<pre>\n< !DOCTYPE html>\n< html lang=\"en\">\n< head>\n    < meta charset=\"UTF-8\">\n    < title>Sample< /title>\n\n    < style>\n        /* 100% height fix */\n        html, body{\n            height: 100%;\n            padding: 0;\n            margin: 0;\n        }\n        .heightShower  {\n            width:30%;\n            height: 100%;\n            color: #fff;\n            background-color: #e0f;\n        }\n    < /style>\n< /head>\n< body>\n    < div class=\"heightShower\">\n        This is the element\n    < /div>\n< /body>\n< /html>\n</pre>\n\n<p>Now it works like a charm.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-10-01T06:33:48.000Z","created_by":1,"updated_at":"2014-11-03T03:08:27.000Z","updated_by":1,"published_at":"2014-10-30T11:58:31.000Z","published_by":1},{"id":50,"uuid":"3b031a07-bed4-480f-bdd4-9a42ebaa7add","title":"Hombrew libpng and mpfr failed on OSX Yosemite","slug":"hombrew-libpng-and-mpfr-failed-on-osx-yosemite","markdown":"![OSX Yosemit](/content/images/2014/Oct/os_x_yosemite_roundup.jpg)\n\nTwo or three days ago I upgraded my OSX to the Yosemite. It's pretty awesome (you may complain, but I will ignore). After upgrading my system, I tried to install Phalcon PHP using my Homebrew and I got a problem with libpng. I got an error like this:\n\n<pre class=\"brush:shell;\">\nYou must install libpng and mpfr ....\n$ brew link libpng\nLinking /usr/local/Cellar/libpng/1.6.12... Error: No such file or directory -/usr/local/Cellar/libpng/1.6.10/include/libpng16\n\n$ brew link mpfr\nLinking /usr/local/Cellar/mpfr/3.1.2-p8... Error: No such file or directory - /usr/local/Cellar/mpfr/3.1.2/share/doc/mpfr\n</pre>\n\nSo I'm stuck. The solution I executed is:\n\n<pre class=\"brush:shell;\">\n$ brew prune\n$ brew remove libpng mpfr\n$ sudo echo export PATH='/usr/local/sbin:$PATH' >> ~/.bash_profile\n$ brew install freetype\n$ brew prune\n$ brew install libpng mpfr\n</pre>\n\nThat's it, after running these I was able to install Phalcon PHP via Homebrew.","html":"<p><img src=\"/content/images/2014/Oct/os_x_yosemite_roundup.jpg\" alt=\"OSX Yosemit\" /></p>\n\n<p>Two or three days ago I upgraded my OSX to the Yosemite. It's pretty awesome (you may complain, but I will ignore). After upgrading my system, I tried to install Phalcon PHP using my Homebrew and I got a problem with libpng. I got an error like this:</p>\n\n<pre class=\"brush:shell;\">  \nYou must install libpng and mpfr ....  \n$ brew link libpng\nLinking /usr/local/Cellar/libpng/1.6.12... Error: No such file or directory -/usr/local/Cellar/libpng/1.6.10/include/libpng16\n\n$ brew link mpfr\nLinking /usr/local/Cellar/mpfr/3.1.2-p8... Error: No such file or directory - /usr/local/Cellar/mpfr/3.1.2/share/doc/mpfr  \n</pre>\n\n<p>So I'm stuck. The solution I executed is:</p>\n\n<pre class=\"brush:shell;\">  \n$ brew prune\n$ brew remove libpng mpfr\n$ sudo echo export PATH='/usr/local/sbin:$PATH' >> ~/.bash_profile\n$ brew install freetype\n$ brew prune\n$ brew install libpng mpfr\n</pre>\n\n<p>That's it, after running these I was able to install Phalcon PHP via Homebrew.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-10-21T03:34:24.000Z","created_by":1,"updated_at":"2014-10-25T09:14:00.000Z","updated_by":1,"published_at":"2014-10-21T03:59:42.000Z","published_by":1},{"id":51,"uuid":"e453429d-0b55-4efb-a801-c0d40310ac5a","title":"\"elseif\" or \"else if\", what to use in PHP","slug":"elseif-or-else-if-what-to-use-in-php","markdown":"Somedays ago one of my teammate came to me asking what's the differences between '**elseif**' and '**else if**' in PHP. They do the same thing according to his view.\n\nSo guys, let's see what's the differences.\n\nIn PHP, you can write '**else if**' (in two words) and the behavior would be identical to the one of '**elseif**' (in a single word). The syntactic meaning is different (if you're familiar with C, this is the same behavior) but they will provide the same output as the result.\n\nEssentially, they will behave the same, but else if is technically equivalent to a nested structure like below:\n\n<pre class=\"brush:php;\">\nif (first_condition)\n{\n\n}\nelse\n{\n  if (second_condition)\n  {\n\n  }\n}\n</pre>\n\nNote that **elseif** and **else if** will work exactly the same way when using curly brackets as in the above example. When using a colon to define your if/elseif conditions, you can no longer separate else if into two words, or PHP will fail with a parse error.\n\n<pre class=\"brush:php;\">\nif (first_condition)\n{\n\n}\nelseif (second_condition)\n{\n\n}\n</pre>\n\nEither **elseif** or **else if** can be used. However, if you use the alternate syntax, you must use **elseif**:\n\n<pre class=\"brush:php;\">\nif (first_condition):\n  // ...\nelseif (second_condition):\n  // ...\nendif;\n</pre>\n\nSo, for better coding style, we should write as **elseif** and never use **else if** when we are working with a team. It will save time of the others.","html":"<p>Somedays ago one of my teammate came to me asking what's the differences between '<strong>elseif</strong>' and '<strong>else if</strong>' in PHP. They do the same thing according to his view.</p>\n\n<p>So guys, let's see what's the differences.</p>\n\n<p>In PHP, you can write '<strong>else if</strong>' (in two words) and the behavior would be identical to the one of '<strong>elseif</strong>' (in a single word). The syntactic meaning is different (if you're familiar with C, this is the same behavior) but they will provide the same output as the result.</p>\n\n<p>Essentially, they will behave the same, but else if is technically equivalent to a nested structure like below:</p>\n\n<pre class=\"brush:php;\">  \nif (first_condition)  \n{\n\n}\nelse  \n{\n  if (second_condition)\n  {\n\n  }\n}\n</pre>\n\n<p>Note that <strong>elseif</strong> and <strong>else if</strong> will work exactly the same way when using curly brackets as in the above example. When using a colon to define your if/elseif conditions, you can no longer separate else if into two words, or PHP will fail with a parse error.</p>\n\n<pre class=\"brush:php;\">  \nif (first_condition)  \n{\n\n}\nelseif (second_condition)  \n{\n\n}\n</pre>\n\n<p>Either <strong>elseif</strong> or <strong>else if</strong> can be used. However, if you use the alternate syntax, you must use <strong>elseif</strong>:</p>\n\n<pre class=\"brush:php;\">  \nif (first_condition):  \n  // ...\nelseif (second_condition):  \n  // ...\nendif;  \n</pre>\n\n<p>So, for better coding style, we should write as <strong>elseif</strong> and never use <strong>else if</strong> when we are working with a team. It will save time of the others.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2014-12-21T01:56:45.000Z","created_by":1,"updated_at":"2014-12-21T02:22:37.000Z","updated_by":1,"published_at":"2014-12-21T02:22:37.000Z","published_by":1},{"id":52,"uuid":"0d123c5e-a824-4b22-b6f4-5797ae366bd1","title":"How to fix media keys on iMac","slug":"how-to-fix-media-keys-on-imac","markdown":"This is not actually a problem or anything related to programming. But I faced it so badly and decided to post it in my technical blog. I might need it again, and so for the visitors.\n\n![alt](/content/images/2015/Jan/Screen-Shot-2015-01-29-at-2-03-45-PM-1.png)\n\nAt first the media keys worked well with my iTunes. I was happy, but one day it stopped working with iTunes. I was confused. The keyboard was perfect. I realized the problem.\n\nIt's not the iTunes or keyboard, it's the Google Chrome and it's Play Music app. After installing the Google Play Music app on my Google Chrome, the media keys were bound to the Music app only. So any other application can no longer get the media keys when Google Chrome is opened.\n\nThe simple solution what I did is went to **Preferences** > **Extensions** > **Keyboard Shortcuts** in Google Chrome and unbound all media keys. Kept every keyboard shortcuts **Not Set**.\n\nThis simple fix saved my months of suffering. Now I can use media keys for iTunes again.","html":"<p>This is not actually a problem or anything related to programming. But I faced it so badly and decided to post it in my technical blog. I might need it again, and so for the visitors.</p>\n\n<p><img src=\"/content/images/2015/Jan/Screen-Shot-2015-01-29-at-2-03-45-PM-1.png\" alt=\"alt\" /></p>\n\n<p>At first the media keys worked well with my iTunes. I was happy, but one day it stopped working with iTunes. I was confused. The keyboard was perfect. I realized the problem.</p>\n\n<p>It's not the iTunes or keyboard, it's the Google Chrome and it's Play Music app. After installing the Google Play Music app on my Google Chrome, the media keys were bound to the Music app only. So any other application can no longer get the media keys when Google Chrome is opened.</p>\n\n<p>The simple solution what I did is went to <strong>Preferences</strong> > <strong>Extensions</strong> > <strong>Keyboard Shortcuts</strong> in Google Chrome and unbound all media keys. Kept every keyboard shortcuts <strong>Not Set</strong>.</p>\n\n<p>This simple fix saved my months of suffering. Now I can use media keys for iTunes again.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2015-01-29T04:52:51.000Z","created_by":1,"updated_at":"2015-01-29T06:12:39.000Z","updated_by":1,"published_at":"2015-01-29T06:12:39.000Z","published_by":1},{"id":53,"uuid":"dc11738d-d1ae-49dd-95a6-558dd104aeaf","title":"Execute commands after you exit from a shell","slug":"execute-commands-after-you-exit-from-a-shell","markdown":"![](/content/images/2015/Feb/Screen-Shot-2015-02-11-at-10-54-07-AM.png)\n\nMost of us used to login to a server using an SSH client. Situations happen like this that a process will take a long time to be finished. System software upgrade is an example of this situation. If we start a command and exit the ssh the process will be stopped immediately. You are probably thinking of running the command on background. But even so, exiting from SSH will terminate the execution. So, is there any solution that the command stays running while we quit the SSH client!\n\n###Meet the `nohup` command\n\nThe answer is obvious, use **nohup** command line-utility which allows us to run commands or shell script that can continue running in the background after we log out from a shell.\n\nUse it like:\n<pre class=\"brush:shell;\">\n$ nohup command-goes-here args &\n</pre>\n\nTo view active commands:\n<pre class=\"brush:shell;\">\n$ jobs -l\n</pre>\n\n**nohup** doesn't change the scheduling priority of the commands. To change the priority we can use **nice** command with it.\n\n<pre class=\"brush:shell;\">\n$ nohup nice -n -5 command-here args &\n</pre>\n\n###Queue the command\n\nWe can schedule the command for later execution on the server. For example, we can run my-shell-script.sh script to queue (one minute) later execution:\n<pre class=\"brush:shell;\">\n$ echo \"my-shell-script.sh\" | at now + 1 minute\n</pre>\n\n###Learn to `disown` the shell\nWe can also use screen command for same purpose. The disown shell internal command can do it for us. Here is how you can try it out:\n<pre class=\"brush:shell;\">\n$ pullftp.sh &\n$ disown -h\n$ exit\n</pre>\n\nNow we can exit from the SSH. The command will be running on the server.","html":"<p><img src=\"/content/images/2015/Feb/Screen-Shot-2015-02-11-at-10-54-07-AM.png\" alt=\"\" /></p>\n\n<p>Most of us used to login to a server using an SSH client. Situations happen like this that a process will take a long time to be finished. System software upgrade is an example of this situation. If we start a command and exit the ssh the process will be stopped immediately. You are probably thinking of running the command on background. But even so, exiting from SSH will terminate the execution. So, is there any solution that the command stays running while we quit the SSH client!</p>\n\n<h3 id=\"meetthenohupcommand\">Meet the <code>nohup</code> command</h3>\n\n<p>The answer is obvious, use <strong>nohup</strong> command line-utility which allows us to run commands or shell script that can continue running in the background after we log out from a shell.</p>\n\n<p>Use it like:  </p>\n\n<pre class=\"brush:shell;\">  \n$ nohup command-goes-here args &\n</pre>\n\n<p>To view active commands:  </p>\n\n<pre class=\"brush:shell;\">  \n$ jobs -l\n</pre>\n\n<p><strong>nohup</strong> doesn't change the scheduling priority of the commands. To change the priority we can use <strong>nice</strong> command with it.</p>\n\n<pre class=\"brush:shell;\">  \n$ nohup nice -n -5 command-here args &\n</pre>\n\n<h3 id=\"queuethecommand\">Queue the command</h3>\n\n<p>We can schedule the command for later execution on the server. For example, we can run my-shell-script.sh script to queue (one minute) later execution:  </p>\n\n<pre class=\"brush:shell;\">  \n$ echo \"my-shell-script.sh\" | at now + 1 minute\n</pre>\n\n<h3 id=\"learntodisowntheshell\">Learn to <code>disown</code> the shell</h3>\n\n<p>We can also use screen command for same purpose. The disown shell internal command can do it for us. Here is how you can try it out:  </p>\n\n<pre class=\"brush:shell;\">  \n$ pullftp.sh &\n$ disown -h\n$ exit\n</pre>\n\n<p>Now we can exit from the SSH. The command will be running on the server.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2015-01-31T09:23:49.000Z","created_by":1,"updated_at":"2015-02-11T02:05:07.000Z","updated_by":1,"published_at":"2015-02-09T10:11:06.000Z","published_by":1},{"id":54,"uuid":"80b2460b-0ad2-4aad-a07d-c2d32229e639","title":"English dictionary text file","slug":"english-dictionary-text-file","markdown":"Couple of days before, I was making a search engine for my two projects. One project was using Elasticsearch and another one was using Apache Solr. For them both I needed a file containing all the words from an English dictionary.\n\nI search here and there and finally found that every unix like system has this kind of file with it to predict text. I was using and iMac. I found the text file in the following location:\n\n`/usr/share/dict/words`\n\nMy work is done, I used the file and rebuild the Apache Solr dictionary.","html":"<p>Couple of days before, I was making a search engine for my two projects. One project was using Elasticsearch and another one was using Apache Solr. For them both I needed a file containing all the words from an English dictionary.</p>\n\n<p>I search here and there and finally found that every unix like system has this kind of file with it to predict text. I was using and iMac. I found the text file in the following location:</p>\n\n<p><code>/usr/share/dict/words</code></p>\n\n<p>My work is done, I used the file and rebuild the Apache Solr dictionary.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2015-02-03T06:12:20.000Z","created_by":1,"updated_at":"2015-03-25T06:45:28.000Z","updated_by":1,"published_at":"2015-03-25T06:45:02.000Z","published_by":1},{"id":55,"uuid":"8fa6c390-e7e9-429e-8105-b6ccf8703f28","title":"MongoDB driver on MAMP","slug":"mongodb-driver-on-mamp","markdown":"<pre>\n/Applications/MAMP/bin/php/php5.4.4/include/php/Zend/zend.h:51:11: fatal error: \n      'zend_config.h' file not found\n# include < zend_config.h >\n</pre>\n\nI finally managed to install xdebug. In fact, I had to install Xcode developer tool and then copy the files from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/php into /Applications/MAMP/bin/php/php5.5.18/include and then it worked !\n\n\nhttp://lukepeters.me/blog/setting-up-mongodb-with-php-and-mamp","html":"<pre>\n/Applications/MAMP/bin/php/php5.4.4/include/php/Zend/zend.h:51:11: fatal error: \n      'zend_config.h' file not found\n# include < zend_config.h >\n</pre>\n\n<p>I finally managed to install xdebug. In fact, I had to install Xcode developer tool and then copy the files from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/php into /Applications/MAMP/bin/php/php5.5.18/include and then it worked !</p>\n\n<p><a href='http://lukepeters.me/blog/setting-up-mongodb-with-php-and-mamp'>http://lukepeters.me/blog/setting-up-mongodb-with-php-and-mamp</a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2015-02-04T07:06:40.000Z","created_by":1,"updated_at":"2015-03-28T03:39:02.000Z","updated_by":1,"published_at":null,"published_by":null},{"id":56,"uuid":"9668d335-0b6a-4a0f-9576-cc3f1ea8c264","title":"How to Install JAVA 8 on CentOS, RHEL and Fedora","slug":"how-to-install-java-8-on-centos-rhel-and-fedora","markdown":"Recently I was instructed to install Java 8 on our servers. There are plenty of reasons for doing that. Here's how I have done that. Of-course you will need root access to your server. If your are using a shared hosting, then it will be wise to leave this thing to your hosting authority.\n\n\n\n###Download the Java 8\nLets keep the java source to our `/opt/` directory.\n\n####For 64 Bit Servers\n```\n# cd /opt/\n# wget --no-cookies --no-check-certificate --header \"Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie\" \"http://download.oracle.com/otn-pub/java/jdk/8u40-b25/jdk-8u40-linux-x64.tar.gz\"\n\n# tar xzf jdk-8u40-linux-x64.tar.gz\n```\n\n####For 32Bit Servers\n```\n# cd /opt/\n# wget --no-cookies --no-check-certificate --header \"Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie\" \"http://download.oracle.com/otn-pub/java/jdk/8u40-b25/jdk-8u40-linux-i586.tar.gz\"\n\n# tar xzf jdk-8u40-linux-i586.tar.gz\n```\n\n\n###Install Java 8\nNow install it from the `jdk1.8.0_40` directory.\n\n```\n# cd /opt/jdk1.8.0_40/\n# alternatives --install /usr/bin/java java /opt/jdk1.8.0_40/bin/java 2\n# alternatives --config java\n\n\nThere are 3 programs which provide 'java'.\n\n  Selection    Command\n-----------------------------------------------\n*  1           /opt/jdk1.8.0/bin/java\n + 2           /opt/jdk1.8.0_25/bin/java\n   3           /opt/jdk1.8.0_40/bin/java\n\nEnter to keep the current selection[+], or type selection number: 3\n```\n\nNow install rest of the utilities.\n\n```\n# alternatives --install /usr/bin/jar jar /opt/jdk1.8.0_40/bin/jar 2\n# alternatives --install /usr/bin/javac javac /opt/jdk1.8.0_40/bin/javac 2\n# alternatives --set jar /opt/jdk1.8.0_40/bin/jar\n# alternatives --set javac /opt/jdk1.8.0_40/bin/javac \n```\n\nAt this moment we have installed Java 8. So lets verify it if it's working properly.\n\n```\nroot@tecadmin ~# java -version\n\njava version \"1.8.0_40\"\nJava(TM) SE Runtime Environment (build 1.8.0_40-b25)\nJava HotSpot(TM) 64-Bit Server VM (build 25.40-b25, mixed mode)\n```\n\n###Setup system variables\nSetup JAVA_HOME Variable\n```\n# export JAVA_HOME=/opt/jdk1.8.0_40\n```\nSetup JRE_HOME Variable\n```\n# export JRE_HOME=/opt/jdk1.8.0_40/jre\n```\nSetup PATH Variable\n```\n# export PATH=$PATH:/opt/jdk1.8.0_40/bin:/opt/jdk1.8.0_40/jre/bin\n```\n\nThat's the end. Now Java 8 is installed on your server.","html":"<p>Recently I was instructed to install Java 8 on our servers. There are plenty of reasons for doing that. Here's how I have done that. Of-course you will need root access to your server. If your are using a shared hosting, then it will be wise to leave this thing to your hosting authority.</p>\n\n<h3 id=\"downloadthejava8\">Download the Java 8</h3>\n\n<p>Lets keep the java source to our <code>/opt/</code> directory.</p>\n\n<h4 id=\"for64bitservers\">For 64 Bit Servers</h4>\n\n<pre><code># cd /opt/\n# wget --no-cookies --no-check-certificate --header \"Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie\" \"http://download.oracle.com/otn-pub/java/jdk/8u40-b25/jdk-8u40-linux-x64.tar.gz\"\n\n# tar xzf jdk-8u40-linux-x64.tar.gz\n</code></pre>\n\n<h4 id=\"for32bitservers\">For 32Bit Servers</h4>\n\n<pre><code># cd /opt/\n# wget --no-cookies --no-check-certificate --header \"Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie\" \"http://download.oracle.com/otn-pub/java/jdk/8u40-b25/jdk-8u40-linux-i586.tar.gz\"\n\n# tar xzf jdk-8u40-linux-i586.tar.gz\n</code></pre>\n\n<h3 id=\"installjava8\">Install Java 8</h3>\n\n<p>Now install it from the <code>jdk1.8.0_40</code> directory.</p>\n\n<pre><code># cd /opt/jdk1.8.0_40/\n# alternatives --install /usr/bin/java java /opt/jdk1.8.0_40/bin/java 2\n# alternatives --config java\n\n\nThere are 3 programs which provide 'java'.\n\n  Selection    Command\n-----------------------------------------------\n*  1           /opt/jdk1.8.0/bin/java\n + 2           /opt/jdk1.8.0_25/bin/java\n   3           /opt/jdk1.8.0_40/bin/java\n\nEnter to keep the current selection[+], or type selection number: 3  \n</code></pre>\n\n<p>Now install rest of the utilities.</p>\n\n<pre><code># alternatives --install /usr/bin/jar jar /opt/jdk1.8.0_40/bin/jar 2\n# alternatives --install /usr/bin/javac javac /opt/jdk1.8.0_40/bin/javac 2\n# alternatives --set jar /opt/jdk1.8.0_40/bin/jar\n# alternatives --set javac /opt/jdk1.8.0_40/bin/javac \n</code></pre>\n\n<p>At this moment we have installed Java 8. So lets verify it if it's working properly.</p>\n\n<pre><code>root@tecadmin ~# java -version\n\njava version \"1.8.0_40\"  \nJava(TM) SE Runtime Environment (build 1.8.0_40-b25)  \nJava HotSpot(TM) 64-Bit Server VM (build 25.40-b25, mixed mode)  \n</code></pre>\n\n<h3 id=\"setupsystemvariables\">Setup system variables</h3>\n\n<p>Setup JAVA_HOME Variable  </p>\n\n<pre><code># export JAVA_HOME=/opt/jdk1.8.0_40\n</code></pre>\n\n<p>Setup JRE_HOME Variable  </p>\n\n<pre><code># export JRE_HOME=/opt/jdk1.8.0_40/jre\n</code></pre>\n\n<p>Setup PATH Variable  </p>\n\n<pre><code># export PATH=$PATH:/opt/jdk1.8.0_40/bin:/opt/jdk1.8.0_40/jre/bin\n</code></pre>\n\n<p>That's the end. Now Java 8 is installed on your server.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2015-03-29T06:57:46.000Z","created_by":1,"updated_at":"2015-08-09T02:32:29.000Z","updated_by":1,"published_at":"2015-08-09T02:30:21.000Z","published_by":1},{"id":57,"uuid":"6b2d611d-587e-461b-943d-39f0705b6943","title":"Allow Neo4j remote access","slug":"allow-neo4j-remote-access","markdown":"","html":"","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2015-03-30T10:34:38.000Z","created_by":1,"updated_at":"2015-03-30T10:34:38.000Z","updated_by":1,"published_at":null,"published_by":null},{"id":58,"uuid":"80c3bf98-dbb7-442a-a164-4d5514b6ccac","title":"Mastering UFW on Ubuntu","slug":"mastering-ufw-on-ubuntu","markdown":"A month before, I have purchased a node in Digital Ocean. I have to admit it, they are a very good cloud solution provider. From a tiny startup to a large corporate, they have any type of solution. I have chosen Ubuntu 14.4 to go with the Digital Ocean droplet. Why I chose Ubuntu! Because of the vast amount of packages available for it via Aptitude.\n\nAfter having my droplet booted up, there are a lot of work to do. I started with installing the UFW.\n\n![](/content/images/2015/May/Firewall-Installation6.jpg)\n\n###What is UFW?\nUFW stands for Uncomplicated Firewall, is a front-end to iptables. It will manage your firewall while providing a very easy interface. It's supported and popular on most of the Linux distos.\n\n###How to install UFW\nUFW can be installed using aptitude. The following command will install UFW.\n\n<pre class=\"brush:shell;\">\n$ sudo apt-get install ufw\n</pre>\n\n###Start the UFW\nCurrent status of UFW can be seen using the command below.\n<pre class=\"brush:shell;\">\n$ sudo ufw status\n</pre>\n\nTo start and stop UFW the following commands are used below.\n<pre class=\"brush:shell;\">\n$ sudo ufw enable\n$ sudo ufw disable\n</pre>\n\n###Using IPv6\nTo enable IPv6 support we need to modify the **/etc/default/ufw** file.\n<pre class=\"brush:shell;\">\n$ sudo vi /etc/default/ufw\n</pre>\nThen make sure \"IPV6\" is set to \"yes\", like:\n```\nIPV6=yes\n```\nNow restart the UFW.\n\n###Setup defaults\nAfter installing and starting the UFW, the first task is to setup the default rules. To deny all incoming and outgoing connections I have executed:\n<pre class=\"brush:shell;\">\n$ sudo ufw default deny incoming\n$ sudo ufw default deny outgoing\n</pre>\n\nif you do not want to be so much restrictive, then you can allow all outgoing connections.\n\n###Some defaults settings\nAfter done so, I needed to configure UFW to continue working. Like allowing SSH, WWW etc.\n<pre class=\"brush:shell;\">\n$ sudo ufw allow ssh\n$ sudo ufw allow www\n</pre>\n\nIf you want to allow other ports, follow the command:\n<pre class=\"brush:shell;\">\n$ sudo ufw allow 8000/tcp\n</pre>\n\nUpdate your port in place of 8000 and udp if needed in place of tcp. If you need to set rules for port range:\n<pre class=\"brush:shell;\">\n$ sudo ufw allow 8000:9000/tcp\n</pre>\n\nSetting rules for a specific IP address is also possible:\n<pre class=\"brush:shell;\">\n$ sudo ufw allow  from 192.168.255.255\n</pre>\nUpdate your IP as needed.\n\n###Deny a connection\nSetting rules to deny is almost like the allow command. We need to replace the allow with deny like:\n<pre class=\"brush:shell;\">\n$ sudo ufw deny 8000/tcp\n</pre>\n\n###Deleting an existing rule\nDeleting a rule is also possible.\n<pre class=\"brush:shell;\">\n$ sudo ufw delete allow ssh\n$ sudo ufw delete allow 80/tcp\n$ sudo ufw delete allow 1000:2000/tcp\n</pre>\nIf this way of deleting seems difficult to you, then you can get the current rules in a numbered list and use that number to delete the rule like:\n<pre class=\"brush:shell;\">\n$ sudo ufw status numbered\n$ sudo ufw delete [number]\n</pre>\n\n###Problem with APT-GET\nAs I have denied all the connection now, apt-get will not work because of UFW. To fix this issue I have added the following rules:\n\n<pre class=\"brush:shell;\">\nufw allow http\nufw allow 53\nufw allow out http\nufw allow out 53\n</pre>\n\n###RESET everything\nIf you need to reset the total configuration then:\n<pre class=\"brush:shell;\">\n$ sudo ufw reset\n</pre>\n\nIf you are working on a desktop (not a server), and you have access to a GUI, then you can use GUFW to manage all these settings from a graphical interface. Get it from here [http://gufw.org/](http://gufw.org/)\n\nThat's it. That's how to work with UFW on an Ubuntu platform.","html":"<p>A month before, I have purchased a node in Digital Ocean. I have to admit it, they are a very good cloud solution provider. From a tiny startup to a large corporate, they have any type of solution. I have chosen Ubuntu 14.4 to go with the Digital Ocean droplet. Why I chose Ubuntu! Because of the vast amount of packages available for it via Aptitude.</p>\n\n<p>After having my droplet booted up, there are a lot of work to do. I started with installing the UFW.</p>\n\n<p><img src=\"/content/images/2015/May/Firewall-Installation6.jpg\" alt=\"\" /></p>\n\n<h3 id=\"whatisufw\">What is UFW?</h3>\n\n<p>UFW stands for Uncomplicated Firewall, is a front-end to iptables. It will manage your firewall while providing a very easy interface. It's supported and popular on most of the Linux distos.</p>\n\n<h3 id=\"howtoinstallufw\">How to install UFW</h3>\n\n<p>UFW can be installed using aptitude. The following command will install UFW.</p>\n\n<pre class=\"brush:shell;\">  \n$ sudo apt-get install ufw\n</pre>\n\n<h3 id=\"starttheufw\">Start the UFW</h3>\n\n<p>Current status of UFW can be seen using the command below.  </p>\n\n<pre class=\"brush:shell;\">  \n$ sudo ufw status\n</pre>\n\n<p>To start and stop UFW the following commands are used below.  </p>\n\n<pre class=\"brush:shell;\">  \n$ sudo ufw enable\n$ sudo ufw disable\n</pre>\n\n<h3 id=\"usingipv6\">Using IPv6</h3>\n\n<p>To enable IPv6 support we need to modify the <strong>/etc/default/ufw</strong> file.  </p>\n\n<pre class=\"brush:shell;\">  \n$ sudo vi /etc/default/ufw\n</pre>  \n\n<p>Then make sure \"IPV6\" is set to \"yes\", like:  </p>\n\n<pre><code>IPV6=yes  \n</code></pre>\n\n<p>Now restart the UFW.</p>\n\n<h3 id=\"setupdefaults\">Setup defaults</h3>\n\n<p>After installing and starting the UFW, the first task is to setup the default rules. To deny all incoming and outgoing connections I have executed:  </p>\n\n<pre class=\"brush:shell;\">  \n$ sudo ufw default deny incoming\n$ sudo ufw default deny outgoing\n</pre>\n\n<p>if you do not want to be so much restrictive, then you can allow all outgoing connections.</p>\n\n<h3 id=\"somedefaultssettings\">Some defaults settings</h3>\n\n<p>After done so, I needed to configure UFW to continue working. Like allowing SSH, WWW etc.  </p>\n\n<pre class=\"brush:shell;\">  \n$ sudo ufw allow ssh\n$ sudo ufw allow www\n</pre>\n\n<p>If you want to allow other ports, follow the command:  </p>\n\n<pre class=\"brush:shell;\">  \n$ sudo ufw allow 8000/tcp\n</pre>\n\n<p>Update your port in place of 8000 and udp if needed in place of tcp. If you need to set rules for port range:  </p>\n\n<pre class=\"brush:shell;\">  \n$ sudo ufw allow 8000:9000/tcp\n</pre>\n\n<p>Setting rules for a specific IP address is also possible:  </p>\n\n<pre class=\"brush:shell;\">  \n$ sudo ufw allow  from 192.168.255.255\n</pre>  \n\n<p>Update your IP as needed.</p>\n\n<h3 id=\"denyaconnection\">Deny a connection</h3>\n\n<p>Setting rules to deny is almost like the allow command. We need to replace the allow with deny like:  </p>\n\n<pre class=\"brush:shell;\">  \n$ sudo ufw deny 8000/tcp\n</pre>\n\n<h3 id=\"deletinganexistingrule\">Deleting an existing rule</h3>\n\n<p>Deleting a rule is also possible.  </p>\n\n<pre class=\"brush:shell;\">  \n$ sudo ufw delete allow ssh\n$ sudo ufw delete allow 80/tcp\n$ sudo ufw delete allow 1000:2000/tcp\n</pre>  \n\n<p>If this way of deleting seems difficult to you, then you can get the current rules in a numbered list and use that number to delete the rule like:  </p>\n\n<pre class=\"brush:shell;\">  \n$ sudo ufw status numbered\n$ sudo ufw delete [number]\n</pre>\n\n<h3 id=\"problemwithaptget\">Problem with APT-GET</h3>\n\n<p>As I have denied all the connection now, apt-get will not work because of UFW. To fix this issue I have added the following rules:</p>\n\n<pre class=\"brush:shell;\">  \nufw allow http  \nufw allow 53  \nufw allow out http  \nufw allow out 53  \n</pre>\n\n<h3 id=\"reseteverything\">RESET everything</h3>\n\n<p>If you need to reset the total configuration then:  </p>\n\n<pre class=\"brush:shell;\">  \n$ sudo ufw reset\n</pre>\n\n<p>If you are working on a desktop (not a server), and you have access to a GUI, then you can use GUFW to manage all these settings from a graphical interface. Get it from here <a href=\"http://gufw.org/\">http://gufw.org/</a></p>\n\n<p>That's it. That's how to work with UFW on an Ubuntu platform.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2015-04-02T11:40:12.000Z","created_by":1,"updated_at":"2015-05-17T10:29:08.000Z","updated_by":1,"published_at":"2015-05-16T02:50:22.000Z","published_by":1},{"id":59,"uuid":"2e8ad11d-6af4-41b8-95cf-10466daca803","title":"How to setup nginx, php and mysql on Ubuntu","slug":"how-to-setup-nginx-php-and-mysql-on-ubuntu","markdown":"Recently I was assigned to setup Nginx, PHP and MySQL on a Ubuntu node. There was couple of reasons to choose this environment I think you guys already familier with.\n\nFirst thing I did is to update my APT and install the Nginx using APT-GET. Then I started the Nginx server and installed PHP-fpm for this server.\n\n```\nsudo apt-get update\nsudo apt-get install nginx\nsudo service nginx start\nsudo apt-get install php5-fpm\n```\n\n```\n# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n#\n#location ~ \\.php$ {\n#       fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n#        # NOTE: You should have \"cgi.fix_pathinfo = 0;\" in php.ini\n#\n#        # With php5-cgi alone:\n#       fastcgi_pass 127.0.0.1:9000;\n         # With php5-fpm:\n#       fastcgi_pass unix:/var/run/php5-fpm.sock;\n#       fastcgi_index index.php;\n#        include fastcgi_params;\n#}\n```\n\n\n```\n# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n#\nlocation ~ \\.php$ {\n        fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n#        # NOTE: You should have \"cgi.fix_pathinfo = 0;\" in php.ini\n#\n#        # With php5-cgi alone:\n#       fastcgi_pass 127.0.0.1:9000;\n         # With php5-fpm:\n        fastcgi_pass unix:/var/run/php5-fpm.sock;\n        fastcgi_index index.php;\n        include fastcgi_params;\n}\n```","html":"<p>Recently I was assigned to setup Nginx, PHP and MySQL on a Ubuntu node. There was couple of reasons to choose this environment I think you guys already familier with.</p>\n\n<p>First thing I did is to update my APT and install the Nginx using APT-GET. Then I started the Nginx server and installed PHP-fpm for this server.</p>\n\n<pre><code>sudo apt-get update  \nsudo apt-get install nginx  \nsudo service nginx start  \nsudo apt-get install php5-fpm  \n</code></pre>\n\n<pre><code># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n#\n#location ~ \\.php$ {\n#       fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n#        # NOTE: You should have \"cgi.fix_pathinfo = 0;\" in php.ini\n#\n#        # With php5-cgi alone:\n#       fastcgi_pass 127.0.0.1:9000;\n         # With php5-fpm:\n#       fastcgi_pass unix:/var/run/php5-fpm.sock;\n#       fastcgi_index index.php;\n#        include fastcgi_params;\n#}\n</code></pre>\n\n<pre><code># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n#\nlocation ~ \\.php$ {  \n        fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n#        # NOTE: You should have \"cgi.fix_pathinfo = 0;\" in php.ini\n#\n#        # With php5-cgi alone:\n#       fastcgi_pass 127.0.0.1:9000;\n         # With php5-fpm:\n        fastcgi_pass unix:/var/run/php5-fpm.sock;\n        fastcgi_index index.php;\n        include fastcgi_params;\n}\n</code></pre>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2015-04-02T12:30:14.000Z","created_by":1,"updated_at":"2015-10-01T10:04:34.000Z","updated_by":1,"published_at":null,"published_by":null},{"id":60,"uuid":"9f022605-d7dd-4d9b-bcc2-b5bd558a679b","title":"How to setup Minecraft Server on your Linode","slug":"how-to-setup-minecraft-server-on-your-linode","markdown":"","html":"","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2015-09-05T02:31:10.000Z","created_by":1,"updated_at":"2015-09-05T02:31:10.000Z","updated_by":1,"published_at":null,"published_by":null},{"id":61,"uuid":"d9a8fa41-783c-474c-b049-637dae9a3db2","title":"Change the Bootstrap NavBar Breakpoint","slug":"change-the-bootstrap-navbar-breakpoint","markdown":"![](/content/images/2015/Oct/Components-B7-Bootstrap.png)\n\nI use mostly Bootstrap framework for my every projects. Although I like the Foundation framework. If the provided design does not seem proper for any of these framework I used to hard code the rest of the work. I often face a situation like designer wants a different breakpoint to trigger the mobile menu. Suppose a designer wants the mobile menu from the \"md\" size. This is quite easy in bootstrap. There are two ways of doing this. One is to modify the less source file and recompile it. The second one is directly write CSS codes.\n\n###Modifying the LESS file\nChange the `@navbarCollapseWidth` variable in `less/variables.less` file to your desired value. Then recompile the less file to produce the updated CSS file.\n\n\n###Modifying the CSS file\nThis is quite easy and I thing most of the people will use this method. Just Place this section in your stylesheet to overwrite the default behaviour.\n\n<pre class=\"brush:css;\">\n/* showing the mobile menu */\n@media (max-width: 1070px) {\n    .navbar-header {\n        float: none;\n    }\n    .navbar-toggle {\n        display: block;\n    }\n    .navbar-collapse {\n        border-top: 1px solid transparent;\n        box-shadow: inset 0 1px 0 rgba(255,255,255,0.1);\n    }\n    .navbar-collapse.collapse {\n        display: none!important;\n    }\n    .navbar-nav {\n        float: none!important;\n        margin: 7.5px -15px;\n    }\n    .navbar-nav>li {\n        float: none;\n    }\n    .navbar-nav>li>a {\n        padding-top: 10px;\n        padding-bottom: 10px;\n    }\n}\n</pre>\n\n`Note: Replace 1070px to your desired value.`\n\nThat's it, that's how to change the default Bootstrap NavBar breakpoint.","html":"<p><img src=\"/content/images/2015/Oct/Components-B7-Bootstrap.png\" alt=\"\" /></p>\n\n<p>I use mostly Bootstrap framework for my every projects. Although I like the Foundation framework. If the provided design does not seem proper for any of these framework I used to hard code the rest of the work. I often face a situation like designer wants a different breakpoint to trigger the mobile menu. Suppose a designer wants the mobile menu from the \"md\" size. This is quite easy in bootstrap. There are two ways of doing this. One is to modify the less source file and recompile it. The second one is directly write CSS codes.</p>\n\n<h3 id=\"modifyingthelessfile\">Modifying the LESS file</h3>\n\n<p>Change the <code>@navbarCollapseWidth</code> variable in <code>less/variables.less</code> file to your desired value. Then recompile the less file to produce the updated CSS file.</p>\n\n<h3 id=\"modifyingthecssfile\">Modifying the CSS file</h3>\n\n<p>This is quite easy and I thing most of the people will use this method. Just Place this section in your stylesheet to overwrite the default behaviour.</p>\n\n<pre class=\"brush:css;\">  \n/* showing the mobile menu */\n@media (max-width: 1070px) {\n    .navbar-header {\n        float: none;\n    }\n    .navbar-toggle {\n        display: block;\n    }\n    .navbar-collapse {\n        border-top: 1px solid transparent;\n        box-shadow: inset 0 1px 0 rgba(255,255,255,0.1);\n    }\n    .navbar-collapse.collapse {\n        display: none!important;\n    }\n    .navbar-nav {\n        float: none!important;\n        margin: 7.5px -15px;\n    }\n    .navbar-nav>li {\n        float: none;\n    }\n    .navbar-nav>li>a {\n        padding-top: 10px;\n        padding-bottom: 10px;\n    }\n}\n</pre>\n\n<p><code>Note: Replace 1070px to your desired value.</code></p>\n\n<p>That's it, that's how to change the default Bootstrap NavBar breakpoint.</p>","image":null,"featured":1,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2015-10-21T02:46:17.000Z","created_by":1,"updated_at":"2015-11-01T01:20:56.000Z","updated_by":1,"published_at":"2015-10-29T02:36:05.000Z","published_by":1},{"id":62,"uuid":"bb1dc505-2126-4b9f-810a-de4712c971d5","title":"Top 5 Technical Challenges building webapps","slug":"top-5-technical-challenges-building-webapps","markdown":"###No more gerbase coding\nUse the standard coding pattern and always comment, document and indent your code. Follow your team leader's rules. Without following rules your code is nothing to the industry. Example:\n```\n/**\n * @name getCartAmount\n * @author Your Name\n * @desc this function will return the cart amount\n * \n * @returns a float number\n */\nfunction getCartAmount ()\n{\n\t// total amount from the cart\n\t$total = $_SESSION ['cart_amount'];\n\t// get the discount\n\t$discount = $_SESSION ['discount'];\n\t// remove the discount from it\n\t$total -= $discount;\n\t// save it for future\n\t$_SESSION ['cart_amount'] = $total;\n\t// no more discount to perform\n\t$_SESSION ['discount'] = 0;\n\t// return the total now\n\treturn $total;\n}\n```\n\n###Modular-wise coding\nYou are no longer doing homework, you are making a part of a big universe. Suppose you need to close a modal window in javascript.\nSo, don't code like:\n```\n$('#modal').hide();\n```\ncode like:\n```\nfunction closeModal() {\n\t$('#modal').hide();\n}\n```\nIt will be perfect if you make a modal window instance like:\n```\n// code here\nmodal.close = function() {\n\t$('#modal').hide();\n};\n```\n\n###Thinking of Future\nAlways think before you code. Take more time thinking and less time typing. Before writing a one line code think for 1 minute. What you are making is not finished now, it will be bigger day by day. It's your responsibility to make the code future friendly.\n\nSo, while writing like\n```\na = 10;\nb = a * 299;\n```\nwrite like:\n```\na = 10;\nc = 299;\nb = a * c;\n```\n\n###Using a Framework\nFramework offers many pre-written and well written modules, libraries, helpers etc. So, using a framework always saves time and ensures security.\n\n###Using a blueprint\nAlways start your project from a blueprint. A Blueprint is like boilerplate where many simple things are ready to use and the structure is defined well enough for a big application.\n","html":"<h3 id=\"nomoregerbasecoding\">No more gerbase coding</h3>\n\n<p>Use the standard coding pattern and always comment, document and indent your code. Follow your team leader's rules. Without following rules your code is nothing to the industry. Example:  </p>\n\n<pre><code>/**\n * @name getCartAmount\n * @author Your Name\n * @desc this function will return the cart amount\n * \n * @returns a float number\n */\nfunction getCartAmount ()  \n{\n    // total amount from the cart\n    $total = $_SESSION ['cart_amount'];\n    // get the discount\n    $discount = $_SESSION ['discount'];\n    // remove the discount from it\n    $total -= $discount;\n    // save it for future\n    $_SESSION ['cart_amount'] = $total;\n    // no more discount to perform\n    $_SESSION ['discount'] = 0;\n    // return the total now\n    return $total;\n}\n</code></pre>\n\n<h3 id=\"modularwisecoding\">Modular-wise coding</h3>\n\n<p>You are no longer doing homework, you are making a part of a big universe. Suppose you need to close a modal window in javascript. <br />\nSo, don't code like:  </p>\n\n<pre><code>$('#modal').hide();\n</code></pre>\n\n<p>code like:  </p>\n\n<pre><code>function closeModal() {  \n    $('#modal').hide();\n}\n</code></pre>\n\n<p>It will be perfect if you make a modal window instance like:  </p>\n\n<pre><code>// code here\nmodal.close = function() {  \n    $('#modal').hide();\n};\n</code></pre>\n\n<h3 id=\"thinkingoffuture\">Thinking of Future</h3>\n\n<p>Always think before you code. Take more time thinking and less time typing. Before writing a one line code think for 1 minute. What you are making is not finished now, it will be bigger day by day. It's your responsibility to make the code future friendly.</p>\n\n<p>So, while writing like  </p>\n\n<pre><code>a = 10;  \nb = a * 299;  \n</code></pre>\n\n<p>write like:  </p>\n\n<pre><code>a = 10;  \nc = 299;  \nb = a * c;  \n</code></pre>\n\n<h3 id=\"usingaframework\">Using a Framework</h3>\n\n<p>Framework offers many pre-written and well written modules, libraries, helpers etc. So, using a framework always saves time and ensures security.</p>\n\n<h3 id=\"usingablueprint\">Using a blueprint</h3>\n\n<p>Always start your project from a blueprint. A Blueprint is like boilerplate where many simple things are ready to use and the structure is defined well enough for a big application.</p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2015-10-28T05:17:01.000Z","created_by":1,"updated_at":"2015-10-28T05:17:52.000Z","updated_by":1,"published_at":null,"published_by":null},{"id":63,"uuid":"7d3cd08c-c5cd-4853-8127-6480320ee3d6","title":"Top technical challenges","slug":"top-technical-challenges","markdown":"- Managing huge database\nWhen your database goes too big that MySQL can no longer handle.\n- Reducing the load time\nAll about reducing DB hit by using cache and loading the html resources parallelly\n- Managing CDN\nWe can use Amazon S3 server for this purpose.\n- Optimize the database without losing data\n- Using multiple platform\nWhen you need to use multiple languages, frameworks, services all together\n","html":"<ul>\n<li>Managing huge database\nWhen your database goes too big that MySQL can no longer handle.  </li>\n<li>Reducing the load time\nAll about reducing DB hit by using cache and loading the html resources parallelly  </li>\n<li>Managing CDN\nWe can use Amazon S3 server for this purpose.  </li>\n<li>Optimize the database without losing data</li>\n<li>Using multiple platform\nWhen you need to use multiple languages, frameworks, services all together</li>\n</ul>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2015-10-28T05:18:38.000Z","created_by":1,"updated_at":"2015-10-28T05:18:38.000Z","updated_by":1,"published_at":null,"published_by":null},{"id":64,"uuid":"d468c839-eb21-47a3-ab4c-612a884480a3","title":"How to install ImageMagick on Ubuntu","slug":"how-to-install-imagemagick-on-ubuntu","markdown":"http://askubuntu.com/questions/471045/14-04-doesnt-have-package-imagemagick","html":"<p><a href='http://askubuntu.com/questions/471045/14-04-doesnt-have-package-imagemagick'>http://askubuntu.com/questions/471045/14-04-doesnt-have-package-imagemagick</a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2015-11-01T02:04:13.000Z","created_by":1,"updated_at":"2015-11-01T02:06:22.000Z","updated_by":1,"published_at":null,"published_by":null},{"id":65,"uuid":"05b52abc-2230-48dd-94d5-a48f4abb78d1","title":"How to Install Java 8 on Ubuntu","slug":"how-to-install-java-8-on-ubuntu","markdown":"http://tecadmin.net/install-oracle-java-8-jdk-8-ubuntu-via-ppa/","html":"<p><a href='http://tecadmin.net/install-oracle-java-8-jdk-8-ubuntu-via-ppa/'>http://tecadmin.net/install-oracle-java-8-jdk-8-ubuntu-via-ppa/</a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2015-11-01T02:04:28.000Z","created_by":1,"updated_at":"2015-11-01T02:06:07.000Z","updated_by":1,"published_at":null,"published_by":null},{"id":66,"uuid":"1badad51-0654-4117-9a13-94a66e800073","title":"How to Install ElasticSearch on Ubuntu","slug":"how-to-install-elasticsearch-on-ubuntu","markdown":"https://www.digitalocean.com/community/tutorials/how-to-install-elasticsearch-on-an-ubuntu-vps\n\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/setup-service.html","html":"<p><a href='https://www.digitalocean.com/community/tutorials/how-to-install-elasticsearch-on-an-ubuntu-vps'>https://www.digitalocean.com/community/tutorials/how-to-install-elasticsearch-on-an-ubuntu-vps</a></p>\n\n<p><a href='https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-service.html'>https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-service.html</a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2015-11-01T02:05:04.000Z","created_by":1,"updated_at":"2015-11-01T02:05:46.000Z","updated_by":1,"published_at":null,"published_by":null},{"id":67,"uuid":"315e5739-99a5-41af-b5fd-f7a1ece4e038","title":"Reset MySQL Root Password on Ubuntu","slug":"reset-mysql-root-password-on-ubuntu","markdown":"**First please ensure that you really forgot the root password**.\n<pre class=\"brush:shell\">mysql -u root -p</pre>\n\nIf you really forgot the password then resetting the password is needed. Use ```dpkg-reconfigure``` to reconfigure the root user.\n\n####Check the MySQL version\nFirst  of all check the MySQL server version like this:\n\n<pre class=\"brush:shell\">apt-cache policy mysql-server</pre>\n\nthe above command gave me output like:\n\n<pre>Installed: 5.5.37-0ubuntu0.12.04.1</pre>\n\n####Start reconfiguring the MySQL\nStart using the following shell command:\n\n<pre class=\"brush:shell\">sudo dpkg-reconfigure mysql-server-*.*</pre>\n\nPlease, put your MySQL version name instead of mysql-server-*.* . For me I have used mysql-server-5.5 . It will stop the database and promt for reconfiguration.\n\n![dpkg-reconfigure](/content/images/2016/Feb/GHEyY.png)\n\nYou can now enter your new password for the root user and so on. After the reconfiguration is completed the MySQL server will be automatically started.\n\nNow you can login using your new password like this:\n\n<pre class=\"brush:shell\">mysql -u root -p</pre>\n\nThat's all for now. Thank you.","html":"<p><strong>First please ensure that you really forgot the root password</strong>.</p>\n\n<pre class=\"brush:shell\">mysql -u root -p</pre>\n\n<p>If you really forgot the password then resetting the password is needed. Use <code>dpkg-reconfigure</code> to reconfigure the root user.</p>\n\n<h4 id=\"checkthemysqlversion\">Check the MySQL version</h4>\n\n<p>First  of all check the MySQL server version like this:</p>\n\n<pre class=\"brush:shell\">apt-cache policy mysql-server</pre>\n\n<p>the above command gave me output like:</p>\n\n<pre>Installed: 5.5.37-0ubuntu0.12.04.1</pre>\n\n<h4 id=\"startreconfiguringthemysql\">Start reconfiguring the MySQL</h4>\n\n<p>Start using the following shell command:</p>\n\n<pre class=\"brush:shell\">sudo dpkg-reconfigure mysql-server-*.*</pre>\n\n<p>Please, put your MySQL version name instead of mysql-server-<em>.</em> . For me I have used mysql-server-5.5 . It will stop the database and promt for reconfiguration.</p>\n\n<p><img src=\"/content/images/2016/Feb/GHEyY.png\" alt=\"dpkg-reconfigure\" /></p>\n\n<p>You can now enter your new password for the root user and so on. After the reconfiguration is completed the MySQL server will be automatically started.</p>\n\n<p>Now you can login using your new password like this:</p>\n\n<pre class=\"brush:shell\">mysql -u root -p</pre>\n\n<p>That's all for now. Thank you.</p>","image":null,"featured":1,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2015-11-12T02:37:15.000Z","created_by":1,"updated_at":"2016-02-28T13:00:29.000Z","updated_by":1,"published_at":"2016-02-28T12:58:48.000Z","published_by":1},{"id":68,"uuid":"60ef58ed-11bf-478e-82fa-efa73f0127d0","title":"How to setup a Cron job in Ubuntu","slug":"how-to-setup-a-cron-job-in-ubuntu","markdown":"Most of my friends ask me how to setup a cron job in Ubuntu. They often face this situation when they have to setup a cron job for their application. I myself also work with the cron job feature according to my application's demand. Here is how to setup a cron job in Ubuntu in less than a minute.\n\n![Ubuntu](/content/images/2016/Feb/ubuntu-wallpaper-hq-wallpaper.jpg)\n\nYou can put a shell script in one of these folders: `/etc/cron.daily`, `/etc/cron.hourly`, `/etc/cron.monthly` or `/etc/cron.weekly`. This should run your script according to the folder name. Such as the scripts in cron.daily folder will be run on daily basis.\n\nIf these are not enough for you then you can define your own using the crontab.\n\n```\n$ crontab -e\n```\n\nThis will open personal crontab (cron configuration file) for you. Every lines are tasks that will be run according to the configuration written on that line. The lines are written in this format:\n\n```\nminute hour day-of-month month day-of-week command\n```\n\nFor every number you can define a list by separating the numbers using a comma (,) . You can also use intervals like */20 which will run every 20th. If we put */20 at the minutes field then it will be equivalent to 0,20,40.\n\nSuppose:\n\n```\n* 0 * * * path/to/command\n*/15 * * * * path/to/command2\n```\n\nThe first command will be run once a day when the time is 0 that means 12am. The second command will be run on every 15 minutes interval.\n\nThat's all guys, that's how to setup a cron job in Ubuntu. Thank you.","html":"<p>Most of my friends ask me how to setup a cron job in Ubuntu. They often face this situation when they have to setup a cron job for their application. I myself also work with the cron job feature according to my application's demand. Here is how to setup a cron job in Ubuntu in less than a minute.</p>\n\n<p><img src=\"/content/images/2016/Feb/ubuntu-wallpaper-hq-wallpaper.jpg\" alt=\"Ubuntu\" /></p>\n\n<p>You can put a shell script in one of these folders: <code>/etc/cron.daily</code>, <code>/etc/cron.hourly</code>, <code>/etc/cron.monthly</code> or <code>/etc/cron.weekly</code>. This should run your script according to the folder name. Such as the scripts in cron.daily folder will be run on daily basis.</p>\n\n<p>If these are not enough for you then you can define your own using the crontab.</p>\n\n<pre><code>$ crontab -e\n</code></pre>\n\n<p>This will open personal crontab (cron configuration file) for you. Every lines are tasks that will be run according to the configuration written on that line. The lines are written in this format:</p>\n\n<pre><code>minute hour day-of-month month day-of-week command  \n</code></pre>\n\n<p>For every number you can define a list by separating the numbers using a comma (,) . You can also use intervals like */20 which will run every 20th. If we put */20 at the minutes field then it will be equivalent to 0,20,40.</p>\n\n<p>Suppose:</p>\n\n<pre><code>* 0 * * * path/to/command\n*/15 * * * * path/to/command2\n</code></pre>\n\n<p>The first command will be run once a day when the time is 0 that means 12am. The second command will be run on every 15 minutes interval.</p>\n\n<p>That's all guys, that's how to setup a cron job in Ubuntu. Thank you.</p>","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2015-11-12T10:04:25.000Z","created_by":1,"updated_at":"2016-02-18T02:52:20.000Z","updated_by":1,"published_at":"2016-02-18T02:52:20.000Z","published_by":1},{"id":69,"uuid":"50044ab8-8e19-4a5e-b001-cad63cd8c46e","title":"Some Tricky PHP Questions Part 1","slug":"some-tricky-php-questions-part-1","markdown":"http://stackoverflow.com/questions/2118755/questions-every-good-php-developer-should-be-able-to-answer","html":"<p><a href='http://stackoverflow.com/questions/2118755/questions-every-good-php-developer-should-be-able-to-answer'>http://stackoverflow.com/questions/2118755/questions-every-good-php-developer-should-be-able-to-answer</a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2016-02-18T06:41:57.000Z","created_by":1,"updated_at":"2016-02-28T13:00:12.000Z","updated_by":1,"published_at":null,"published_by":null},{"id":70,"uuid":"54b85a43-a785-4149-adf3-284a6b681645","title":"Be a better  PHP Programmer","slug":"be-a-better-php-programmer","markdown":"http://www.webgeekly.com/tutorials/php/20-tips-you-need-to-learn-to-become-a-better-php-programmer/","html":"<p><a href='http://www.webgeekly.com/tutorials/php/20-tips-you-need-to-learn-to-become-a-better-php-programmer/'>http://www.webgeekly.com/tutorials/php/20-tips-you-need-to-learn-to-become-a-better-php-programmer/</a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2016-03-02T02:54:21.000Z","created_by":1,"updated_at":"2016-03-02T02:54:21.000Z","updated_by":1,"published_at":null,"published_by":null},{"id":71,"uuid":"7656f3c2-ca89-423f-b807-beace114db24","title":"Installing PHP 7 on Mac using Homebrew","slug":"installing-php-7-on-mac-using-homebrew","markdown":"https://blog.shameerc.com/2015/12/installing-php-7-on-mac-using-homebrew","html":"<p><a href='https://blog.shameerc.com/2015/12/installing-php-7-on-mac-using-homebrew'>https://blog.shameerc.com/2015/12/installing-php-7-on-mac-using-homebrew</a></p>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2016-03-02T08:20:38.000Z","created_by":1,"updated_at":"2016-03-02T08:21:07.000Z","updated_by":1,"published_at":null,"published_by":null},{"id":72,"uuid":"fbf8f438-a5ca-4dd7-acf1-fe50e7638e24","title":"Getting query values from PUT, DELETE, PATCH requests in Django","slug":"getting-query-values-from-put-delete-patch-requests-in-django","markdown":"I assume what you're asking is if you can have a method like this:\n\n<pre class=\"brush:python\">\ndef restaction(request, id):\n    if request.method == \"PUT\":\n        someparam = request.PUT[\"somekey\"]\n</pre>\n\nThe answer is no, you can't. Django doesn't construct such dictionaries for PUT, OPTIONS and DELETE requests, the reasoning being explained [here](https://groups.google.com/forum/#!msg/django-developers/dxI4qVzrBY4/m_9IiNk_p7UJ).\n\nTo summarise it for you, the concept of REST is that the data you exchange can be much more complicated than a simple map of keys to values. For example, PUTting an image, or using json. A framework can't know the many ways you might want to send data, so it does the obvious thing - let's you handle that bit. See also the answer to this question where the same response is given.\n\nNow, where do you find the data? Well, according to the docs, django 1.2 features request.raw_post_data. As a heads up, it looks like django 1.3 will support request.read() i.e. file-like semantics.\n\n<pre class=\"brush:python\">\nfrom django.http import QueryDict\nput = QueryDict(request.body)\ndescription = put.get('description')\n</pre>","html":"<p>I assume what you're asking is if you can have a method like this:</p>\n\n<pre class=\"brush:python\">  \ndef restaction(request, id):  \n    if request.method == \"PUT\":\n        someparam = request.PUT[\"somekey\"]\n</pre>\n\n<p>The answer is no, you can't. Django doesn't construct such dictionaries for PUT, OPTIONS and DELETE requests, the reasoning being explained <a href=\"https://groups.google.com/forum/#!msg/django-developers/dxI4qVzrBY4/m_9IiNk_p7UJ\">here</a>.</p>\n\n<p>To summarise it for you, the concept of REST is that the data you exchange can be much more complicated than a simple map of keys to values. For example, PUTting an image, or using json. A framework can't know the many ways you might want to send data, so it does the obvious thing - let's you handle that bit. See also the answer to this question where the same response is given.</p>\n\n<p>Now, where do you find the data? Well, according to the docs, django 1.2 features request.raw<em>post</em>data. As a heads up, it looks like django 1.3 will support request.read() i.e. file-like semantics.</p>\n\n<pre class=\"brush:python\">  \nfrom django.http import QueryDict  \nput = QueryDict(request.body)  \ndescription = put.get('description')  \n</pre>","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"2017-02-13T08:11:00.000Z","created_by":1,"updated_at":"2017-02-13T08:14:22.000Z","updated_by":1,"published_at":null,"published_by":null}],"posts_tags":[{"id":1,"post_id":1,"tag_id":1,"sort_order":0},{"id":2,"post_id":3,"tag_id":2,"sort_order":0},{"id":3,"post_id":3,"tag_id":3,"sort_order":0},{"id":4,"post_id":3,"tag_id":4,"sort_order":0},{"id":5,"post_id":3,"tag_id":5,"sort_order":0},{"id":6,"post_id":3,"tag_id":6,"sort_order":0},{"id":7,"post_id":4,"tag_id":7,"sort_order":0},{"id":8,"post_id":4,"tag_id":8,"sort_order":0},{"id":9,"post_id":4,"tag_id":9,"sort_order":0},{"id":10,"post_id":4,"tag_id":10,"sort_order":0},{"id":11,"post_id":4,"tag_id":11,"sort_order":0},{"id":12,"post_id":4,"tag_id":12,"sort_order":0},{"id":13,"post_id":4,"tag_id":13,"sort_order":0},{"id":14,"post_id":4,"tag_id":14,"sort_order":0},{"id":15,"post_id":4,"tag_id":15,"sort_order":0},{"id":16,"post_id":4,"tag_id":16,"sort_order":0},{"id":17,"post_id":4,"tag_id":17,"sort_order":0},{"id":18,"post_id":4,"tag_id":18,"sort_order":0},{"id":19,"post_id":4,"tag_id":19,"sort_order":0},{"id":20,"post_id":4,"tag_id":20,"sort_order":0},{"id":21,"post_id":5,"tag_id":2,"sort_order":0},{"id":22,"post_id":5,"tag_id":3,"sort_order":0},{"id":23,"post_id":5,"tag_id":4,"sort_order":0},{"id":24,"post_id":5,"tag_id":21,"sort_order":0},{"id":25,"post_id":5,"tag_id":22,"sort_order":0},{"id":26,"post_id":5,"tag_id":23,"sort_order":0},{"id":27,"post_id":5,"tag_id":24,"sort_order":0},{"id":28,"post_id":5,"tag_id":25,"sort_order":0},{"id":29,"post_id":5,"tag_id":26,"sort_order":0},{"id":30,"post_id":5,"tag_id":27,"sort_order":0},{"id":31,"post_id":5,"tag_id":28,"sort_order":0},{"id":32,"post_id":5,"tag_id":29,"sort_order":0},{"id":33,"post_id":6,"tag_id":49,"sort_order":0},{"id":34,"post_id":6,"tag_id":50,"sort_order":0},{"id":35,"post_id":6,"tag_id":51,"sort_order":0},{"id":36,"post_id":7,"tag_id":2,"sort_order":0},{"id":37,"post_id":7,"tag_id":3,"sort_order":0},{"id":38,"post_id":7,"tag_id":21,"sort_order":0},{"id":39,"post_id":8,"tag_id":30,"sort_order":0},{"id":40,"post_id":8,"tag_id":31,"sort_order":0},{"id":41,"post_id":8,"tag_id":32,"sort_order":0},{"id":42,"post_id":8,"tag_id":33,"sort_order":0},{"id":43,"post_id":8,"tag_id":34,"sort_order":0},{"id":44,"post_id":9,"tag_id":35,"sort_order":0},{"id":45,"post_id":9,"tag_id":36,"sort_order":0},{"id":46,"post_id":9,"tag_id":37,"sort_order":0},{"id":47,"post_id":9,"tag_id":38,"sort_order":0},{"id":48,"post_id":10,"tag_id":39,"sort_order":0},{"id":49,"post_id":10,"tag_id":40,"sort_order":0},{"id":50,"post_id":10,"tag_id":41,"sort_order":0},{"id":51,"post_id":10,"tag_id":42,"sort_order":0},{"id":52,"post_id":10,"tag_id":43,"sort_order":0},{"id":53,"post_id":10,"tag_id":44,"sort_order":0},{"id":54,"post_id":11,"tag_id":3,"sort_order":0},{"id":55,"post_id":11,"tag_id":16,"sort_order":0},{"id":56,"post_id":11,"tag_id":45,"sort_order":0},{"id":57,"post_id":11,"tag_id":46,"sort_order":0},{"id":58,"post_id":11,"tag_id":47,"sort_order":0},{"id":59,"post_id":11,"tag_id":48,"sort_order":0},{"id":60,"post_id":11,"tag_id":54,"sort_order":0},{"id":61,"post_id":11,"tag_id":56,"sort_order":0},{"id":62,"post_id":11,"tag_id":57,"sort_order":0},{"id":63,"post_id":11,"tag_id":58,"sort_order":0},{"id":64,"post_id":12,"tag_id":9,"sort_order":0},{"id":65,"post_id":12,"tag_id":52,"sort_order":0},{"id":66,"post_id":12,"tag_id":53,"sort_order":0},{"id":67,"post_id":12,"tag_id":54,"sort_order":0},{"id":68,"post_id":12,"tag_id":55,"sort_order":0},{"id":69,"post_id":29,"tag_id":8,"sort_order":0},{"id":70,"post_id":29,"tag_id":9,"sort_order":0},{"id":71,"post_id":29,"tag_id":10,"sort_order":0},{"id":72,"post_id":29,"tag_id":11,"sort_order":0},{"id":73,"post_id":29,"tag_id":59,"sort_order":0},{"id":74,"post_id":29,"tag_id":60,"sort_order":0},{"id":75,"post_id":29,"tag_id":61,"sort_order":0},{"id":76,"post_id":29,"tag_id":62,"sort_order":0},{"id":77,"post_id":32,"tag_id":63,"sort_order":0},{"id":78,"post_id":32,"tag_id":64,"sort_order":0},{"id":79,"post_id":32,"tag_id":65,"sort_order":0},{"id":80,"post_id":32,"tag_id":66,"sort_order":0},{"id":81,"post_id":32,"tag_id":67,"sort_order":0},{"id":82,"post_id":32,"tag_id":68,"sort_order":0},{"id":83,"post_id":32,"tag_id":69,"sort_order":0},{"id":84,"post_id":32,"tag_id":70,"sort_order":0},{"id":85,"post_id":32,"tag_id":71,"sort_order":0},{"id":86,"post_id":33,"tag_id":3,"sort_order":0},{"id":87,"post_id":33,"tag_id":4,"sort_order":0},{"id":88,"post_id":33,"tag_id":21,"sort_order":0},{"id":89,"post_id":33,"tag_id":22,"sort_order":0},{"id":90,"post_id":33,"tag_id":25,"sort_order":0},{"id":91,"post_id":33,"tag_id":68,"sort_order":0},{"id":92,"post_id":33,"tag_id":69,"sort_order":0},{"id":94,"post_id":35,"tag_id":68,"sort_order":0},{"id":95,"post_id":35,"tag_id":69,"sort_order":0},{"id":96,"post_id":35,"tag_id":72,"sort_order":0},{"id":97,"post_id":35,"tag_id":73,"sort_order":0},{"id":98,"post_id":35,"tag_id":74,"sort_order":0},{"id":99,"post_id":35,"tag_id":75,"sort_order":0},{"id":100,"post_id":35,"tag_id":76,"sort_order":0},{"id":101,"post_id":28,"tag_id":68,"sort_order":0},{"id":102,"post_id":28,"tag_id":69,"sort_order":0},{"id":103,"post_id":28,"tag_id":74,"sort_order":0},{"id":104,"post_id":28,"tag_id":77,"sort_order":0},{"id":105,"post_id":37,"tag_id":68,"sort_order":0},{"id":106,"post_id":37,"tag_id":69,"sort_order":0},{"id":107,"post_id":37,"tag_id":74,"sort_order":0},{"id":108,"post_id":39,"tag_id":69,"sort_order":0},{"id":109,"post_id":39,"tag_id":78,"sort_order":0},{"id":110,"post_id":39,"tag_id":79,"sort_order":0},{"id":111,"post_id":40,"tag_id":72,"sort_order":0},{"id":112,"post_id":40,"tag_id":73,"sort_order":0},{"id":113,"post_id":38,"tag_id":68,"sort_order":0},{"id":114,"post_id":38,"tag_id":69,"sort_order":0},{"id":115,"post_id":38,"tag_id":74,"sort_order":0},{"id":116,"post_id":30,"tag_id":68,"sort_order":0},{"id":117,"post_id":30,"tag_id":74,"sort_order":0},{"id":118,"post_id":30,"tag_id":69,"sort_order":0},{"id":119,"post_id":45,"tag_id":80,"sort_order":0},{"id":120,"post_id":44,"tag_id":68,"sort_order":0},{"id":121,"post_id":44,"tag_id":69,"sort_order":0},{"id":122,"post_id":44,"tag_id":74,"sort_order":0},{"id":123,"post_id":44,"tag_id":80,"sort_order":0},{"id":124,"post_id":44,"tag_id":81,"sort_order":0},{"id":125,"post_id":46,"tag_id":76,"sort_order":0},{"id":126,"post_id":46,"tag_id":82,"sort_order":0},{"id":127,"post_id":47,"tag_id":3,"sort_order":0},{"id":128,"post_id":47,"tag_id":81,"sort_order":0},{"id":129,"post_id":48,"tag_id":3,"sort_order":0},{"id":130,"post_id":48,"tag_id":83,"sort_order":0},{"id":131,"post_id":50,"tag_id":3,"sort_order":0},{"id":132,"post_id":50,"tag_id":6,"sort_order":0},{"id":133,"post_id":50,"tag_id":84,"sort_order":0},{"id":134,"post_id":51,"tag_id":81,"sort_order":0},{"id":135,"post_id":14,"tag_id":26,"sort_order":0},{"id":136,"post_id":14,"tag_id":81,"sort_order":0},{"id":137,"post_id":52,"tag_id":3,"sort_order":0},{"id":138,"post_id":52,"tag_id":21,"sort_order":0},{"id":139,"post_id":52,"tag_id":84,"sort_order":0},{"id":140,"post_id":55,"tag_id":72,"sort_order":0},{"id":141,"post_id":55,"tag_id":73,"sort_order":0},{"id":142,"post_id":55,"tag_id":81,"sort_order":0},{"id":143,"post_id":55,"tag_id":84,"sort_order":0},{"id":144,"post_id":53,"tag_id":26,"sort_order":0},{"id":145,"post_id":53,"tag_id":85,"sort_order":0},{"id":146,"post_id":53,"tag_id":86,"sort_order":0},{"id":147,"post_id":54,"tag_id":3,"sort_order":0},{"id":148,"post_id":54,"tag_id":86,"sort_order":0},{"id":149,"post_id":43,"tag_id":46,"sort_order":0},{"id":150,"post_id":43,"tag_id":68,"sort_order":0},{"id":151,"post_id":43,"tag_id":74,"sort_order":0},{"id":152,"post_id":43,"tag_id":67,"sort_order":0},{"id":153,"post_id":56,"tag_id":26,"sort_order":0},{"id":154,"post_id":56,"tag_id":86,"sort_order":0},{"id":155,"post_id":58,"tag_id":86,"sort_order":0},{"id":156,"post_id":59,"tag_id":86,"sort_order":0},{"id":157,"post_id":59,"tag_id":2,"sort_order":0},{"id":158,"post_id":59,"tag_id":81,"sort_order":0},{"id":159,"post_id":59,"tag_id":83,"sort_order":0},{"id":160,"post_id":61,"tag_id":9,"sort_order":0},{"id":161,"post_id":61,"tag_id":11,"sort_order":0},{"id":162,"post_id":61,"tag_id":54,"sort_order":0},{"id":163,"post_id":61,"tag_id":16,"sort_order":0},{"id":164,"post_id":61,"tag_id":12,"sort_order":0},{"id":165,"post_id":67,"tag_id":83,"sort_order":0},{"id":166,"post_id":67,"tag_id":86,"sort_order":0},{"id":167,"post_id":68,"tag_id":86,"sort_order":0},{"id":168,"post_id":70,"tag_id":81,"sort_order":0},{"id":169,"post_id":71,"tag_id":3,"sort_order":0},{"id":170,"post_id":71,"tag_id":81,"sort_order":0},{"id":171,"post_id":71,"tag_id":84,"sort_order":0}],"roles":[{"id":1,"uuid":"ce3c4798-70bd-4166-bd15-05b7ada8ce34","name":"Administrator","description":"Administrators","created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":2,"uuid":"0aafdcfd-2666-4094-b904-10ba0085147c","name":"Editor","description":"Editors","created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":3,"uuid":"961704d1-8c17-4ada-89a2-174cf9d265eb","name":"Author","description":"Authors","created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":4,"uuid":"a2d74530-7508-45d8-9215-c4cd81c752a0","name":"Owner","description":"Blog Owner","created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1}],"roles_users":[{"id":1,"role_id":4,"user_id":1}],"settings":[{"id":1,"uuid":"ab1e2f01-8621-438e-b7f9-0656ecdcfabe","key":"databaseVersion","value":"004","type":"core","created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":2,"uuid":"85695603-1270-4cd5-8237-84b12493aeb2","key":"dbHash","value":"0a2d9c84-21b8-4210-a577-4c780b5694de","type":"core","created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:53.000Z","updated_by":1},{"id":3,"uuid":"0081bc83-01bc-4d78-b9ec-98752eecdf50","key":"nextUpdateCheck","value":"1487059812","type":"core","created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2017-02-13T08:10:11.000Z","updated_by":1},{"id":4,"uuid":"7160009a-5fdb-4a3e-b8c4-918fddecbaf8","key":"displayUpdateNotification","value":"0.11.4","type":"core","created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2017-02-13T08:10:11.000Z","updated_by":1},{"id":5,"uuid":"5f819abf-4619-4a2c-bcbe-740b1def0e48","key":"title","value":"Mazhar's Blog","type":"blog","created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-26T05:16:40.000Z","updated_by":1},{"id":6,"uuid":"580e5f1c-fae8-4456-b0e2-74e9c2334c7c","key":"description","value":"Anything, that matters","type":"blog","created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-26T05:16:40.000Z","updated_by":1},{"id":7,"uuid":"61d2afec-4a23-4e64-9287-9d2659553484","key":"logo","value":"","type":"blog","created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-26T05:16:40.000Z","updated_by":1},{"id":8,"uuid":"ea9567a3-5315-43b4-9c43-c02738cf7d5e","key":"cover","value":"","type":"blog","created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-26T05:16:40.000Z","updated_by":1},{"id":9,"uuid":"1be44f6d-f773-492e-a1dc-db22e8b1704c","key":"defaultLang","value":"en_US","type":"blog","created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-26T05:16:40.000Z","updated_by":1},{"id":10,"uuid":"8dec79ac-fcf1-47cb-bdd9-3608abe8fb8a","key":"postsPerPage","value":"5","type":"blog","created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-26T05:16:40.000Z","updated_by":1},{"id":11,"uuid":"f280a8d0-232d-45ab-98fc-505b686329a7","key":"ghost_head","value":"","type":"blog","created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-26T05:16:40.000Z","updated_by":1},{"id":12,"uuid":"c22fb48a-dab6-4f05-9bba-0b6944feea77","key":"ghost_foot","value":"","type":"blog","created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-26T05:16:40.000Z","updated_by":1},{"id":13,"uuid":"d29841f2-6211-4138-b24f-3c1c9f11ee30","key":"forceI18n","value":"true","type":"blog","created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-26T05:16:40.000Z","updated_by":1},{"id":14,"uuid":"c9b2c5cf-b09a-4ee5-b072-a5dbb23b83a6","key":"permalinks","value":"/:slug/","type":"blog","created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-26T05:16:40.000Z","updated_by":1},{"id":15,"uuid":"cfea8480-0662-4807-aa18-ecf87a17d3e3","key":"labs","value":"{}","type":"blog","created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-26T05:16:40.000Z","updated_by":1},{"id":16,"uuid":"006dedc2-4ca7-4cce-837f-5d2f262dfffc","key":"installedApps","value":"[]","type":"app","created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2017-01-13T18:02:09.000Z","updated_by":1},{"id":17,"uuid":"8701e250-6af9-480e-a559-fbed2a9925a2","key":"activeApps","value":"[]","type":"app","created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":18,"uuid":"4c578863-b947-46f1-a06c-066f7b9dd8b2","key":"navigation","value":"[{\"label\":\"Home\",\"url\":\"http://www.mazharahmed.me/\"},{\"label\":\"Facebook\",\"url\":\"https://www.facebook.com/webAppDaddy\"},{\"label\":\"Twitter\",\"url\":\"https://twitter.com/mighty_maze\"},{\"label\":\"LinkedIn\",\"url\":\"https://www.linkedin.com/in/mightymaze\"}]","type":"blog","created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-26T05:16:40.000Z","updated_by":1},{"id":19,"uuid":"34c55207-be72-490f-923b-bf7f01b70419","key":"password","value":"","type":"private","created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-26T05:16:40.000Z","updated_by":1},{"id":20,"uuid":"8dc829d7-9bd7-49a7-b58f-657f8e0ed6dd","key":"isPrivate","value":"false","type":"private","created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-26T05:16:40.000Z","updated_by":1},{"id":21,"uuid":"71840dbc-1497-4e82-8426-f741c3483358","key":"activeTheme","value":"casper","type":"theme","created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-26T05:16:40.000Z","updated_by":1}],"tags":[{"id":1,"uuid":"2d5ff738-fdbc-4ef5-aa11-130f21017cfe","name":"Getting Started","slug":"getting-started","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2016-04-25T07:54:52.000Z","updated_by":1},{"id":2,"uuid":"acaa18ef-e6e6-4cbb-a36e-2defea9ec672","name":"nginx","slug":"nginx","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":3,"uuid":"7ea3bffc-59a1-461f-b209-a3576b39da58","name":"mac","slug":"mac","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":4,"uuid":"e431186a-e4ab-4f6f-a130-20709cbc3093","name":"install","slug":"install","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":5,"uuid":"1303aee3-d6d3-49a6-8ed4-d97dc65b4a5e","name":"brew","slug":"brew","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":6,"uuid":"4e4cb20e-be2e-4f6c-9e9a-cb6ddcc9b037","name":"homebrew","slug":"homebrew","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":7,"uuid":"a9eed538-987b-4cc9-8ec0-ddd79ef4860d","name":"boilerplate","slug":"boilerplate","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":8,"uuid":"f2947006-bdbf-4c89-847c-9650e22f6f61","name":"html5","slug":"html5","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":9,"uuid":"70413dde-e4d1-4831-b5fc-a6e0c9745613","name":"css3","slug":"css3","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":10,"uuid":"28c4134f-e485-4e3c-81a1-867cd5ad2062","name":"html","slug":"html","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":11,"uuid":"4dda7f12-b8c0-4945-828c-da4f3dfc60b6","name":"css","slug":"css","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":12,"uuid":"9aaadc5d-f372-401c-8e36-8daeb3ebc3ce","name":"bootstrap","slug":"bootstrap","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":13,"uuid":"d09ab86a-7bfc-4c05-8017-63f0d06b51ce","name":"font","slug":"font","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":14,"uuid":"bc92b72c-6ee3-4188-8808-66e342584e27","name":"fontawesome","slug":"fontawesome","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":15,"uuid":"b35e393d-00e1-441d-80ac-14c34437a886","name":"awesome","slug":"awesome","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":16,"uuid":"af9d780c-af42-4e9b-98a4-c119652bb2d5","name":"less","slug":"less","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":17,"uuid":"df34a84f-6882-4e30-be4f-35ff8e732827","name":"smooth","slug":"smooth","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":18,"uuid":"3e2ed744-5efc-4277-b535-9f5fe7e24c36","name":"reset","slug":"reset","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":19,"uuid":"4a0f5987-ba58-4855-96e3-04eefaa77956","name":"animation","slug":"animation","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":20,"uuid":"52848f06-e1b3-4ab5-b0de-3c21caa3d666","name":"selection","slug":"selection","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":21,"uuid":"98729514-55d7-4208-be69-88a3dde4454b","name":"mavericks","slug":"mavericks","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":22,"uuid":"e97a1cbc-b777-4089-a0b8-8b96c31bba8e","name":"lion","slug":"lion","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":23,"uuid":"ad2c4c89-2f43-4501-8507-a8ed8308c8cc","name":"mountain","slug":"mountain","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":24,"uuid":"89d194ee-b217-4768-a636-108c5e42b45b","name":"snow","slug":"snow","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":25,"uuid":"9e6b861f-fccb-4d51-a4fb-0fb4b0301e33","name":"leopard","slug":"leopard","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":26,"uuid":"b3e7efef-2da0-4a8b-85e3-df2023d13bef","name":"shell","slug":"shell","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":27,"uuid":"2890853b-99ba-46ba-bde8-fecddbbf3c09","name":"command","slug":"command","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":28,"uuid":"6064d301-9b6c-4e86-a49f-4dc39ba099d3","name":"sh","slug":"sh","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":29,"uuid":"d355f6a9-6dd5-4195-b306-0b86f685e5c4","name":"kelvin","slug":"kelvin","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":30,"uuid":"113b5a67-3b92-4624-aea4-dd0cc08f9e3f","name":"openssl","slug":"openssl","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":31,"uuid":"e88af75e-aca9-4164-a089-1c3bd66ac8c2","name":"security","slug":"security","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":32,"uuid":"8604ef0d-62f7-47bf-99ca-251b8dea99b4","name":"bug","slug":"bug","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":33,"uuid":"903916d2-baa1-4a26-917f-2b31fccae9d0","name":"vulnerability","slug":"vulnerability","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":34,"uuid":"c4eca26f-efe3-40d9-9173-533fbc1ec452","name":"fix","slug":"fix","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":35,"uuid":"5c2ce85f-4967-46ff-b1cb-0ac3110c57a0","name":"wiredtree","slug":"wiredtree","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":36,"uuid":"50fbb618-820e-4399-91dc-59753ac9129e","name":"server","slug":"server","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":37,"uuid":"f75019ca-d5d6-4f8c-b171-0d8708015f18","name":"hosting","slug":"hosting","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":38,"uuid":"5da20639-f016-4ac2-b87d-168c881e4847","name":"dedicated","slug":"dedicated","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":39,"uuid":"4f1cacb2-56ea-41af-9516-969d287b44ba","name":"ios","slug":"ios","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":40,"uuid":"8c6fa10f-83ed-4100-98f6-a0e72c2575fb","name":"dependancy","slug":"dependancy","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":41,"uuid":"ad965591-e4d3-46f7-9e04-1e696cf8b539","name":"manager","slug":"manager","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":42,"uuid":"e6638475-859e-4846-9646-961d39e36a8c","name":"cocoapods","slug":"cocoapods","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":43,"uuid":"fba28530-afdf-4c6d-87fc-bc67509c34f5","name":"pods","slug":"pods","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":44,"uuid":"aa5163ef-abe8-42e8-bc81-ca4d1470b6ae","name":"pod","slug":"pod","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":45,"uuid":"7b56d669-2a4f-4612-ae86-bb03b1b22762","name":"app","slug":"app","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":46,"uuid":"5ca86f58-6fb7-4f31-b593-ac33ecc8b6ab","name":"code","slug":"code","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":47,"uuid":"cd3fc76e-2315-4f8e-a58a-06d29b157cd8","name":"kit","slug":"kit","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":48,"uuid":"46f23160-f68a-4806-9ca6-f5644976c55e","name":"tools","slug":"tools","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":49,"uuid":"9f37e8c5-4efe-4c29-ae3a-2f360db9d7dc","name":"genesis","slug":"genesis","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":50,"uuid":"a2f33f5e-73f0-43f5-a33d-1fa477da4d5f","name":"thesis","slug":"thesis","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":51,"uuid":"79d68914-93ba-415b-a073-4eebacbae3dd","name":"wordpress","slug":"wordpress","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":52,"uuid":"78da5bb7-34d8-408a-b188-1b75289b97d8","name":"bourbon","slug":"bourbon","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":53,"uuid":"a418cf54-9733-4d2d-b1eb-b93f33a97dc9","name":"neat","slug":"neat","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":54,"uuid":"9c693135-ebb9-4986-b846-9c778533e722","name":"sass","slug":"sass","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":55,"uuid":"ca3af630-593d-45bf-9f9a-4176cff78029","name":"scss","slug":"scss","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":56,"uuid":"92fb1032-df79-45b3-87c2-762397a892f6","name":"stylus","slug":"stylus","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":57,"uuid":"3e502e9c-e66c-45aa-b9d4-d6c86f40db18","name":"coffeescript","slug":"coffeescript","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":58,"uuid":"d1603a14-8231-4d9a-b64c-d74d4aa4d3cb","name":"typescript","slug":"typescript","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":59,"uuid":"dae4e98f-4b1e-45e1-b420-48223ce39461","name":"background","slug":"background","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":60,"uuid":"c6cd77c2-1697-4911-8b4f-09278dd89f6d","name":"blend","slug":"blend","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":61,"uuid":"9fb163f1-74a8-463a-86c8-69fe662a0059","name":"mode","slug":"mode","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":62,"uuid":"8a1daf85-9fd6-4eef-b963-67d02c2827fc","name":"photoshop","slug":"photoshop","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":63,"uuid":"f2b14a2c-2119-455d-afb9-e9d922c0f0d4","name":"developer","slug":"developer","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":64,"uuid":"703f880d-ecbd-425a-ab97-639695c5319b","name":"programmer","slug":"programmer","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":65,"uuid":"222fc08f-2ba4-40c1-adb2-b1e54b664f27","name":"git","slug":"git","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":66,"uuid":"d8b67918-a550-4bdd-b790-f3e59a78ef67","name":"agile","slug":"agile","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":67,"uuid":"a04e4c7f-2ede-4080-83e9-ee90bc00355c","name":"project","slug":"project","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":68,"uuid":"2155d1b0-c6ad-4ed1-a92c-09d26fa8d280","name":"javascript","slug":"javascript","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":69,"uuid":"bb738180-e039-4823-a521-3da18065a7cc","name":"node","slug":"node","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":70,"uuid":"e3830c9f-7936-4374-8225-b3ad8da99ed8","name":"task","slug":"task","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":71,"uuid":"18708137-702e-496b-ba8e-1e7546bdabad","name":"search","slug":"search","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-06-18T12:29:45.000Z","created_by":1,"updated_at":"2014-06-18T12:29:45.000Z","updated_by":1},{"id":72,"uuid":"b2045580-ff6d-44f4-adeb-ace0671ae574","name":"mongo","slug":"mongo","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-07-01T17:14:33.000Z","created_by":1,"updated_at":"2014-07-01T17:14:33.000Z","updated_by":1},{"id":73,"uuid":"483e8f33-2054-4f32-8939-ac17266ee524","name":"mongodb","slug":"mongodb","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-07-01T17:14:33.000Z","created_by":1,"updated_at":"2014-07-01T17:14:33.000Z","updated_by":1},{"id":74,"uuid":"04c09330-aa56-43c9-bd9f-b33f51a47bfb","name":"js","slug":"js","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-07-01T17:14:33.000Z","created_by":1,"updated_at":"2014-07-01T17:14:33.000Z","updated_by":1},{"id":75,"uuid":"6186ed44-b5e8-4c40-b2c6-57b376e886fb","name":"query","slug":"query","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-07-01T17:14:33.000Z","created_by":1,"updated_at":"2014-07-01T17:14:33.000Z","updated_by":1},{"id":76,"uuid":"29b45368-1fc4-4076-8e67-3d0bd8c1b901","name":"db","slug":"db","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-07-01T17:14:33.000Z","created_by":1,"updated_at":"2014-07-01T17:14:33.000Z","updated_by":1},{"id":77,"uuid":"d7ece784-f6a5-4938-84f8-b605c967961c","name":"grunt","slug":"grunt","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-07-07T04:28:08.000Z","created_by":1,"updated_at":"2014-07-07T04:28:08.000Z","updated_by":1},{"id":78,"uuid":"9c530714-f3ed-48e6-83ad-c8ec42367398","name":"apache","slug":"apache","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-07-24T01:16:09.000Z","created_by":1,"updated_at":"2014-07-24T01:16:09.000Z","updated_by":1},{"id":79,"uuid":"4108555f-e46b-438d-81c8-6ef068e0acf9","name":"vps","slug":"vps","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-07-24T01:16:09.000Z","created_by":1,"updated_at":"2014-07-24T01:16:09.000Z","updated_by":1},{"id":80,"uuid":"4124dfb4-1b98-44b6-abe6-697b124d2e07","name":"python","slug":"python","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-09-11T09:21:42.000Z","created_by":1,"updated_at":"2014-09-11T09:21:42.000Z","updated_by":1},{"id":81,"uuid":"7482af8a-faf6-4c14-978e-c74e772eb478","name":"php","slug":"php","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-09-11T11:19:38.000Z","created_by":1,"updated_at":"2014-09-11T11:19:38.000Z","updated_by":1},{"id":82,"uuid":"19a84e2c-30fb-4be2-97da-e685910487f6","name":"postgresql","slug":"postgresql","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-09-15T02:28:51.000Z","created_by":1,"updated_at":"2014-09-15T02:28:51.000Z","updated_by":1},{"id":83,"uuid":"4c58b700-9435-494f-a140-90ff91599a65","name":"mysql","slug":"mysql","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-09-28T07:08:45.000Z","created_by":1,"updated_at":"2014-09-28T07:08:45.000Z","updated_by":1},{"id":84,"uuid":"8f0cb028-4102-488f-ac50-d198fa78acd6","name":"yosemite","slug":"yosemite","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2014-10-25T09:14:00.000Z","created_by":1,"updated_at":"2014-10-25T09:14:00.000Z","updated_by":1},{"id":85,"uuid":"717e547b-12a7-4411-a19b-8d98e9c54e40","name":"unix","slug":"unix","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2015-02-09T10:06:36.000Z","created_by":1,"updated_at":"2015-02-09T10:06:36.000Z","updated_by":1},{"id":86,"uuid":"d90b004d-962e-403e-b406-b1db9737b3d7","name":"linux","slug":"linux","description":null,"image":null,"hidden":0,"parent_id":null,"meta_title":null,"meta_description":null,"created_at":"2015-02-09T10:06:40.000Z","created_by":1,"updated_at":"2015-02-09T10:06:40.000Z","updated_by":1}],"users":[{"id":1,"uuid":"b7f20da8-c150-4f39-9338-49958da55fad","name":"Mazhar Ahmed","slug":"mazhar","password":"$2a$10$hTPC36ZtK/JuWPMz2T4SNObk398Fx0m1/eBUcPWUQoEfk9i5Yw9Nu","email":"info@mazharahmed.me","image":"/content/images/2016/04/photo-new.jpg","cover":null,"bio":"ZCE, Full Stack LAMP & MEAN developer, Pythoneer, Designer, Brander, UI/UX Architect, Painter, Calligrapher, Photographer.","website":"http://www.iAmMaze.com","location":"Dhaka, Bangladesh","accessibility":null,"status":"active","language":"en_US","meta_title":null,"meta_description":null,"tour":null,"last_login":"2017-02-13T08:10:22.000Z","created_at":"2016-04-25T07:54:52.000Z","created_by":1,"updated_at":"2017-02-13T08:10:22.000Z","updated_by":1}]}}]}