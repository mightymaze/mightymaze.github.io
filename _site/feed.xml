<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mazhar's Blog</title>
    <description>Entrepreneur, Product Enthusiast, Tech Expert, Designer, Brander
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 11 Jan 2019 05:18:59 +0600</pubDate>
    <lastBuildDate>Fri, 11 Jan 2019 05:18:59 +0600</lastBuildDate>
    <generator>Jekyll v3.4.3</generator>
    
      <item>
        <title>How to call a C function in Golang</title>
        <description>&lt;p&gt;I’m writting this article after a very long time. This happens due to the work pressure in my daily life. There is not enough free time to write any article, even customize my own sites / portfolios.&lt;/p&gt;

&lt;p&gt;Okay, today I will be showing you guys how to call native C (you can call C++ methods too) functions using Golang. To accomplish this, I would think that you guys have this things installed on your system:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;go&lt;/li&gt;
  &lt;li&gt;gcc&lt;/li&gt;
  &lt;li&gt;pkg-config&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s create a project in your &lt;code class=&quot;highlighter-rouge&quot;&gt;$GOPATH/src&lt;/code&gt;. I have created my project in &lt;code class=&quot;highlighter-rouge&quot;&gt;$GOPATH/src/github.com/mazhar266/goc&lt;/code&gt;. There I’ve added a file named &lt;code class=&quot;highlighter-rouge&quot;&gt;square.c&lt;/code&gt; with the following function:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;square&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now we will call this function from our &lt;strong&gt;go&lt;/strong&gt; program. Let’s create a blank &lt;code class=&quot;highlighter-rouge&quot;&gt;main.go&lt;/code&gt; file. Let’s just start writting the basic structure like:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now include the &lt;code class=&quot;highlighter-rouge&quot;&gt;C&lt;/code&gt; package and include our &lt;code class=&quot;highlighter-rouge&quot;&gt;square.c&lt;/code&gt; file which contains our &lt;strong&gt;square&lt;/strong&gt; function. Add this line after package declaration:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;//#include&amp;lt;square.c&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;C&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This first line imports our &lt;strong&gt;C&lt;/strong&gt; program (the &lt;code class=&quot;highlighter-rouge&quot;&gt;square.c&lt;/code&gt; file, you will understand if you are a C programmer). The second line imports the basic functionality in &lt;strong&gt;Go&lt;/strong&gt; to talk with &lt;strong&gt;C&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Now make a method / function which will call the &lt;strong&gt;C&lt;/strong&gt; function and return the result. This is for making the main method clean.&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;makeSquare&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//Convert Go ints to C ints&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aC&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;square&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;//Convert C.int result to Go int&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You can easily understand what this method does. It converts integer argument &lt;strong&gt;a&lt;/strong&gt; for &lt;strong&gt;Go&lt;/strong&gt; to integer argument for &lt;strong&gt;C&lt;/strong&gt;. And also converts the returned result from &lt;strong&gt;C&lt;/strong&gt; integer to &lt;strong&gt;Go&lt;/strong&gt; integer.&lt;/p&gt;

&lt;p&gt;So, we can call the function from the main function like:&lt;/p&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;makeSquare&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now if we run &lt;code class=&quot;highlighter-rouge&quot;&gt;go run main.go&lt;/code&gt; we will see the output &lt;code class=&quot;highlighter-rouge&quot;&gt;81&lt;/code&gt; in the console.&lt;/p&gt;

&lt;p&gt;That’s the basic of calling a &lt;strong&gt;C&lt;/strong&gt; function from &lt;strong&gt;Golang&lt;/strong&gt;. For dealing with complex &lt;strong&gt;C&lt;/strong&gt; programs which uses thirdparty libraries, your have to maintain &lt;strong&gt;CFLAGS&lt;/strong&gt; and &lt;strong&gt;LDFLAGS&lt;/strong&gt; from your go application. We will see that in another article.&lt;/p&gt;

&lt;p&gt;You can find the sample source code here &lt;a href=&quot;https://github.com/mazhar266/goc&quot;&gt;https://github.com/mazhar266/goc&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 26 Dec 2018 00:00:00 +0600</pubDate>
        <link>http://localhost:4000/how-to-call-a-c-function-in-golang</link>
        <guid isPermaLink="true">http://localhost:4000/how-to-call-a-c-function-in-golang</guid>
        
        <category>go</category>
        
        <category>c</category>
        
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Thu, 09 Feb 2017 13:35:52 +0600</pubDate>
        <link>http://localhost:4000/welcome-to-jekyll</link>
        <guid isPermaLink="true">http://localhost:4000/welcome-to-jekyll</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Reset MySQL Root Password on Ubuntu</title>
        <description>&lt;p&gt;&lt;strong&gt;First please ensure that you really forgot the root password&lt;/strong&gt;.&lt;/p&gt;
&lt;pre class=&quot;brush:shell&quot;&gt;mysql -u root -p&lt;/pre&gt;

&lt;p&gt;If you really forgot the password then resetting the password is needed. Use &lt;code class=&quot;highlighter-rouge&quot;&gt;dpkg-reconfigure&lt;/code&gt; to reconfigure the root user.&lt;/p&gt;

&lt;p&gt;####Check the MySQL version
First  of all check the MySQL server version like this:&lt;/p&gt;

&lt;pre class=&quot;brush:shell&quot;&gt;apt-cache policy mysql-server&lt;/pre&gt;

&lt;p&gt;the above command gave me output like:&lt;/p&gt;

&lt;pre&gt;Installed: 5.5.37-0ubuntu0.12.04.1&lt;/pre&gt;

&lt;p&gt;####Start reconfiguring the MySQL
Start using the following shell command:&lt;/p&gt;

&lt;pre class=&quot;brush:shell&quot;&gt;sudo dpkg-reconfigure mysql-server-*.*&lt;/pre&gt;

&lt;p&gt;Please, put your MySQL version name instead of mysql-server-&lt;em&gt;.&lt;/em&gt; . For me I have used mysql-server-5.5 . It will stop the database and promt for reconfiguration.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/2016/Feb/GHEyY.png&quot; alt=&quot;dpkg-reconfigure&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can now enter your new password for the root user and so on. After the reconfiguration is completed the MySQL server will be automatically started.&lt;/p&gt;

&lt;p&gt;Now you can login using your new password like this:&lt;/p&gt;

&lt;pre class=&quot;brush:shell&quot;&gt;mysql -u root -p&lt;/pre&gt;

&lt;p&gt;That’s all for now. Thank you.&lt;/p&gt;
</description>
        <pubDate>Sun, 28 Feb 2016 12:58:48 +0600</pubDate>
        <link>http://localhost:4000/reset-mysql-root-password-on-ubuntu</link>
        <guid isPermaLink="true">http://localhost:4000/reset-mysql-root-password-on-ubuntu</guid>
        
        <category>mysql</category>
        
        <category>linux</category>
        
        
      </item>
    
      <item>
        <title>How to setup a Cron job in Ubuntu</title>
        <description>&lt;p&gt;Most of my friends ask me how to setup a cron job in Ubuntu. They often face this situation when they have to setup a cron job for their application. I myself also work with the cron job feature according to my application’s demand. Here is how to setup a cron job in Ubuntu in less than a minute.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/2016/Feb/ubuntu-wallpaper-hq-wallpaper.jpg&quot; alt=&quot;Ubuntu&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can put a shell script in one of these folders: &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/cron.daily&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/cron.hourly&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/cron.monthly&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/cron.weekly&lt;/code&gt;. This should run your script according to the folder name. Such as the scripts in cron.daily folder will be run on daily basis.&lt;/p&gt;

&lt;p&gt;If these are not enough for you then you can define your own using the crontab.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ crontab -e
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This will open personal crontab (cron configuration file) for you. Every lines are tasks that will be run according to the configuration written on that line. The lines are written in this format:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;minute hour day-of-month month day-of-week command
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;For every number you can define a list by separating the numbers using a comma (,) . You can also use intervals like */20 which will run every 20th. If we put */20 at the minutes field then it will be equivalent to 0,20,40.&lt;/p&gt;

&lt;p&gt;Suppose:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* 0 * * * path/to/command
*/15 * * * * path/to/command2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The first command will be run once a day when the time is 0 that means 12am. The second command will be run on every 15 minutes interval.&lt;/p&gt;

&lt;p&gt;That’s all guys, that’s how to setup a cron job in Ubuntu. Thank you.&lt;/p&gt;
</description>
        <pubDate>Thu, 18 Feb 2016 02:52:20 +0600</pubDate>
        <link>http://localhost:4000/how-to-setup-a-cron-job-in-ubuntu</link>
        <guid isPermaLink="true">http://localhost:4000/how-to-setup-a-cron-job-in-ubuntu</guid>
        
        <category>linux</category>
        
        
      </item>
    
      <item>
        <title>Change the Bootstrap NavBar Breakpoint</title>
        <description>&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/2015/Oct/Components-B7-Bootstrap.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I use mostly Bootstrap framework for my every projects. Although I like the Foundation framework. If the provided design does not seem proper for any of these framework I used to hard code the rest of the work. I often face a situation like designer wants a different breakpoint to trigger the mobile menu. Suppose a designer wants the mobile menu from the “md” size. This is quite easy in bootstrap. There are two ways of doing this. One is to modify the less source file and recompile it. The second one is directly write CSS codes.&lt;/p&gt;

&lt;p&gt;###Modifying the LESS file
Change the &lt;code class=&quot;highlighter-rouge&quot;&gt;@navbarCollapseWidth&lt;/code&gt; variable in &lt;code class=&quot;highlighter-rouge&quot;&gt;less/variables.less&lt;/code&gt; file to your desired value. Then recompile the less file to produce the updated CSS file.&lt;/p&gt;

&lt;p&gt;###Modifying the CSS file
This is quite easy and I thing most of the people will use this method. Just Place this section in your stylesheet to overwrite the default behaviour.&lt;/p&gt;

&lt;pre class=&quot;brush:css;&quot;&gt;
/* showing the mobile menu */
@media (max-width: 1070px) {
    .navbar-header {
        float: none;
    }
    .navbar-toggle {
        display: block;
    }
    .navbar-collapse {
        border-top: 1px solid transparent;
        box-shadow: inset 0 1px 0 rgba(255,255,255,0.1);
    }
    .navbar-collapse.collapse {
        display: none!important;
    }
    .navbar-nav {
        float: none!important;
        margin: 7.5px -15px;
    }
    .navbar-nav&amp;gt;li {
        float: none;
    }
    .navbar-nav&amp;gt;li&amp;gt;a {
        padding-top: 10px;
        padding-bottom: 10px;
    }
}
&lt;/pre&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Note: Replace 1070px to your desired value.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;That’s it, that’s how to change the default Bootstrap NavBar breakpoint.&lt;/p&gt;
</description>
        <pubDate>Thu, 29 Oct 2015 02:36:05 +0600</pubDate>
        <link>http://localhost:4000/change-the-bootstrap-navbar-breakpoint</link>
        <guid isPermaLink="true">http://localhost:4000/change-the-bootstrap-navbar-breakpoint</guid>
        
        <category>css3</category>
        
        <category>css</category>
        
        <category>bootstrap</category>
        
        <category>less</category>
        
        <category>sass</category>
        
        
      </item>
    
      <item>
        <title>How to Install JAVA 8 on CentOS, RHEL and Fedora</title>
        <description>&lt;p&gt;Recently I was instructed to install Java 8 on our servers. There are plenty of reasons for doing that. Here’s how I have done that. Of-course you will need root access to your server. If your are using a shared hosting, then it will be wise to leave this thing to your hosting authority.&lt;/p&gt;

&lt;p&gt;###Download the Java 8
Lets keep the java source to our &lt;code class=&quot;highlighter-rouge&quot;&gt;/opt/&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;####For 64 Bit Servers&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# cd /opt/
# wget --no-cookies --no-check-certificate --header &quot;Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie&quot; &quot;http://download.oracle.com/otn-pub/java/jdk/8u40-b25/jdk-8u40-linux-x64.tar.gz&quot;

# tar xzf jdk-8u40-linux-x64.tar.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;####For 32Bit Servers&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# cd /opt/
# wget --no-cookies --no-check-certificate --header &quot;Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie&quot; &quot;http://download.oracle.com/otn-pub/java/jdk/8u40-b25/jdk-8u40-linux-i586.tar.gz&quot;

# tar xzf jdk-8u40-linux-i586.tar.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;###Install Java 8
Now install it from the &lt;code class=&quot;highlighter-rouge&quot;&gt;jdk1.8.0_40&lt;/code&gt; directory.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# cd /opt/jdk1.8.0_40/
# alternatives --install /usr/bin/java java /opt/jdk1.8.0_40/bin/java 2
# alternatives --config java


There are 3 programs which provide 'java'.

  Selection    Command
-----------------------------------------------
*  1           /opt/jdk1.8.0/bin/java
 + 2           /opt/jdk1.8.0_25/bin/java
   3           /opt/jdk1.8.0_40/bin/java

Enter to keep the current selection[+], or type selection number: 3
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now install rest of the utilities.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# alternatives --install /usr/bin/jar jar /opt/jdk1.8.0_40/bin/jar 2
# alternatives --install /usr/bin/javac javac /opt/jdk1.8.0_40/bin/javac 2
# alternatives --set jar /opt/jdk1.8.0_40/bin/jar
# alternatives --set javac /opt/jdk1.8.0_40/bin/javac 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;At this moment we have installed Java 8. So lets verify it if it’s working properly.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@tecadmin ~# java -version

java version &quot;1.8.0_40&quot;
Java(TM) SE Runtime Environment (build 1.8.0_40-b25)
Java HotSpot(TM) 64-Bit Server VM (build 25.40-b25, mixed mode)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;###Setup system variables
Setup JAVA_HOME Variable&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# export JAVA_HOME=/opt/jdk1.8.0_40
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Setup JRE_HOME Variable&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# export JRE_HOME=/opt/jdk1.8.0_40/jre
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Setup PATH Variable&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# export PATH=$PATH:/opt/jdk1.8.0_40/bin:/opt/jdk1.8.0_40/jre/bin
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That’s the end. Now Java 8 is installed on your server.&lt;/p&gt;
</description>
        <pubDate>Sun, 09 Aug 2015 02:30:21 +0600</pubDate>
        <link>http://localhost:4000/how-to-install-java-8-on-centos-rhel-and-fedora</link>
        <guid isPermaLink="true">http://localhost:4000/how-to-install-java-8-on-centos-rhel-and-fedora</guid>
        
        <category>shell</category>
        
        <category>linux</category>
        
        
      </item>
    
      <item>
        <title>Mastering UFW on Ubuntu</title>
        <description>&lt;p&gt;A month before, I have purchased a node in Digital Ocean. I have to admit it, they are a very good cloud solution provider. From a tiny startup to a large corporate, they have any type of solution. I have chosen Ubuntu 14.4 to go with the Digital Ocean droplet. Why I chose Ubuntu! Because of the vast amount of packages available for it via Aptitude.&lt;/p&gt;

&lt;p&gt;After having my droplet booted up, there are a lot of work to do. I started with installing the UFW.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/2015/May/Firewall-Installation6.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;###What is UFW?
UFW stands for Uncomplicated Firewall, is a front-end to iptables. It will manage your firewall while providing a very easy interface. It’s supported and popular on most of the Linux distos.&lt;/p&gt;

&lt;p&gt;###How to install UFW
UFW can be installed using aptitude. The following command will install UFW.&lt;/p&gt;

&lt;pre class=&quot;brush:shell;&quot;&gt;
$ sudo apt-get install ufw
&lt;/pre&gt;

&lt;p&gt;###Start the UFW
Current status of UFW can be seen using the command below.&lt;/p&gt;
&lt;pre class=&quot;brush:shell;&quot;&gt;
$ sudo ufw status
&lt;/pre&gt;

&lt;p&gt;To start and stop UFW the following commands are used below.&lt;/p&gt;
&lt;pre class=&quot;brush:shell;&quot;&gt;
$ sudo ufw enable
$ sudo ufw disable
&lt;/pre&gt;

&lt;p&gt;###Using IPv6
To enable IPv6 support we need to modify the &lt;strong&gt;/etc/default/ufw&lt;/strong&gt; file.&lt;/p&gt;
&lt;pre class=&quot;brush:shell;&quot;&gt;
$ sudo vi /etc/default/ufw
&lt;/pre&gt;
&lt;p&gt;Then make sure “IPV6” is set to “yes”, like:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;IPV6=yes
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Now restart the UFW.&lt;/p&gt;

&lt;p&gt;###Setup defaults
After installing and starting the UFW, the first task is to setup the default rules. To deny all incoming and outgoing connections I have executed:&lt;/p&gt;
&lt;pre class=&quot;brush:shell;&quot;&gt;
$ sudo ufw default deny incoming
$ sudo ufw default deny outgoing
&lt;/pre&gt;

&lt;p&gt;if you do not want to be so much restrictive, then you can allow all outgoing connections.&lt;/p&gt;

&lt;p&gt;###Some defaults settings
After done so, I needed to configure UFW to continue working. Like allowing SSH, WWW etc.&lt;/p&gt;
&lt;pre class=&quot;brush:shell;&quot;&gt;
$ sudo ufw allow ssh
$ sudo ufw allow www
&lt;/pre&gt;

&lt;p&gt;If you want to allow other ports, follow the command:&lt;/p&gt;
&lt;pre class=&quot;brush:shell;&quot;&gt;
$ sudo ufw allow 8000/tcp
&lt;/pre&gt;

&lt;p&gt;Update your port in place of 8000 and udp if needed in place of tcp. If you need to set rules for port range:&lt;/p&gt;
&lt;pre class=&quot;brush:shell;&quot;&gt;
$ sudo ufw allow 8000:9000/tcp
&lt;/pre&gt;

&lt;p&gt;Setting rules for a specific IP address is also possible:&lt;/p&gt;
&lt;pre class=&quot;brush:shell;&quot;&gt;
$ sudo ufw allow  from 192.168.255.255
&lt;/pre&gt;
&lt;p&gt;Update your IP as needed.&lt;/p&gt;

&lt;p&gt;###Deny a connection
Setting rules to deny is almost like the allow command. We need to replace the allow with deny like:&lt;/p&gt;
&lt;pre class=&quot;brush:shell;&quot;&gt;
$ sudo ufw deny 8000/tcp
&lt;/pre&gt;

&lt;p&gt;###Deleting an existing rule
Deleting a rule is also possible.&lt;/p&gt;
&lt;pre class=&quot;brush:shell;&quot;&gt;
$ sudo ufw delete allow ssh
$ sudo ufw delete allow 80/tcp
$ sudo ufw delete allow 1000:2000/tcp
&lt;/pre&gt;
&lt;p&gt;If this way of deleting seems difficult to you, then you can get the current rules in a numbered list and use that number to delete the rule like:&lt;/p&gt;
&lt;pre class=&quot;brush:shell;&quot;&gt;
$ sudo ufw status numbered
$ sudo ufw delete [number]
&lt;/pre&gt;

&lt;p&gt;###Problem with APT-GET
As I have denied all the connection now, apt-get will not work because of UFW. To fix this issue I have added the following rules:&lt;/p&gt;

&lt;pre class=&quot;brush:shell;&quot;&gt;
ufw allow http
ufw allow 53
ufw allow out http
ufw allow out 53
&lt;/pre&gt;

&lt;p&gt;###RESET everything
If you need to reset the total configuration then:&lt;/p&gt;
&lt;pre class=&quot;brush:shell;&quot;&gt;
$ sudo ufw reset
&lt;/pre&gt;

&lt;p&gt;If you are working on a desktop (not a server), and you have access to a GUI, then you can use GUFW to manage all these settings from a graphical interface. Get it from here &lt;a href=&quot;http://gufw.org/&quot;&gt;http://gufw.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That’s it. That’s how to work with UFW on an Ubuntu platform.&lt;/p&gt;
</description>
        <pubDate>Sat, 16 May 2015 02:50:22 +0600</pubDate>
        <link>http://localhost:4000/mastering-ufw-on-ubuntu</link>
        <guid isPermaLink="true">http://localhost:4000/mastering-ufw-on-ubuntu</guid>
        
        <category>linux</category>
        
        
      </item>
    
      <item>
        <title>How I wrote 66K lines of JavaScript in 10 days</title>
        <description>&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/2015/Mar/4995737599_0f6f878846_z.jpg&quot; alt=&quot;alt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Actually I wrote more than 66K lines of codes, But I’ve removed the view files code because they are not mine. Writing 66K lines of code doesn’t mean anything special. Anyone can write tons of lines of codes. What matters is writing production level of codes. Codes that construct a product which people will pay to use.&lt;/p&gt;

&lt;p&gt;I’m not going to lecture here about what product is and what art is. I’m here to tell you how I wrote those lines of codes in a short amount of time. Obviously the first step you need is to be an empire in programming. There’s no other way or exception, and of-course being this level of code artist takes many days of hard work. It’s not the hard work which will make you a code empire, it’s the intelligence which matters at the end.&lt;/p&gt;

&lt;p&gt;The second thing you need to do is update your coding style so that your code is capable of working in a team. You need to work with a team to achieve this capability. Without practical knowledge no matter how hard you think your code is Okay, your code is gurbase. You have to indent, comment, document, normalize your code to be at this level.&lt;/p&gt;

&lt;p&gt;Then you need to have your own snippet library. You will take the snippets to your codes. This will not come easily. You need to work with a highly qualified team for at least four years to build your own snippet. You can copy other’s snippet, but that will not come in handy when it’s time to use it. Always remember your code is your code, others are not yours.&lt;/p&gt;

&lt;p&gt;You need to use many external tools which will boost your productivity. Like you need to use a &lt;strong&gt;Pomodoro&lt;/strong&gt; clock, you need to use logs while code. You can use a raw dashboard to keep logs. My Mac’s dashboard works fine for me.&lt;/p&gt;

&lt;p&gt;As you will be writing production level of codes your code has to be bug free or tested. I will say that there will be no bug, but your code has to be less buggy. To do this, you need to use unit testing. If you are over confident, then you can also use a continuous integration system. Whatever you do, your code needs to have a confident to work accurately. At this level semicolon (;) missing, spell mistake, case sensitivity mistake are not accepted.&lt;/p&gt;

&lt;p&gt;You need to use an &lt;strong&gt;IDE&lt;/strong&gt;. Most people will prefer Sublime Text. But it’s not actually an IDE in my sense. If you use Sublime Text you will find that finding critical errors are very time-consuming work. IDE will help you in this area. At this level you are a code empire, so an empire needs his crown and it’s an IDE. I use Zend Studio for PHP, WebStorm for JavaScript. There are other exceptions too while working in a very large project which I will write at my next-post.&lt;/p&gt;

&lt;p&gt;If you made yourself this far you are the true code empire, more accurately you are a code artist, a rock-star coder. Remember, never compromise the brotherhood. Your team members are working with you, they have to understand your code at a glance. You cannot thing twice while looking at your old codes. You code is not very simple, but solves everything. Your code contains enough comments, indents and documents. They are well structured and followed by popular coding standards. You have tons of code snippets and all of them are prioritized according to your needs. You’ve assigned hot keys to quickly access your snippet library. You now work using the famous Pomodoro technique.&lt;/p&gt;

&lt;p&gt;Now what’s left is practise, take your skill to the edge. Be a cutting-edge artist. Be a &lt;strong&gt;rock-star coder&lt;/strong&gt;.&lt;/p&gt;
</description>
        <pubDate>Sat, 28 Mar 2015 03:38:18 +0600</pubDate>
        <link>http://localhost:4000/how-i-wrote-66k-lines-of-javascript-in-10-days</link>
        <guid isPermaLink="true">http://localhost:4000/how-i-wrote-66k-lines-of-javascript-in-10-days</guid>
        
        <category>code</category>
        
        <category>project</category>
        
        <category>javascript</category>
        
        <category>js</category>
        
        
      </item>
    
      <item>
        <title>English dictionary text file</title>
        <description>&lt;p&gt;Couple of days before, I was making a search engine for my two projects. One project was using Elasticsearch and another one was using Apache Solr. For them both I needed a file containing all the words from an English dictionary.&lt;/p&gt;

&lt;p&gt;I search here and there and finally found that every unix like system has this kind of file with it to predict text. I was using and iMac. I found the text file in the following location:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/share/dict/words&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;My work is done, I used the file and rebuild the Apache Solr dictionary.&lt;/p&gt;
</description>
        <pubDate>Wed, 25 Mar 2015 06:45:02 +0600</pubDate>
        <link>http://localhost:4000/english-dictionary-text-file</link>
        <guid isPermaLink="true">http://localhost:4000/english-dictionary-text-file</guid>
        
        <category>mac</category>
        
        <category>linux</category>
        
        
      </item>
    
      <item>
        <title>Execute commands after you exit from a shell</title>
        <description>&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/2015/Feb/Screen-Shot-2015-02-11-at-10-54-07-AM.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Most of us used to login to a server using an SSH client. Situations happen like this that a process will take a long time to be finished. System software upgrade is an example of this situation. If we start a command and exit the ssh the process will be stopped immediately. You are probably thinking of running the command on background. But even so, exiting from SSH will terminate the execution. So, is there any solution that the command stays running while we quit the SSH client!&lt;/p&gt;

&lt;p&gt;###Meet the &lt;code class=&quot;highlighter-rouge&quot;&gt;nohup&lt;/code&gt; command&lt;/p&gt;

&lt;p&gt;The answer is obvious, use &lt;strong&gt;nohup&lt;/strong&gt; command line-utility which allows us to run commands or shell script that can continue running in the background after we log out from a shell.&lt;/p&gt;

&lt;p&gt;Use it like:&lt;/p&gt;
&lt;pre class=&quot;brush:shell;&quot;&gt;
$ nohup command-goes-here args &amp;amp;
&lt;/pre&gt;

&lt;p&gt;To view active commands:&lt;/p&gt;
&lt;pre class=&quot;brush:shell;&quot;&gt;
$ jobs -l
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;nohup&lt;/strong&gt; doesn’t change the scheduling priority of the commands. To change the priority we can use &lt;strong&gt;nice&lt;/strong&gt; command with it.&lt;/p&gt;

&lt;pre class=&quot;brush:shell;&quot;&gt;
$ nohup nice -n -5 command-here args &amp;amp;
&lt;/pre&gt;

&lt;p&gt;###Queue the command&lt;/p&gt;

&lt;p&gt;We can schedule the command for later execution on the server. For example, we can run my-shell-script.sh script to queue (one minute) later execution:&lt;/p&gt;
&lt;pre class=&quot;brush:shell;&quot;&gt;
$ echo &quot;my-shell-script.sh&quot; | at now + 1 minute
&lt;/pre&gt;

&lt;p&gt;###Learn to &lt;code class=&quot;highlighter-rouge&quot;&gt;disown&lt;/code&gt; the shell
We can also use screen command for same purpose. The disown shell internal command can do it for us. Here is how you can try it out:&lt;/p&gt;
&lt;pre class=&quot;brush:shell;&quot;&gt;
$ pullftp.sh &amp;amp;
$ disown -h
$ exit
&lt;/pre&gt;

&lt;p&gt;Now we can exit from the SSH. The command will be running on the server.&lt;/p&gt;
</description>
        <pubDate>Mon, 09 Feb 2015 10:11:06 +0600</pubDate>
        <link>http://localhost:4000/execute-commands-after-you-exit-from-a-shell</link>
        <guid isPermaLink="true">http://localhost:4000/execute-commands-after-you-exit-from-a-shell</guid>
        
        <category>shell</category>
        
        <category>unix</category>
        
        <category>linux</category>
        
        
      </item>
    
  </channel>
</rss>
